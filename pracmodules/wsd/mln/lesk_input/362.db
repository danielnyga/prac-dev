//( Later , it was to be called Hudson_Strait . )
1.00  dobj(called-8, Hudson_Strait-9)
1.00  has_pos(Hudson_Strait-9, NNP)
1.00  has_pos(called-8, VB)
1.00  has_sense(Hudson_Strait-9, location.n.01)
1.00  has_sense(called-8, name.v.01)
1.00  is_a(location.n.01, location.n.01)
1.00  is_a(name.v.01, name.v.01)
1.00  predicate(called-8)
---
//Poor winds and fog locked her up in a harbor the crew called `` Lousie_Bay '' .
1.00  dobj(called-13, Lousie_Bay-15)
1.00  has_pos(Lousie_Bay-15, NNP)
1.00  has_pos(called-13, VB)
1.00  has_sense(Lousie_Bay-15, location.n.01)
1.00  has_sense(called-13, name.v.01)
1.00  is_a(crew.n.01, crew.n.01)
1.00  is_a(location.n.01, location.n.01)
1.00  is_a(name.v.01, name.v.01)
1.00  predicate(called-13)
---
//For any such square the middle corner of these will be called the vertex of the square and the corner not on the curve will be called the diagonal point of the square .
1.00  dobj(called-27, corner-20)
1.00  dobj(called-27, point-30)
1.00  has_pos(called-27, VB)
1.00  has_pos(corner-20, NN)
1.00  has_pos(point-30, NN)
1.00  has_sense(called-27, name.v.01)
1.00  has_sense(corner-20, corner.n.02)
1.00  has_sense(point-30, point.n.01)
1.00  is_a(corner.n.02, corner.n.02)
1.00  is_a(name.v.01, name.v.01)
1.00  is_a(point.n.01, point.n.01)
1.00  predicate(called-27)
---
//For any such square the middle corner of these will be called the vertex of the square and the corner not on the curve will be called the diagonal point of the square .
1.00  dobj(called-12, corner-7)
1.00  dobj(called-12, vertex-14)
1.00  has_pos(called-12, VB)
1.00  has_pos(corner-7, NN)
1.00  has_pos(vertex-14, NN)
1.00  has_sense(called-12, name.v.01)
1.00  has_sense(corner-7, corner.n.02)
1.00  has_sense(vertex-14, vertex.n.01)
1.00  is_a(corner.n.02, corner.n.02)
1.00  is_a(name.v.01, name.v.01)
1.00  is_a(square.n.01, square.n.01)
1.00  is_a(vertex.n.01, vertex.n.01)
1.00  predicate(called-12)
---
//The number of ordinary values of the function f ( t ) at t will be called its multiplicity at t .
1.00  dobj(called-17, multiplicity-19)
1.00  dobj(called-17, number-2)
1.00  has_pos(called-17, VB)
1.00  has_pos(multiplicity-19, NN)
1.00  has_pos(number-2, NN)
1.00  has_sense(called-17, name.v.01)
1.00  has_sense(multiplicity-19, multiplicity.n.01)
1.00  has_sense(number-2, number.n.02)
1.00  is_a(multiplicity.n.01, multiplicity.n.01)
1.00  is_a(name.v.01, name.v.01)
1.00  is_a(number.n.02, number.n.02)
1.00  predicate(called-17)
---
//There must be an odd number of such components , which will be called complete components .
1.00  dobj(called-14, components-16)
1.00  has_pos(called-14, VB)
1.00  has_pos(components-16, NN)
1.00  has_sense(called-14, name.v.01)
1.00  has_sense(components-16, component.n.01)
1.00  is_a(component.n.01, component.n.01)
1.00  is_a(name.v.01, name.v.01)
1.00  predicate(called-14)
---
//Out of long experience I have found that incidental figures and other objects like trees , logs , and bushes can be traced from the original sketch and moved about in the major areas on the final sheet until they occupy the right position , which I call ' clicking ' .
1.00  dobj(call-48, clicking-50)
1.00  has_pos(call-48, VB)
1.00  has_pos(clicking-50, VB)
1.00  has_sense(call-48, name.v.01)
1.00  has_sense(clicking-50, snap.v.04)
1.00  is_a(name.v.01, name.v.01)
1.00  is_a(snap.v.04, snap.v.04)
1.00  predicate(call-48)
---
//This increase in the `` threshold '' , as the conventional forces strengthening is called , will prove one of the alliance 's most difficult problems in the months to come .
1.00  dobj(called-15, strengthening-13)
1.00  has_pos(called-15, VB)
1.00  has_pos(strengthening-13, VB)
1.00  has_sense(called-15, name.v.01)
1.00  has_sense(strengthening-13, strengthen.v.01)
1.00  is_a(name.v.01, name.v.01)
1.00  is_a(strengthen.v.01, strengthen.v.01)
1.00  predicate(called-15)
---
//`` P.J. '' - as Ludie called the town - was crowded with summer people who came to the mountains to escape the heat in the big cities .
1.00  dobj(called-7, town-9)
1.00  has_pos(called-7, VB)
1.00  has_pos(town-9, NN)
1.00  has_sense(called-7, name.v.01)
1.00  has_sense(town-9, town.n.01)
1.00  is_a(name.v.01, name.v.01)
1.00  is_a(person.n.01, person.n.01)
1.00  is_a(town.n.01, town.n.01)
1.00  predicate(called-7)
---
//Dover `` publishes '' what the company calls `` Listen_and_Learn '' productions designed to teach foreign languages .
1.00  dobj(calls-8, productions-12)
1.00  has_pos(calls-8, VB)
1.00  has_pos(productions-12, NN)
1.00  has_sense(calls-8, name.v.01)
1.00  has_sense(productions-12, production.n.02)
1.00  is_a(company.n.01, company.n.01)
1.00  is_a(name.v.01, name.v.01)
1.00  is_a(production.n.02, production.n.02)
1.00  predicate(calls-8)
---
//`` Remember to call me Jan '' , Andrei said .
1.00  dobj(call-4, Jan-6)
1.00  has_pos(Jan-6, NNP)
1.00  has_pos(call-4, VB)
1.00  has_sense(Jan-6, person.n.01)
1.00  has_sense(call-4, name.v.01)
1.00  is_a(name.v.01, name.v.01)
1.00  is_a(person.n.01, person.n.01)
1.00  predicate(call-4)
---
//He may call himself a naprapath , a physiotherapist , an electrotherapist , a naturopath , a sanipractor , a medical cultist , a masseur , a `` doctor '' - or what have you .
1.00  dobj(call-3, naprapath-6)
1.00  has_pos(call-3, VB)
1.00  has_pos(naprapath-6, NN)
1.00  has_sense(call-3, name.v.01)
1.00  has_sense(naprapath-6, naprapath.n.01)
1.00  is_a(name.v.01, name.v.01)
1.00  is_a(naprapath.n.01, naprapath.n.01)
1.00  predicate(call-3)
---
//American democratic thought , pointed_up the relation between the Protestant movement in_this country and the development of a social religion , which he called the American Democratic Faith .
1.00  dobj(called-24, Faith-28)
1.00  has_pos(Faith-28, NN)
1.00  has_pos(called-24, VB)
1.00  has_sense(Faith-28, religion.n.01)
1.00  has_sense(called-24, name.v.01)
1.00  is_a(name.v.01, name.v.01)
1.00  is_a(religion.n.01, religion.n.01)
1.00  predicate(called-24)
---
//I used his polarity to illustrate what I thought had happened to us in_that form of liberalism we call Progressivism .
1.00  dobj(call-19, Progressivism-20)
1.00  has_pos(Progressivism-20, NN)
1.00  has_pos(call-19, VB)
1.00  has_sense(Progressivism-20, progressivism.n.01)
1.00  has_sense(call-19, name.v.01)
1.00  is_a(name.v.01, name.v.01)
1.00  is_a(progressivism.n.01, progressivism.n.01)
1.00  predicate(call-19)
---
//And with Progressivism the Religion_of_Humanity was replacing what Gabriel called Christian supernaturalism .
1.00  dobj(called-10, supernaturalism-12)
1.00  has_pos(called-10, VB)
1.00  has_pos(supernaturalism-12, NN)
1.00  has_sense(called-10, name.v.01)
1.00  has_sense(supernaturalism-12, supernaturalism.n.01)
1.00  is_a(name.v.01, name.v.01)
1.00  is_a(person.n.01, person.n.01)
1.00  is_a(supernaturalism.n.01, supernaturalism.n.01)
1.00  predicate(called-10)
---
//The Commission seems to represent the viewpoint of_what I would call the unconscious liberal , but not unconscious enough , to invoke the now taboo symbolism of socialism .
1.00  dobj(call-11, enough-19)
1.00  has_pos(call-11, VB)
1.00  has_pos(enough-19, RB)
1.00  has_sense(call-11, name.v.01)
1.00  has_sense(enough-19, enough.r.01)
1.00  is_a(enough.r.01, enough.r.01)
1.00  is_a(name.v.01, name.v.01)
1.00  predicate(call-11)
---
//A century ago , Newman saw that liberalism ( what we now might call secularism ) would gradually but definitely make its mark on English_Protestantism , and that even high_Anglicanism would someday no_longer be a `` serviceable breakwater against doctrinal errors more fundamental than its own '' .
1.00  dobj(call-14, secularism-15)
1.00  has_pos(call-14, VB)
1.00  has_pos(secularism-15, NN)
1.00  has_sense(call-14, name.v.01)
1.00  has_sense(secularism-15, secularism.n.01)
1.00  is_a(name.v.01, name.v.01)
1.00  is_a(secularism.n.01, secularism.n.01)
1.00  predicate(call-14)
---
//The set of all binomial_distributions is called the family of binomial_distributions , but in general discussions this expression is often shortened to `` the binomial_distribution '' , or even `` the binomial '' when the context is clear .
1.00  dobj(called-7, family-9)
1.00  dobj(called-7, set-2)
1.00  has_pos(called-7, VB)
1.00  has_pos(family-9, NN)
1.00  has_pos(set-2, NN)
1.00  has_sense(called-7, name.v.01)
1.00  has_sense(family-9, family.n.01)
1.00  has_sense(set-2, set.n.01)
1.00  is_a(family.n.01, family.n.01)
1.00  is_a(name.v.01, name.v.01)
1.00  is_a(set.n.01, set.n.01)
1.00  predicate(called-7)
---
//Ace_of_spades - a widow , that was what they called a widow , these low-class crooks remembered Mr._Skyros distractedly .
1.00  dobj(called-10, widow-12)
1.00  has_pos(called-10, VB)
1.00  has_pos(widow-12, NN)
1.00  has_sense(called-10, name.v.01)
1.00  has_sense(widow-12, widow.n.01)
1.00  is_a(name.v.01, name.v.01)
1.00  is_a(widow.n.01, widow.n.01)
1.00  predicate(called-10)
---
//I must add at_once that these animals are what we call `` queens '' , young females that have mated in the previous summer or autumn .
1.00  dobj(call-11, queens-13)
1.00  has_pos(call-11, VB)
1.00  has_pos(queens-13, NN)
1.00  has_sense(call-11, name.v.01)
1.00  has_sense(queens-13, queen.n.01)
1.00  is_a(name.v.01, name.v.01)
1.00  is_a(queen.n.01, queen.n.01)
1.00  predicate(call-11)
---
//Private international_law ( which Americans call the `` conflict of laws '' ) was thus segregated from international_law proper , or , as it is often called , public international_law .
1.00  dobj(call-6, conflict-9)
1.00  has_pos(call-6, VB)
1.00  has_pos(conflict-9, NN)
1.00  has_sense(call-6, name.v.01)
1.00  has_sense(conflict-9, conflict.n.01)
1.00  is_a(conflict.n.01, conflict.n.01)
1.00  is_a(name.v.01, name.v.01)
1.00  predicate(call-6)
---
//By Theorem 10 , D is a diagonalizable operator which we shall call the diagonalizable part of T .
1.00  dobj(call-13, part-16)
1.00  has_pos(call-13, VB)
1.00  has_pos(part-16, NN)
1.00  has_sense(call-13, name.v.01)
1.00  has_sense(part-16, part.n.01)
1.00  is_a(name.v.01, name.v.01)
1.00  is_a(part.n.01, part.n.01)
1.00  predicate(call-13)
---
//The Act further provides for a `` floor '' or minimum allotment , set at the 1954 level , which is called the `` base '' allotment , and a `` ceiling '' or maximum allotment , for each State .
1.00  dobj(called-22, allotment-27)
1.00  has_pos(allotment-27, NN)
1.00  has_pos(called-22, VB)
1.00  has_sense(allotment-27, allotment.n.01)
1.00  has_sense(called-22, name.v.01)
1.00  is_a(allotment.n.01, allotment.n.01)
1.00  is_a(name.v.01, name.v.01)
1.00  is_a(state.n.01, state.n.01)
1.00  predicate(called-22)
