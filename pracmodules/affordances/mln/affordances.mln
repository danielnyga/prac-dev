#include "predicates.mln"

// place/put/set/... an object  ///remove is_a?
0 dobj(?w1,?w2) ^ has_sense(?w1,?s1) ^ is_a(?s1,+?c) ^ has_sense(?w2,?s2) ^ affordance(?s2,+?a)
//0 dobj(?w1,?w2) ^ has_sense(?w1,?s1) ^ is_a(?s1,+?c) ^ has_sense(?w2,?s2) ^ affordance(?s2,Contain-Ability)

// w3 is on w2
0 prep_on(?w1,?w2) ^ has_sense(?w2,?s2) ^ affordance(?s2,Support-Ability)
0 prep_on(?w1,?w2) ^ has_sense(?w2,?s2) ^ !affordance(?s2,Support-Ability)
0 prep_on(?w1,?w2) ^ nsubj(?w1,?w3) ^ has_sense(?w3,?s3) ^ affordance(?s3,Stack-Ability)
0 prep_on(?w1,?w2) ^ nsubj(?w1,?w3) ^ has_sense(?w3,?s3) ^ !affordance(?s3,Stack-Ability)

// w3 is on top of w2
0 prep_on_top_of(?w1,?w2) ^ has_sense(?w2,?s2) ^ affordance(?s2,Support-Ability)
0 prep_on_top_of(?w1,?w2) ^ has_sense(?w2,?s2) ^ !affordance(?s2,Support-Ability)
0 prep_on_top_of(?w1,?w2) ^ nsubj(?w1,?w3) ^ has_sense(?w3,?s3) ^ affordance(?s3,Stack-Ability)
0 prep_on_top_of(?w1,?w2) ^ nsubj(?w1,?w3) ^ has_sense(?w3,?s3) ^ !affordance(?s3,Stack-Ability)

// w2 contains something
0 prep_into(?w1,?w2) ^ has_sense(?w2,?s2) ^ affordance(?s2,Contain-Ability)
0 prep_into(?w1,?w2) ^ has_sense(?w2,?s2) ^ !affordance(?s2,Contain-Ability)
0 prep_in(?w1,?w2) ^ has_sense(?w2,?s2) ^ affordance(?s2,Contain-Ability)
0 prep_in(?w1,?w2) ^ has_sense(?w2,?s2) ^ !affordance(?s2,Contain-Ability)

// cook w2
0 dep(?w1,?w2) ^ has_sense(?w1,?s1) ^ is_a(?s1,+?c) ^ has_sense(?w2,?s2) ^ affordance(?s2,Cook-Ability)
0 dep(?w1,?w2) ^ has_sense(?w1,?s1) ^ is_a(?s1,+?c) ^ has_sense(?w2,?s2) ^ !affordance(?s2,Cook-Ability)

// something sharp can be used to cut
0 amod(?w1,?w2) ^ has_sense(?w1,?s1) ^ affordance(?s1,Incision-Ability)
