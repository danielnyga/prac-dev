// Place a spatula underneath the pancake. (http://www.wikihow.com/Flip-a-Pancake)

det(pancake-6,the-5)
det(spatula-3,a-2)
dobj(Place-1,spatula-3)
has_pos(Place-1,VB)
has_pos(a-2,DT)
has_pos(pancake-6,NN)
has_pos(spatula-3,NN)
has_pos(the-5,DT)
prep_underneath(spatula-3,pancake-6)
root(ROOT-0,Place-1)

has_sense(Place-1,place.v.01)
has_sense(spatula-3,spatula.n.01)
has_sense(pancake-6,pancake.n.01)
has_sense(a-2,null)
has_sense(the-5,null)

is_a(place.v.01,place.v.01)
is_a(spatula.n.01,spatula.n.01)
is_a(pancake.n.01,pancake.n.01)
is_a(null,null)

affordance(spatula.n.01,Grab-Support-Ability)

---
// The bowl is on the table.

det(bowl-2,The-1)
det(table-6,the-5)
has_pos(The-1,DT)
has_pos(bowl-2,NN)
has_pos(is-3,VBZ)
has_pos(table-6,NN)
has_pos(the-5,DT)
nsubj(is-3,bowl-2)
prep_on(is-3,table-6)
root(ROOT-0,is-3)

has_sense(table-6,table.n.02)
has_sense(bowl-2,bowl.n.01)
has_sense(The-1,null)
has_sense(is-3,null)
has_sense(the-5,null)

is_a(table.n.02,table.n.02)
is_a(bowl.n.01,bowl.n.01)
is_a(null,null)

affordance(bowl.n.01,Stack-Ability)
affordance(table.n.02,Support-Ability)

---
// The bowl is on top of the table.

det(bowl-2,The-1)
det(table-8,the-7)
has_pos(The-1,DT)
has_pos(bowl-2,NN)
has_pos(is-3,VBZ)
has_pos(table-8,NN)
has_pos(the-7,DT)
nsubj(is-3,bowl-2)
prep_on_top_of(is-3,table-8)
root(ROOT-0,is-3)

has_sense(table-8,table.n.02)
has_sense(bowl-2,bowl.n.01)
has_sense(The-1,null)
has_sense(is-3,null)
has_sense(the-7,null)

is_a(table.n.02,table.n.02)
is_a(bowl.n.01,bowl.n.01)
is_a(null,null)

affordance(bowl.n.01,Stack-Ability)
affordance(table.n.01,Support-Ability)

---
// Put a centerpiece on the table. (http://www.wikihow.com/Set-the-Table-%28For-Kids%29)

det(centerpiece-3,a-2)
det(table-6,the-5)
dobj(Put-1,centerpiece-3)
has_pos(Put-1,VB)
has_pos(a-2,DT)
has_pos(centerpiece-3,NN)
has_pos(table-6,NN)
has_pos(the-5,DT)
prep_on(Put-1,table-6)
root(ROOT-0,Put-1)

has_sense(Put-1,put.v.01)
has_sense(a-2,null)
has_sense(the-5,null)
has_sense(table-6,table.n.02)
has_sense(centerpiece-3,centerpiece.n.02)

is_a(put.v.01,put.v.01)
is_a(table.n.02,table.n.02)
is_a(centerpiece.n.02,centerpiece.n.02)
is_a(null,null)

affordance(table.n.01,Support-Ability)
affordance(centerpiece.n.02,Grab-Support-Ability)

---
// Place the teaspoon to the right of the knife. (http://www.wikihow.com/Set-a-Table)

det(knife-9,the-8)
det(right-6,the-5)
det(teaspoon-3,the-2)
dobj(Place-1,teaspoon-3)
has_pos(Place-1,VB)
has_pos(knife-9,NN)
has_pos(right-6,NN)
has_pos(teaspoon-3,NN)
has_pos(the-2,DT)
has_pos(the-5,DT)
has_pos(the-8,DT)
prep_of(right-6,knife-9)
prep_to(Place-1,right-6)
root(ROOT-0,Place-1)

has_sense(Place-1,place.v.01)
has_sense(teaspoon-3,teaspoon.n.02)
has_sense(knife-9,null)
has_sense(right-6,null)
has_sense(the-2,null)
has_sense(the-5,null)
has_sense(the-8,null)

is_a(place.v.01,place.v.01)
is_a(teaspoon.n.02,teaspoon.n.02)
is_a(null,null)

affordance(teaspoon.n.02,Grab-Support-Ability)

---
// Place the soupspoon to the right of the teaspoon (http://www.wikihow.com/Set-a-Table)

det(right-6,the-5)
det(soupspoon-3,the-2)
det(teaspoon-9,the-8)
dobj(Place-1,soupspoon-3)
has_pos(Place-1,VB)
has_pos(right-6,NN)
has_pos(soupspoon-3,NN)
has_pos(teaspoon-9,NN)
has_pos(the-2,DT)
has_pos(the-5,DT)
has_pos(the-8,DT)
prep_of(right-6,teaspoon-9)
prep_to(Place-1,right-6)
root(ROOT-0,Place-1)

has_sense(Place-1,place.v.01)
has_sense(right-6,null)
has_sense(teaspoon-9,teaspoon.n.02)
has_sense(the-2,null)
has_sense(the-5,null)
has_sense(the-8,null)
has_sense(soupspoon-3,soupspoon.n.01)

is_a(place.v.01,place.v.01)
is_a(soupspoon.n.01,soupspoon.n.01)
is_a(null,null)

affordance(soupspoon.n.01,Grab-Support-Ability)

---
// Put the napkin to the left of the placemat.

det(left-6,the-5)
det(napkin-3,the-2)
det(placemat-9,the-8)
dobj(Put-1,napkin-3)
has_pos(Put-1,VB)
has_pos(left-6,NN)
has_pos(napkin-3,NN)
has_pos(placemat-9,NN)
has_pos(the-2,DT)
has_pos(the-5,DT)
has_pos(the-8,DT)
prep_of(left-6,placemat-9)
prep_to(Put-1,left-6)
root(ROOT-0,Put-1)

has_sense(napkin-3,napkin.n.01)
has_sense(Put-1,put.v.01)
has_sense(left-6,null)
has_sense(placemat-9,place-mat.n.01)
has_sense(the-2,null)
has_sense(the-5,null)
has_sense(the-8,null)

is_a(put.v.01,put.v.01)
is_a(napkin.n.01,napkin.n.01)
is_a(null,null)

affordance(napkin.n.01,Grab-Support-Ability)

---
// Crack eggs into a bowl and beat until fluffy.

conj_and(Crack-1,beat-7)
det(bowl-5,a-4)
dobj(Crack-1,eggs-2)
has_pos(Crack-1,VB)
has_pos(a-4,DT)
has_pos(beat-7,VB)
has_pos(bowl-5,NN)
has_pos(eggs-2,NNS)
has_pos(fluffy-9,NNP)
prep_into(Crack-1,bowl-5)
prep_until(beat-7,fluffy-9)
root(ROOT-0,Crack-1)

has_sense(bowl-5,bowl.n.01)
has_sense(eggs-2,egg.n.02)
has_sense(Crack-1,crack.v.01)
has_sense(a-4,null)
has_sense(beat-7,null)
has_sense(fluffy-9,null)

is_a(crack.v.01,crack.v.01)
is_a(bowl.n.01,bowl.n.01)
is_a(egg.n.02,egg.n.02)
is_a(null,null)

affordance(bowl.n.01,Contain-Ability)
affordance(egg.n.02,Grab-Support-Ability)

---
// Lightly place the steak in the pan and begin to fry. (http://www.wikihow.com/Cook-Steak-in-a-Frying-Pan)

advmod(place-2,Lightly-1)
conj_and(place-2,begin-9)
det(pan-7,the-6)
det(steak-4,the-3)
dobj(place-2,steak-4)
has_pos(Lightly-1,RB)
has_pos(begin-9,VB)
has_pos(fry-11,NN)
has_pos(pan-7,NN)
has_pos(place-2,VB)
has_pos(steak-4,NN)
has_pos(the-3,DT)
has_pos(the-6,DT)
prep_in(steak-4,pan-7)
prep_to(begin-9,fry-11)
root(ROOT-0,place-2)

has_sense(steak-4,steak.n.01)
has_sense(pan-7,pan.n.01)
has_sense(Lightly-1,null)
has_sense(begin-9,null)
has_sense(fry-11,null)
has_sense(place-2,place.v.01)
has_sense(the-3,null)
has_sense(the-6,null)

is_a(place.v.01,place.v.01)
is_a(steak.n.01,steak.n.01)
is_a(pan.n.01,pan.n.01)
is_a(null,null)

affordance(pan.n.01,Contain-Ability)
affordance(steak.n.01,Grab-Support-Ability)

---
// Cook the steak for anywhere from 3 to 6 minutes per side (http://www.wikihow.com/Cook-Steak-in-a-Frying-Pan)

dep(6-9,to-8)
dep(Cook-1,steak-3)
det(steak-3,the-2)
has_pos(3-7,CD)
has_pos(6-9,CD)
has_pos(Cook-1,NNP)
has_pos(anywhere-5,RB)
has_pos(for-4,IN)
has_pos(minutes-10,NNS)
has_pos(side-12,NN)
has_pos(steak-3,NN)
has_pos(the-2,DT)
has_pos(to-8,TO)
num(minutes-10,6-9)
number(6-9,3-7)
pobj(for-4,anywhere-5)
prep(steak-3,for-4)
prep_from(anywhere-5,minutes-10)
prep_per(minutes-10,side-12)
root(ROOT-0,Cook-1)

has_sense(Cook-1,cook.v.02)
has_sense(steak-3,steak.n.01)
has_sense(3-7,null)
has_sense(6-9,null)
has_sense(anywhere-5,null)
has_sense(for-4,null)
has_sense(minutes-10,null)
has_sense(side-12,null)
has_sense(the-2,null)
has_sense(to-8,null)

is_a(cook.v.02,cook.v.02)
is_a(steak.n.01,steak.n.01)
is_a(null,null)

affordance(steak.n.01,Cook-Ability)

---
//  Add 2 tablespoons of butter into the pan (http://www.wikihow.com/Cook-Steak-in-a-Frying-Pan)

det(pan-8,the-7)
dobj(Add-1,tablespoons-3)
has_pos(2-2,CD)
has_pos(Add-1,VB)
has_pos(butter-5,NN)
has_pos(pan-8,NN)
has_pos(tablespoons-3,NNS)
has_pos(the-7,DT)
num(tablespoons-3,2-2)
prep_into(Add-1,pan-8)
prep_of(tablespoons-3,butter-5)
root(ROOT-0,Add-1)

has_sense(pan-8,pan.n.01)
has_sense(tablespoons-3,tablespoon.n.02)
has_sense(butter-5,butter.n.01)
has_sense(2-2,null)
has_sense(Add-1,add.v.01)
has_sense(the-7,null)

is_a(butter.n.01,butter.n.01)
is_a(pan.n.01,pan.n.01)
is_a(add.v.01,add.v.01)
is_a(tablespoon.n.02,tablespoon.n.02)
is_a(null,null)

affordance(pan.n.01,Contain-Ability)
affordance(tablespoon.n.02,Grab-Support-Ability)

---
// Tilt the pan slightly and spoon the melted butter on top of the steak 

advmod(Tilt-1,slightly-4)
amod(butter-9,melted-8)
conj_and(Tilt-1,spoon-6)
det(butter-9,the-7)
det(pan-3,the-2)
det(steak-14,the-13)
dobj(Tilt-1,pan-3)
dobj(spoon-6,butter-9)
has_pos(Tilt-1,VB)
has_pos(butter-9,NN)
has_pos(melted-8,JJ)
has_pos(pan-3,NN)
has_pos(slightly-4,RB)
has_pos(spoon-6,VB)
has_pos(steak-14,NN)
has_pos(the-13,DT)
has_pos(the-2,DT)
has_pos(the-7,DT)
prep_on_top_of(spoon-6,steak-14)
root(ROOT-0,Tilt-1)

has_sense(Tilt-1,tilt.v.01)
has_sense(butter-9,butter.n.01)
has_sense(melted-8,null)
has_sense(pan-3,pan.n.01)
has_sense(slightly-4,null)
has_sense(spoon-6,spoon.n.01)
has_sense(steak-14,steak.n.01)
has_sense(the-13,null)
has_sense(the-2,null)
has_sense(the-7,null)

is_a(tilt.v.01,tilt.v.01)
is_a(butter.n.01,butter.n.01)
is_a(pan.n.01,pan.n.01)
is_a(spoon.n.01,spoon.n.01)
is_a(steak.n.01,steak.n.01)
is_a(null,null)

affordance(pan.n.01,Grab-Support-Ability)
affordance(steak.n.01,Support-Ability)

---
// Cut the onion so that your knife cuts through the tip and root,not through the middle (http://www.wikihow.com/Cut-an-Onion)

advcl(Cut-1,cuts-8)
advmod(cuts-8,so-4)
conj_and(tip-11,root-13)
dep(cuts-8,that-5)
det(middle-18,the-17)
det(onion-3,the-2)
det(tip-11,the-10)
dobj(Cut-1,onion-3)
has_pos(Cut-1,VB)
has_pos(cuts-8,VBZ)
has_pos(knife-7,NN)
has_pos(middle-18,NN)
has_pos(not-15,RB)
has_pos(onion-3,NN)
has_pos(root-13,NN)
has_pos(so-4,RB)
has_pos(that-5,IN)
has_pos(the-10,DT)
has_pos(the-17,DT)
has_pos(the-2,DT)
has_pos(tip-11,NN)
has_pos(your-6,PRP$)
neg(cuts-8,not-15)
nsubj(cuts-8,knife-7)
poss(knife-7,your-6)
prep_through(cuts-8,middle-18)
prep_through(cuts-8,tip-11)
root(ROOT-0,Cut-1)

has_sense(Cut-1,cut.v.01)
has_sense(cuts-8,cut.v.01)
has_sense(knife-7,knife.n.01)
has_sense(middle-18,null)
has_sense(not-15,null)
has_sense(onion-3,onion.n.03)
has_sense(root-13,root.n.01)
has_sense(so-4,null)
has_sense(that-5,null)
has_sense(the-10,null)
has_sense(the-17,null)
has_sense(the-2,null)
has_sense(tip-11,tip.n.01)
has_sense(your-6,null)

is_a(cut.v.01,cut.v.01)
is_a(knife.n.01,knife.n.01)
is_a(onion.n.03,onion.n.03)
is_a(root.n.01,root.n.01)
is_a(tip.n.01,tip.n.01)
is_a(null,null)

affordance(knife.n.01,Incision-Ability)

---
// Taking a large,sharp knife,begin cutting the onion lengthwise (http://www.wikihow.com/Cut-an-Onion)


amod(knife-6,large-3)
amod(knife-6,sharp-5)
dep(begin-8,Taking-1)
det(knife-6,a-2)
det(lengthwise-12,the-10)
dobj(Taking-1,knife-6)
has_pos(Taking-1,VBG)
has_pos(a-2,DT)
has_pos(begin-8,VBP)
has_pos(cutting-9,VBG)
has_pos(knife-6,NN)
has_pos(large-3,JJ)
has_pos(lengthwise-12,NN)
has_pos(onion-11,NN)
has_pos(sharp-5,JJ)
has_pos(the-10,DT)
nn(lengthwise-12,onion-11)
nsubj(begin-8,lengthwise-12)
root(ROOT-0,begin-8)
xcomp(begin-8,cutting-9) 

has_sense(Taking-1,take.v.10)
has_sense(a-2,null)
has_sense(begin-8,null)
has_sense(cutting-9,cut.v.01)
has_sense(knife-6,knife.n.01)
has_sense(large-3,null)
has_sense(lengthwise-12,null)
has_sense(onion-11,onion.n.03)
has_sense(sharp-5,sharp.a.09)
has_sense(the-10,null)

is_a(take.v.10,take.v.10)
is_a(cut.v.01,cut.v.01)
is_a(knife.n.01,knife.n.01)
is_a(onion.n.03,onion.n.03)
is_a(sharp.a.09,sharp.a.09)
is_a(null,null)

affordance(knife.n.01,Incision-Ability)
affordance(knife.n.01,Grab-Support-Ability)

---
// Be careful when using the sharp knife to cut the tuna. (http://www.wikihow.com/Cut-Tuna-Steaks)


advmod(using-4,when-3)
amod(knife-7,sharp-6)
aux(cut-9,to-8)
cop(careful-2,Be-1)
dep(careful-2,using-4)
det(knife-7,the-5)
det(tuna-11,the-10)
dobj(cut-9,tuna-11)
dobj(using-4,knife-7)
has_pos(Be-1,VB)
has_pos(careful-2,JJ)
has_pos(cut-9,VB)
has_pos(knife-7,NN)
has_pos(sharp-6,JJ)
has_pos(the-10,DT)
has_pos(the-5,DT)
has_pos(to-8,TO)
has_pos(tuna-11,NN)
has_pos(using-4,VBG)
has_pos(when-3,WRB)
root(ROOT-0,careful-2)
xcomp(using-4,cut-9)

has_sense(Be-1,null)
has_sense(careful-2,null)
has_sense(cut-9,cut.v.01)
has_sense(knife-7,knife.n.01)
has_sense(sharp-6,sharp.a.09)
has_sense(the-10,null)
has_sense(the-5,null)
has_sense(to-8,null)
has_sense(tuna-11,tuna.n.02)
has_sense(using-4,use.v.01)
has_sense(when-3,null)

is_a(cut.v.01,cut.v.01)
is_a(knife.n.01,knife.n.01)
is_a(sharp.a.09,sharp.a.09)
is_a(tuna.n.02,tuna.n.02)
is_a(use.v.01,use.v.01)
is_a(null,null)

affordance(knife.n.01,Incision-Ability)

---
// own Examples
// Take a pencil to draw an image. 

aux(draw-5,to-4)
det(image-7,an-6)
det(pencil-3,a-2)
dobj(Take-1,pencil-3)
dobj(draw-5,image-7)
has_pos(Take-1,VB)
has_pos(a-2,DT)
has_pos(an-6,DT)
has_pos(draw-5,VB)
has_pos(image-7,NN)
has_pos(pencil-3,NN)
has_pos(to-4,TO)
infmod(pencil-3,draw-5)
root(ROOT-0,Take-1)

has_sense(Take-1,take.v.10)
has_sense(a-2,null)
has_sense(an-6,null)
has_sense(draw-5,draw.v.06)
has_sense(image-7,image.n.03)
has_sense(pencil-3,pencil.n.01)
has_sense(to-4,null)

is_a(take.v.10,take.v.10)
is_a(draw.v.06,draw.v.06)
is_a(image.n.03,image.n.03)
is_a(pencil.n.01,pencil.n.01)
is_a(null,null)

affordance(pencil.n.01,Grab-Support-Ability)

---
// Grab a spatula to flip the pancake. 

aux(flip-5,to-4)
det(pancake-7,the-6)
det(spatula-3,a-2)
dobj(Grab-1,spatula-3)
dobj(flip-5,pancake-7)
has_pos(Grab-1,VB)
has_pos(a-2,DT)
has_pos(flip-5,VB)
has_pos(pancake-7,NN)
has_pos(spatula-3,NN)
has_pos(the-6,DT)
has_pos(to-4,TO)
infmod(spatula-3,flip-5)
root(ROOT-0,Grab-1)

has_sense(Grab-1,grab.v.03)
has_sense(a-2,null)
has_sense(flip-5,flip.v.04)
has_sense(pancake-7,pancake.n.01)
has_sense(spatula-3,spatula.n.01)
has_sense(the-6,null)
has_sense(to-4,null)

is_a(grab.v.03,grab.v.03)
is_a(flip.v.04,flip.v.04)
is_a(pancake.n.01,pancake.n.01)
is_a(spatula.n.01,spatula.n.01)
is_a(null,null)

affordance(spatula.n.01,Grab-Support-Ability)

---
// Place a plate on the table. 

det(plate-3,a-2)
det(table-6,the-5)
dobj(Place-1,plate-3)
has_pos(Place-1,VB)
has_pos(a-2,DT)
has_pos(plate-3,NN)
has_pos(table-6,NN)
has_pos(the-5,DT)
prep_on(Place-1,table-6)
root(ROOT-0,Place-1)

has_sense(Place-1,place.v.01)
has_sense(a-2,null)
has_sense(plate-3,plate.n.04)
has_sense(table-6,table.n.02)
has_sense(the-5,null)

is_a(place.v.01,place.v.01)
is_a(plate.n.04,plate.n.04)
is_a(table.n.02,table.n.02)
is_a(null,null)

affordance(plate.n.04,Grab-Support-Ability) 
affordance(table.n.02,Support-Ability)

---
// A carton is a boxlike object.

amod(object-6,boxlike-5)
cop(object-6,is-3)
det(carton-2,A-1)
det(object-6,a-4)
has_pos(A-1,DT)
has_pos(a-4,DT)
has_pos(boxlike-5,JJ)
has_pos(carton-2,NN)
has_pos(is-3,VBZ)
has_pos(object-6,NN)
nsubj(object-6,carton-2)
root(ROOT-0,object-6)

has_sense(A-1,null)
has_sense(a-4,null)
has_sense(boxlike-5,boxlike.s.01)
has_sense(carton-2,carton.n.02)
has_sense(is-3,be.v.01)
has_sense(object-6,object.n.01)

is_a(be.v.01,be.v.01)
is_a(boxlike.s.01,boxlike.s.01)
is_a(carton.n.02,carton.n.02)
is_a(object.n.01,object.n.01)
is_a(null,null)

affordance(carton.n.01,Stack-Ability)

---
// Cut the meat with a knife. 

dep(Cut-1,meat-3)
det(knife-6,a-5)
det(meat-3,the-2)
has_pos(Cut-1,NNP)
has_pos(a-5,DT)
has_pos(knife-6,NN)
has_pos(meat-3,NN)
has_pos(the-2,DT)
prep_with(meat-3,knife-6)
root(ROOT-0,Cut-1)

has_sense(Cut-1,cut.v.01)
has_sense(a-5,null)
has_sense(knife-6,knife.n.01)
has_sense(meat-3,meat.n.01)
has_sense(the-2,null)

is_a(cut.v.01,cut.v.01)
is_a(knife.n.01,knife.n.01)
is_a(meat.n.01,meat.n.01)
is_a(null,null)

affordance(knife.n.01,Incision-Ability)

---
// Scissors can be used to cut herbs. 

aux(cut-6,to-5)
aux(used-4,can-2)
auxpass(used-4,be-3)
dobj(cut-6,herbs-7)
has_pos(Scissors-1,NNS)
has_pos(be-3,VB)
has_pos(can-2,MD)
has_pos(cut-6,VB)
has_pos(herbs-7,NNS)
has_pos(to-5,TO)
has_pos(used-4,VBN)
nsubjpass(used-4,Scissors-1)
root(ROOT-0,used-4)
xcomp(used-4,cut-6)

has_sense(Scissors-1,scissors.n.01)
has_sense(be-3,be.v.01)
has_sense(can-2,null)
has_sense(cut-6,cut.v.01)
has_sense(herbs-7,herb.n.02)
has_sense(to-5,null)
has_sense(used-4,use.v.01)

is_a(scissors.n.01,scissors.n.01)
is_a(be.v.01,be.v.01)
is_a(cut.v.01,cut.v.01)
is_a(herb.n.02,herb.n.02)
is_a(use.v.01,use.v.01)
is_a(null,null)

affordance(scissors.n.01,Incision-Ability)

---
// Use a knife to cut the bread. 

aux(cut-5,to-4)
det(bread-7,the-6)
det(knife-3,a-2)
dobj(Use-1,knife-3)
dobj(cut-5,bread-7)
has_pos(Use-1,VB)
has_pos(a-2,DT)
has_pos(bread-7,NN)
has_pos(cut-5,VB)
has_pos(knife-3,NN)
has_pos(the-6,DT)
has_pos(to-4,TO)
infmod(knife-3,cut-5)
root(ROOT-0,Use-1)

has_sense(Use-1,use.v.01)
has_sense(a-2,null)
has_sense(bread-7,bread.n.01)
has_sense(cut-5,cut.v.01)
has_sense(knife-3,knife.n.01)
has_sense(the-6,null)
has_sense(to-4,null)

is_a(use.v.01,use.v.01)
is_a(bread.n.01,bread.n.01)
is_a(cut.v.01,cut.v.01)
is_a(knife.n.01,knife.n.01)
is_a(null,null)

affordance(knife.n.01,Incision-Ability)

---
// A bowl is used to hold liquids. 

aux(hold-6,to-5)
auxpass(used-4,is-3)
det(bowl-2,A-1)
dobj(hold-6,liquids-7)
has_pos(A-1,DT)
has_pos(bowl-2,NN)
has_pos(hold-6,VB)
has_pos(is-3,VBZ)
has_pos(liquids-7,NNS)
has_pos(to-5,TO)
has_pos(used-4,VBN)
nsubjpass(used-4,bowl-2)
root(ROOT-0,used-4)
xcomp(used-4,hold-6)

has_sense(A-1,null)
has_sense(bowl-2,bowl.n.01)
has_sense(hold-6,hold.v.11)
has_sense(is-3,be.v.01)
has_sense(liquids-7,liquid.n.01)
has_sense(to-5,null)
has_sense(used-4,use.v.01)

is_a(bowl.n.01,bowl.n.01)
is_a(hold.v.11,hold.v.11)
is_a(be.v.01,be.v.01)
is_a(liquid.n.01,liquid.n.01)
is_a(use.v.01,use.v.01)
is_a(null,null)

affordance(bowl.n.01,Contain-Ability)

---
// A glass contains beverages. 

det(glass-2,A-1)
dobj(contains-3,beverages-4)
has_pos(A-1,DT)
has_pos(beverages-4,NNS)
has_pos(contains-3,VBZ)
has_pos(glass-2,NN)
nsubj(contains-3,glass-2)
root(ROOT-0,contains-3)

has_sense(A-1,null)
has_sense(beverages-4,beverage.n.01)
has_sense(contains-3,contain.v.02)
has_sense(glass-2,glass.n.02)

is_a(beverage.n.01,beverage.n.01)
is_a(contain.v.02,contain.v.02)
is_a(glass.n.02,glass.n.02)
is_a(null,null)

affordance(glass.n.02,Contain-Ability)

---
// A fridge is used to store perishable food. 

amod(food-8,perishable-7)
aux(store-6,to-5)
auxpass(used-4,is-3)
det(fridge-2,A-1)
dobj(store-6,food-8)
has_pos(A-1,DT)
has_pos(food-8,NN)
has_pos(fridge-2,NN)
has_pos(is-3,VBZ)
has_pos(perishable-7,JJ)
has_pos(store-6,VB)
has_pos(to-5,TO)
has_pos(used-4,VBN)
nsubjpass(used-4,fridge-2)
root(ROOT-0,used-4)
xcomp(used-4,store-6)

has_sense(A-1,null)
has_sense(food-8,food.n.01)
has_sense(fridge-2,fridge.n.01)
has_sense(is-3,be.v.01)
has_sense(perishable-7,perishable.a.01)
has_sense(store-6,store.v.01)
has_sense(to-5,null)
has_sense(used-4,use.v.01)

is_a(food.n.01,food.n.01)
is_a(fridge.n.01,fridge.n.01)
is_a(be.v.01,be.v.01)
is_a(perishable.a.01,perishable.a.01)
is_a(store.v.01,store.v.01)
is_a(use.v.01,use.v.01)
is_a(null,null)

affordance(fridge.n.01,Contain-Ability)

---
// A fridge can be used for storage. 

aux(used-5,can-3)
auxpass(used-5,be-4)
det(fridge-2,A-1)
has_pos(A-1,DT)
has_pos(be-4,VB)
has_pos(can-3,MD)
has_pos(fridge-2,NN)
has_pos(storage-7,NN)
has_pos(used-5,VBN)
nsubjpass(used-5,fridge-2)
prep_for(used-5,storage-7)
root(ROOT-0,used-5)

has_sense(A-1,null)
has_sense(be-4,be.v.01)
has_sense(can-3,null)
has_sense(fridge-2,fridge.n.01)
has_sense(storage-7,storage.n.01)
has_sense(used-5,use.v.01)

is_a(be.v.01,be.v.01)
is_a(fridge.n.01,fridge.n.01)
is_a(storage.n.01,storage.n.01)
is_a(use.v.01,use.v.01)
is_a(null,null)

affordance(fridge.n.01,Contain-Ability)

---
// There is coffee in the mug.

det(mug-6,the-5)
expl(is-2,There-1)
has_pos(There-1,EX)
has_pos(coffee-3,NN)
has_pos(is-2,VBZ)
has_pos(mug-6,NN)
has_pos(the-5,DT)
nsubj(is-2,coffee-3)
prep_in(coffee-3,mug-6)
root(ROOT-0,is-2)

has_sense(There-1,null)
has_sense(coffee-3,coffee.n.01)
has_sense(is-2,be.v.01)
has_sense(mug-6,mug.n.01)
has_sense(the-5,null)

is_a(coffee.n.01,coffee.n.01)
is_a(be.v.01,be.v.01)
is_a(mug.n.01,mug.n.01)
is_a(null,null)

affordance(mug.n.04,Contain-Ability)