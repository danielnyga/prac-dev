/* **************************************************************************** 
 * WIKIHOW.COM -- NATURAL-LANGUAGE INSTRUCTIONS
 * 
 * (C) 2011-2013 by Daniel Nyga (nyga@cs.uni-bremen.edu)
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 ******************************************************************************/
// place the butter and garlic into a small cup and mix well .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(butter-3,butter-3-sense)
is_a(butter-3-sense,butter.n.01)
has_sense(garlic-5,garlic-5-sense)
is_a(garlic-5-sense,garlic.n.02)
has_sense(small-8,small-8-sense)
is_a(small-8-sense,small.a.01)
has_sense(cup-9,cup-9-sense)
is_a(cup-9-sense,cup.n.01)
has_sense(mix-11,mix-11-sense)
is_a(mix-11-sense,blend.v.03)
has_sense(well-12,well-12-sense)
is_a(well-12-sense,well.r.02)
root(ROOT-0, place-1)
det(butter-3, the-2)
dobj(place-1, butter-3)
conj_and(butter-3, garlic-5)
det(cup-9, a-7)
amod(cup-9, small-8)
prep_into(place-1, cup-9)
conj_and(place-1, mix-11)
advmod(mix-11, well-12)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(butter-3,NN)
has_pos(garlic-5,NN)
has_pos(a-7,DT)
has_pos(small-8,JJ)
has_pos(cup-9,NN)
has_pos(mix-11,VB)
has_pos(well-12,RB)
has_sense(a-7, null)
has_sense(the-2, null)
---
// You need a bowl and a fork to mix with .
has_sense(need-2,need-2-sense)
is_a(need-2-sense,necessitate.v.01)
has_sense(bowl-4,bowl-4-sense)
is_a(bowl-4-sense,bowl.n.01)
has_sense(fork-7,fork-7-sense)
is_a(fork-7-sense,fork.n.01)
has_sense(mix-9,mix-9-sense)
is_a(mix-9-sense,blend.v.03)
nsubj(need-2, You-1)
root(ROOT-0, need-2)
det(bowl-4, a-3)
nsubj(mix-9, bowl-4)
det(fork-7, a-6)
conj_and(bowl-4, fork-7)
aux(mix-9, to-8)
xcomp(need-2, mix-9)
prep(mix-9, with-10)
has_pos(You-1,PRP)
has_pos(need-2,VBP)
has_pos(a-3,DT)
has_pos(bowl-4,NN)
has_pos(a-6,DT)
has_pos(fork-7,NN)
has_pos(to-8,TO)
has_pos(mix-9,VB)
has_pos(with-10,IN)
has_sense(to-8, null)
has_sense(You-1, null)
has_sense(with-10, null)
has_sense(a-3, null)
has_sense(a-6, null)
---
// mix carefully so that you do n't destroy the avocado .
has_sense(mix-1,mix-1-sense)
is_a(mix-1-sense,blend.v.03)
has_sense(carefully-2,carefully-2-sense)
is_a(carefully-2-sense,carefully.r.01)
has_sense(so-3,so-3-sense)
is_a(so-3-sense,so.r.02)
has_sense(destroy-8,destroy-8-sense)
is_a(destroy-8-sense,destroy.v.02)
has_sense(avocado-10,avocado-10-sense)
is_a(avocado-10-sense,avocado.n.01)
root(ROOT-0, mix-1)
advmod(so-3, carefully-2)
advmod(mix-1, so-3)
dep(destroy-8, that-4)
nsubj(destroy-8, you-5)
aux(destroy-8, do-6)
neg(destroy-8, n't-7)
ccomp(so-3, destroy-8)
det(avocado-10, the-9)
dobj(destroy-8, avocado-10)
has_pos(mix-1,VB)
has_pos(carefully-2,RB)
has_pos(so-3,RB)
has_pos(that-4,IN)
has_pos(you-5,PRP)
has_pos(do-6,VBP)
has_pos(n't-7,RB)
has_pos(destroy-8,VB)
has_pos(the-9,DT)
has_pos(avocado-10,NN)
has_sense(you-5, null)
has_sense(the-9, null)
has_sense(that-4, null)
has_sense(do-6, null)
has_sense(n't-7, null)
---
// add vanilla and mix into egg mixture .
has_sense(add-1,add-1-sense)
is_a(add-1-sense,add.v.01)
has_sense(vanilla-2,vanilla-2-sense)
is_a(vanilla-2-sense,vanilla.n.02)
has_sense(egg-6,egg-6-sense)
is_a(egg-6-sense,egg.n.02)
has_sense(mixture-7,mixture-7-sense)
is_a(mixture-7-sense,concoction.n.01)
root(ROOT-0, add-1)
dobj(add-1, vanilla-2)
conj_and(vanilla-2, mix-4)
nn(mixture-7, egg-6)
prep_into(add-1, mixture-7)
has_pos(add-1,VB)
has_pos(vanilla-2,NN)
has_pos(mix-4,NN)
has_pos(egg-6,NN)
has_pos(mixture-7,NN)
has_sense(mix-4, null)
---
// gently fold in the egg_white and mix them with the batter until everything be a fairly even consistency .
has_sense(gently-1,gently-1-sense)
is_a(gently-1-sense,gently.r.02)
has_sense(fold-2,fold-2-sense)
is_a(fold-2-sense,fold.v.02)
has_sense(egg_white-5,egg_white-5-sense)
is_a(egg_white-5-sense,egg_white.n.01)
has_sense(batter-11,batter-11-sense)
is_a(batter-11-sense,batter.n.02)
has_sense(be-14,be-14-sense)
is_a(be-14-sense,be.v.01)
has_sense(fairly-16,fairly-16-sense)
is_a(fairly-16-sense,reasonably.r.01)
has_sense(consistency-18,consistency-18-sense)
is_a(consistency-18-sense,consistency.n.01)
advmod(fold-2, gently-1)
root(ROOT-0, fold-2)
det(egg_white-5, the-4)
prep_in(fold-2, egg_white-5)
conj_and(fold-2, mix-7)
dobj(mix-7, them-8)
det(batter-11, the-10)
prep_with(mix-7, batter-11)
mark(consistency-18, until-12)
nsubj(consistency-18, everything-13)
cop(consistency-18, be-14)
det(consistency-18, a-15)
advmod(even-17, fairly-16)
amod(consistency-18, even-17)
advcl(mix-7, consistency-18)
has_pos(gently-1,RB)
has_pos(fold-2,VB)
has_pos(the-4,DT)
has_pos(egg_white-5,NN)
has_pos(mix-7,VB)
has_pos(them-8,PRP)
has_pos(the-10,DT)
has_pos(batter-11,NN)
has_pos(until-12,IN)
has_pos(everything-13,NN)
has_pos(be-14,VBP)
has_pos(a-15,DT)
has_pos(fairly-16,RB)
has_pos(even-17,RB)
has_pos(consistency-18,NN)
has_sense(until-12, null)
has_sense(them-8, null)
has_sense(even-17, null)
has_sense(everything-13, null)
has_sense(the-4, null)
has_sense(a-15, null)
has_sense(the-10, null)
has_sense(mix-7, null)
---
// Mix all ingredient thoroughly in the small mixing_bowl .
has_sense(ingredient-3,ingredient-3-sense)
is_a(ingredient-3-sense,ingredient.n.03)
has_sense(thoroughly-4,thoroughly-4-sense)
is_a(thoroughly-4-sense,thoroughly.r.01)
has_sense(small-7,small-7-sense)
is_a(small-7-sense,small.a.01)
has_sense(mixing_bowl-8,mixing_bowl-8-sense)
is_a(mixing_bowl-8-sense,mixing_bowl.n.01)
root(ROOT-0, Mix-1)
det(ingredient-3, all-2)
dobj(Mix-1, ingredient-3)
advmod(Mix-1, thoroughly-4)
det(mixing_bowl-8, the-6)
amod(mixing_bowl-8, small-7)
prep_in(Mix-1, mixing_bowl-8)
has_pos(Mix-1,VB)
has_pos(all-2,DT)
has_pos(ingredient-3,NN)
has_pos(thoroughly-4,RB)
has_pos(the-6,DT)
has_pos(small-7,JJ)
has_pos(mixing_bowl-8,NN)
has_sense(the-6, null)
has_sense(Mix-1, null)
has_sense(all-2, null)
---
// prepare the cake_mix as direct .
has_sense(prepare-1,prepare-1-sense)
is_a(prepare-1-sense,fix.v.12)
has_sense(cake_mix-3,cake_mix-3-sense)
is_a(cake_mix-3-sense,cake_mix.n.01)
has_sense(direct-5,direct-5-sense)
is_a(direct-5-sense,direct.v.01)
root(ROOT-0, prepare-1)
det(cake_mix-3, the-2)
nsubj(direct-5, cake_mix-3)
advmod(direct-5, as-4)
xcomp(prepare-1, direct-5)
has_pos(prepare-1,VB)
has_pos(the-2,DT)
has_pos(cake_mix-3,NN)
has_pos(as-4,RB)
has_pos(direct-5,JJ)
has_sense(the-2, null)
has_sense(as-4, null)
---
// get a bowl and mix the blue_cheese , walnut , and pear together .
has_sense(get-1,get-1-sense)
is_a(get-1-sense,get.v.01)
has_sense(bowl-3,bowl-3-sense)
is_a(bowl-3-sense,bowl.n.01)
has_sense(mix-5,mix-5-sense)
is_a(mix-5-sense,blend.v.03)
has_sense(blue_cheese-7,blue_cheese-7-sense)
is_a(blue_cheese-7-sense,bleu.n.01)
has_sense(walnut-9,walnut-9-sense)
is_a(walnut-9-sense,walnut.n.01)
has_sense(pear-12,pear-12-sense)
is_a(pear-12-sense,pear.n.01)
has_sense(together-13,together-13-sense)
is_a(together-13-sense,together.r.02)
root(ROOT-0, get-1)
det(bowl-3, a-2)
dobj(get-1, bowl-3)
conj_and(get-1, mix-5)
det(pear-12, the-6)
nn(pear-12, blue_cheese-7)
conj_and(pear-12, walnut-9)
dobj(mix-5, pear-12)
advmod(pear-12, together-13)
has_pos(get-1,VB)
has_pos(a-2,DT)
has_pos(bowl-3,NN)
has_pos(mix-5,VB)
has_pos(the-6,DT)
has_pos(blue_cheese-7,NN)
has_pos(walnut-9,NN)
has_pos(pear-12,NN)
has_pos(together-13,RB)
has_sense(the-6, null)
has_sense(a-2, null)
---
// mix the soy_sauce and mirin together .
has_sense(mix-1,mix-1-sense)
is_a(mix-1-sense,blend.v.03)
has_sense(soy_sauce-3,soy_sauce-3-sense)
is_a(soy_sauce-3-sense,soy_sauce.n.01)
root(ROOT-0, mix-1)
det(soy_sauce-3, the-2)
dobj(mix-1, soy_sauce-3)
conj_and(soy_sauce-3, mirin-5)
advmod(mix-1, together-6)
has_pos(mix-1,VB)
has_pos(the-2,DT)
has_pos(soy_sauce-3,NN)
has_pos(mirin-5,NN)
has_pos(together-6,RB)
has_sense(together-6, null)
has_sense(mirin-5, null)
has_sense(the-2, null)
---
// mix the noodle and topping gently to prevent the noodle from clump up .
has_sense(mix-1,mix-1-sense)
is_a(mix-1-sense,blend.v.03)
has_sense(noodle-3,noodle-3-sense)
is_a(noodle-3-sense,noodle.n.01)
has_sense(prevent-8,prevent-8-sense)
is_a(prevent-8-sense,prevent.v.01)
has_sense(noodle-10,noodle-10-sense)
is_a(noodle-10-sense,noodle.n.01)
has_sense(clump-12,clump-12-sense)
is_a(clump-12-sense,bunch.v.02)
root(ROOT-0, mix-1)
det(noodle-3, the-2)
dobj(mix-1, noodle-3)
conj_and(mix-1, topping-5)
advmod(topping-5, gently-6)
aux(prevent-8, to-7)
xcomp(topping-5, prevent-8)
det(noodle-10, the-9)
dobj(prevent-8, noodle-10)
prep_from(noodle-10, clump-12)
prt(prevent-8, up-13)
has_pos(mix-1,VB)
has_pos(the-2,DT)
has_pos(noodle-3,NN)
has_pos(topping-5,VBG)
has_pos(gently-6,RB)
has_pos(to-7,TO)
has_pos(prevent-8,VB)
has_pos(the-9,DT)
has_pos(noodle-10,NN)
has_pos(clump-12,NN)
has_pos(up-13,RP)
has_sense(the-2, null)
has_sense(the-9, null)
has_sense(to-7, null)
has_sense(gently-6, null)
has_sense(topping-5, null)
has_sense(up-13, null)
---
// Mix the quinoa with the egg , flour and yeast flake .
has_sense(egg-6,egg-6-sense)
is_a(egg-6-sense,egg.n.02)
has_sense(flour-8,flour-8-sense)
is_a(flour-8-sense,flour.n.01)
has_sense(yeast-10,yeast-10-sense)
is_a(yeast-10-sense,yeast.n.01)
has_sense(flake-11,flake-11-sense)
is_a(flake-11-sense,bit.n.02)
root(ROOT-0, Mix-1)
det(quinoa-3, the-2)
dep(Mix-1, quinoa-3)
det(flake-11, the-5)
nn(flake-11, egg-6)
conj_and(egg-6, flour-8)
conj_and(egg-6, yeast-10)
prep_with(quinoa-3, flake-11)
has_pos(Mix-1,NNP)
has_pos(the-2,DT)
has_pos(quinoa-3,NN)
has_pos(the-5,DT)
has_pos(egg-6,NN)
has_pos(flour-8,NN)
has_pos(yeast-10,NN)
has_pos(flake-11,NNS)
has_sense(the-5, null)
has_sense(quinoa-3, null)
has_sense(Mix-1, null)
has_sense(the-2, null)
---
// mix gently with a spoon .
has_sense(mix-1,mix-1-sense)
is_a(mix-1-sense,blend.v.03)
has_sense(spoon-5,spoon-5-sense)
is_a(spoon-5-sense,spoon.n.01)
root(ROOT-0, mix-1)
advmod(mix-1, gently-2)
det(spoon-5, a-4)
prep_with(mix-1, spoon-5)
has_pos(mix-1,VB)
has_pos(gently-2,RB)
has_pos(a-4,DT)
has_pos(spoon-5,NN)
has_sense(a-4, null)
has_sense(gently-2, null)
---
// Mix the 8 cup of water and the baking_soda in a shallow pan .
has_sense(cup-4,cup-4-sense)
is_a(cup-4-sense,cup.n.04)
has_sense(water-6,water-6-sense)
is_a(water-6-sense,water.n.06)
has_sense(baking_soda-9,baking_soda-9-sense)
is_a(baking_soda-9-sense,bicarbonate_of_soda.n.01)
has_sense(shallow-12,shallow-12-sense)
is_a(shallow-12-sense,shallow.a.01)
has_sense(pan-13,pan-13-sense)
is_a(pan-13-sense,pan.n.01)
root(ROOT-0, Mix-1)
det(cup-4, the-2)
num(cup-4, 8-3)
dep(Mix-1, cup-4)
prep_of(cup-4, water-6)
det(baking_soda-9, the-8)
conj_and(cup-4, baking_soda-9)
det(pan-13, a-11)
amod(pan-13, shallow-12)
prep_in(baking_soda-9, pan-13)
has_pos(Mix-1,NNP)
has_pos(the-2,DT)
has_pos(8-3,CD)
has_pos(cup-4,NN)
has_pos(water-6,NN)
has_pos(the-8,DT)
has_pos(baking_soda-9,NN)
has_pos(a-11,DT)
has_pos(shallow-12,JJ)
has_pos(pan-13,NN)
has_sense(a-11, null)
has_sense(Mix-1, null)
has_sense(the-8, null)
has_sense(the-2, null)
has_sense(8-3, null)
---
// gradually mix through .
has_sense(gradually-1,gradually-1-sense)
is_a(gradually-1-sense,gradually.r.01)
has_sense(mix-2,mix-2-sense)
is_a(mix-2-sense,blend.v.03)
advmod(mix-2, gradually-1)
root(ROOT-0, mix-2)
prt(mix-2, through-3)
has_pos(gradually-1,RB)
has_pos(mix-2,VB)
has_pos(through-3,RP)
has_sense(through-3, null)
---
// add both eggs and mix till all lumps removed and its smooth .
has_sense(add-1,add-1-sense)
is_a(add-1-sense,add.v.01)
has_sense(eggs-3,eggs-3-sense)
is_a(eggs-3-sense,egg.n.02)
has_sense(mix-5,mix-5-sense)
is_a(mix-5-sense,blend.v.03)
has_sense(smooth-12,smooth-12-sense)
is_a(smooth-12-sense,smooth.a.01)
root(ROOT-0, add-1)
det(eggs-3, both-2)
dobj(add-1, eggs-3)
conj_and(add-1, mix-5)
mark(lumps-8, till-6)
nsubj(lumps-8, all-7)
advcl(mix-5, lumps-8)
dobj(lumps-8, removed-9)
poss(smooth-12, its-11)
conj_and(removed-9, smooth-12)
has_pos(add-1,VB)
has_pos(both-2,DT)
has_pos(eggs-3,NNS)
has_pos(mix-5,VB)
has_pos(till-6,IN)
has_pos(all-7,DT)
has_pos(lumps-8,VBZ)
has_pos(removed-9,NNP)
has_pos(its-11,PRP$)
has_pos(smooth-12,JJ)
has_sense(lumps-8, null)
has_sense(till-6, null)
has_sense(its-11, null)
has_sense(both-2, null)
has_sense(all-7, null)
has_sense(removed-9, null)
---
// add two teaspoon of vinegar and mix well .
has_sense(add-1,add-1-sense)
is_a(add-1-sense,add.v.01)
has_sense(teaspoon-3,teaspoon-3-sense)
is_a(teaspoon-3-sense,teaspoon.n.01)
has_sense(vinegar-5,vinegar-5-sense)
is_a(vinegar-5-sense,vinegar.n.01)
has_sense(mix-7,mix-7-sense)
is_a(mix-7-sense,blend.v.03)
has_sense(well-8,well-8-sense)
is_a(well-8-sense,well.r.02)
root(ROOT-0, add-1)
num(teaspoon-3, two-2)
dobj(add-1, teaspoon-3)
prep_of(teaspoon-3, vinegar-5)
conj_and(add-1, mix-7)
advmod(mix-7, well-8)
has_pos(add-1,VB)
has_pos(two-2,CD)
has_pos(teaspoon-3,NN)
has_pos(vinegar-5,NN)
has_pos(mix-7,VB)
has_pos(well-8,RB)
has_sense(two-2, null)
---
// In a separate bowl , mix together the cornstarch , dry_mustard , and 2 tablespoon of vinegar until well combine .
has_sense(bowl-4,bowl-4-sense)
is_a(bowl-4-sense,bowl.n.01)
has_sense(cornstarch-9,cornstarch-9-sense)
is_a(cornstarch-9-sense,cornstarch.n.01)
has_sense(dry_mustard-11,dry_mustard-11-sense)
is_a(dry_mustard-11-sense,powdered_mustard.n.01)
has_sense(tablespoon-15,tablespoon-15-sense)
is_a(tablespoon-15-sense,tablespoon.n.01)
has_sense(vinegar-17,vinegar-17-sense)
is_a(vinegar-17-sense,vinegar.n.01)
has_sense(well-19,well-19-sense)
is_a(well-19-sense,well.r.02)
has_sense(combine-20,combine-20-sense)
is_a(combine-20-sense,compound.v.05)
det(bowl-4, a-2)
amod(bowl-4, separate-3)
prep_in(dry_mustard-11, bowl-4)
ccomp(dry_mustard-11, mix-6)
prt(mix-6, together-7)
det(cornstarch-9, the-8)
dobj(mix-6, cornstarch-9)
root(ROOT-0, dry_mustard-11)
num(tablespoon-15, 2-14)
nsubj(combine-20, tablespoon-15)
prep_of(tablespoon-15, vinegar-17)
advmod(combine-20, until-18)
advmod(until-18, well-19)
conj_and(dry_mustard-11, combine-20)
has_pos(a-2,DT)
has_pos(separate-3,JJ)
has_pos(bowl-4,NN)
has_pos(mix-6,VB)
has_pos(together-7,RP)
has_pos(the-8,DT)
has_pos(cornstarch-9,NN)
has_pos(dry_mustard-11,VBD)
has_pos(2-14,CD)
has_pos(tablespoon-15,NN)
has_pos(vinegar-17,NN)
has_pos(until-18,IN)
has_pos(well-19,RB)
has_pos(combine-20,VBP)
has_sense(together-7, null)
has_sense(mix-6, null)
has_sense(the-8, null)
has_sense(2-14, null)
has_sense(separate-3, null)
has_sense(a-2, null)
has_sense(until-18, null)
---
// cut the strawberries into small piece and mix them with the blueberries and blackberries .
has_sense(cut-1,cut-1-sense)
is_a(cut-1-sense,cut.v.01)
has_sense(small-5,small-5-sense)
is_a(small-5-sense,small.a.01)
has_sense(piece-6,piece-6-sense)
is_a(piece-6-sense,piece.n.01)
root(ROOT-0, cut-1)
det(strawberries-3, the-2)
dobj(cut-1, strawberries-3)
amod(piece-6, small-5)
prep_into(cut-1, piece-6)
conj_and(cut-1, mix-8)
dobj(mix-8, them-9)
det(blueberries-12, the-11)
prep_with(mix-8, blueberries-12)
conj_and(blueberries-12, blackberries-14)
has_pos(cut-1,VB)
has_pos(the-2,DT)
has_pos(strawberries-3,NNS)
has_pos(small-5,JJ)
has_pos(piece-6,NN)
has_pos(mix-8,VB)
has_pos(them-9,PRP)
has_pos(the-11,DT)
has_pos(blueberries-12,NNS)
has_pos(blackberries-14,NNS)
has_sense(them-9, null)
has_sense(blackberries-14, null)
has_sense(the-2, null)
has_sense(mix-8, null)
has_sense(strawberries-3, null)
has_sense(the-11, null)
has_sense(blueberries-12, null)
---
// mix well and bring it to a simmer .
has_sense(mix-1,mix-1-sense)
is_a(mix-1-sense,blend.v.03)
has_sense(well-2,well-2-sense)
is_a(well-2-sense,well.r.01)
has_sense(bring-4,bring-4-sense)
is_a(bring-4-sense,bring.v.02)
has_sense(simmer-8,simmer-8-sense)
is_a(simmer-8-sense,simmer.n.01)
root(ROOT-0, mix-1)
advmod(mix-1, well-2)
conj_and(mix-1, bring-4)
dobj(bring-4, it-5)
det(simmer-8, a-7)
prep_to(bring-4, simmer-8)
has_pos(mix-1,VB)
has_pos(well-2,RB)
has_pos(bring-4,VB)
has_pos(it-5,PRP)
has_pos(a-7,DT)
has_pos(simmer-8,NN)
has_sense(it-5, null)
has_sense(a-7, null)
---
// mix together one cup of baking mix and 1\/2 of a cup of soy milk .
has_sense(mix-1,mix-1-sense)
is_a(mix-1-sense,blend.v.03)
has_sense(cup-4,cup-4-sense)
is_a(cup-4-sense,cup.n.04)
has_sense(mix-7,mix-7-sense)
is_a(mix-7-sense,mix.n.01)
has_sense(cup-12,cup-12-sense)
is_a(cup-12-sense,cup.n.04)
has_sense(soy-14,soy-14-sense)
is_a(soy-14-sense,soy.n.04)
has_sense(milk-15,milk-15-sense)
is_a(milk-15-sense,milk.n.04)
root(ROOT-0, mix-1)
prt(mix-1, together-2)
num(cup-4, one-3)
dobj(mix-1, cup-4)
amod(mix-7, baking-6)
prep_of(cup-4, mix-7)
conj_and(cup-4, 1\/2-9)
det(cup-12, a-11)
prep_of(1\/2-9, cup-12)
nn(milk-15, soy-14)
prep_of(cup-12, milk-15)
has_pos(mix-1,VB)
has_pos(together-2,RP)
has_pos(one-3,CD)
has_pos(cup-4,NN)
has_pos(baking-6,JJ)
has_pos(mix-7,NN)
has_pos(1\/2-9,CD)
has_pos(a-11,DT)
has_pos(cup-12,NN)
has_pos(soy-14,NN)
has_pos(milk-15,NN)
has_sense(a-11, null)
has_sense(together-2, null)
has_sense(1\/2-9, null)
has_sense(one-3, null)
has_sense(baking-6, null)
---
// mix all ingredient together in a large bowl .
has_sense(mix-1,mix-1-sense)
is_a(mix-1-sense,blend.v.03)
has_sense(ingredient-3,ingredient-3-sense)
is_a(ingredient-3-sense,ingredient.n.03)
has_sense(large-7,large-7-sense)
is_a(large-7-sense,large.a.01)
has_sense(bowl-8,bowl-8-sense)
is_a(bowl-8-sense,bowl.n.01)
root(ROOT-0, mix-1)
det(ingredient-3, all-2)
dobj(mix-1, ingredient-3)
advmod(mix-1, together-4)
det(bowl-8, a-6)
amod(bowl-8, large-7)
prep_in(mix-1, bowl-8)
has_pos(mix-1,VB)
has_pos(all-2,DT)
has_pos(ingredient-3,NN)
has_pos(together-4,RB)
has_pos(a-6,DT)
has_pos(large-7,JJ)
has_pos(bowl-8,NN)
has_sense(together-4, null)
has_sense(all-2, null)
has_sense(a-6, null)
---
// Measure out the ingredient place the flour , salt egg and milk in a large jug and mix it together with an electric_mixer for two minutes .
has_sense(ingredient-4,ingredient-4-sense)
is_a(ingredient-4-sense,ingredient.n.03)
has_sense(place-5,place-5-sense)
is_a(place-5-sense,put.v.01)
has_sense(flour-7,flour-7-sense)
is_a(flour-7-sense,flour.n.01)
has_sense(salt-9,salt-9-sense)
is_a(salt-9-sense,salt.n.02)
has_sense(egg-10,egg-10-sense)
is_a(egg-10-sense,egg.n.02)
has_sense(milk-12,milk-12-sense)
is_a(milk-12-sense,milk.n.01)
has_sense(large-15,large-15-sense)
is_a(large-15-sense,large.a.01)
has_sense(jug-16,jug-16-sense)
is_a(jug-16-sense,jug.n.01)
has_sense(mix-18,mix-18-sense)
is_a(mix-18-sense,mix.v.05)
has_sense(together-20,together-20-sense)
is_a(together-20-sense,together.r.01)
has_sense(electric_mixer-23,electric_mixer-23-sense)
is_a(electric_mixer-23-sense,electric_mixer.n.01)
nsubj(place-5, Measure-1)
advmod(place-5, out-2)
det(ingredient-4, the-3)
pobj(out-2, ingredient-4)
root(ROOT-0, place-5)
det(egg-10, the-6)
nn(egg-10, flour-7)
conj_and(egg-10, salt-9)
dobj(place-5, egg-10)
conj_and(egg-10, milk-12)
det(jug-16, a-14)
amod(jug-16, large-15)
prep_in(egg-10, jug-16)
conj_and(place-5, mix-18)
dobj(mix-18, it-19)
det(electric_mixer-23, an-22)
prep_together_with(mix-18, electric_mixer-23)
num(minutes-26, two-25)
prep_for(electric_mixer-23, minutes-26)
has_pos(Measure-1,NN)
has_pos(out-2,IN)
has_pos(the-3,DT)
has_pos(ingredient-4,NN)
has_pos(place-5,VBP)
has_pos(the-6,DT)
has_pos(flour-7,NN)
has_pos(salt-9,NN)
has_pos(egg-10,NN)
has_pos(milk-12,NN)
has_pos(a-14,DT)
has_pos(large-15,JJ)
has_pos(jug-16,NN)
has_pos(mix-18,VB)
has_pos(it-19,PRP)
has_pos(an-22,DT)
has_pos(electric_mixer-23,NN)
has_pos(two-25,CD)
has_pos(minutes-26,NNS)
has_sense(the-6, null)
has_sense(the-3, null)
has_sense(a-14, null)
has_sense(Measure-1, null)
has_sense(two-25, null)
has_sense(an-22, null)
has_sense(minutes-26, null)
has_sense(it-19, null)
has_sense(out-2, null)
---
// You simply want to mix all the ingredient so they be evenly distributed .
has_sense(simply-2,simply-2-sense)
is_a(simply-2-sense,merely.r.01)
has_sense(want-3,want-3-sense)
is_a(want-3-sense,desire.v.01)
has_sense(mix-5,mix-5-sense)
is_a(mix-5-sense,blend.v.03)
has_sense(ingredient-8,ingredient-8-sense)
is_a(ingredient-8-sense,ingredient.n.03)
has_sense(be-11,be-11-sense)
is_a(be-11-sense,be.v.01)
has_sense(evenly-12,evenly-12-sense)
is_a(evenly-12-sense,evenly.r.01)
nsubj(want-3, You-1)
advmod(want-3, simply-2)
root(ROOT-0, want-3)
aux(mix-5, to-4)
xcomp(want-3, mix-5)
predet(ingredient-8, all-6)
det(ingredient-8, the-7)
dobj(mix-5, ingredient-8)
mark(distributed-13, so-9)
nsubjpass(distributed-13, they-10)
auxpass(distributed-13, be-11)
advmod(distributed-13, evenly-12)
advcl(mix-5, distributed-13)
has_pos(You-1,PRP)
has_pos(simply-2,RB)
has_pos(want-3,VBP)
has_pos(to-4,TO)
has_pos(mix-5,VB)
has_pos(all-6,PDT)
has_pos(the-7,DT)
has_pos(ingredient-8,NN)
has_pos(so-9,IN)
has_pos(they-10,PRP)
has_pos(be-11,VB)
has_pos(evenly-12,RB)
has_pos(distributed-13,VBN)
has_sense(the-7, null)
has_sense(You-1, null)
has_sense(to-4, null)
has_sense(so-9, null)
has_sense(distributed-13, null)
has_sense(they-10, null)
has_sense(all-6, null)
---
// Mix in all of the rest of the water .
has_sense(rest-6,rest-6-sense)
is_a(rest-6-sense,remainder.n.01)
has_sense(water-9,water-9-sense)
is_a(water-9-sense,water.n.06)
root(ROOT-0, Mix-1)
prep_in(Mix-1, all-3)
det(rest-6, the-5)
prep_of(all-3, rest-6)
det(water-9, the-8)
prep_of(Mix-1, water-9)
has_pos(Mix-1,NNP)
has_pos(all-3,DT)
has_pos(the-5,DT)
has_pos(rest-6,NN)
has_pos(the-8,DT)
has_pos(water-9,NN)
has_sense(the-5, null)
has_sense(Mix-1, null)
has_sense(the-8, null)
has_sense(all-3, null)
---
// add the vanilla_extract and mix well .
has_sense(add-1,add-1-sense)
is_a(add-1-sense,add.v.01)
has_sense(vanilla_extract-3,vanilla_extract-3-sense)
is_a(vanilla_extract-3-sense,vanilla.n.02)
has_sense(mix-5,mix-5-sense)
is_a(mix-5-sense,blend.v.03)
has_sense(well-6,well-6-sense)
is_a(well-6-sense,well.r.01)
root(ROOT-0, add-1)
det(vanilla_extract-3, the-2)
dobj(add-1, vanilla_extract-3)
conj_and(vanilla_extract-3, mix-5)
advmod(add-1, well-6)
has_pos(add-1,VB)
has_pos(the-2,DT)
has_pos(vanilla_extract-3,NN)
has_pos(mix-5,NN)
has_pos(well-6,RB)
has_sense(the-2, null)
---
// add salt and mix everything together with a large spoon .
has_sense(add-1,add-1-sense)
is_a(add-1-sense,add.v.01)
has_sense(salt-2,salt-2-sense)
is_a(salt-2-sense,salt.n.02)
has_sense(mix-4,mix-4-sense)
is_a(mix-4-sense,blend.v.03)
has_sense(together-6,together-6-sense)
is_a(together-6-sense,together.r.01)
has_sense(large-9,large-9-sense)
is_a(large-9-sense,large.a.01)
has_sense(spoon-10,spoon-10-sense)
is_a(spoon-10-sense,spoon.n.01)
root(ROOT-0, add-1)
nn(everything-5, salt-2)
conj_and(salt-2, mix-4)
dobj(add-1, everything-5)
det(spoon-10, a-8)
amod(spoon-10, large-9)
prep_together_with(add-1, spoon-10)
has_pos(add-1,VB)
has_pos(salt-2,NN)
has_pos(mix-4,NN)
has_pos(everything-5,NN)
has_pos(a-8,DT)
has_pos(large-9,JJ)
has_pos(spoon-10,NN)
has_sense(a-8, null)
has_sense(everything-5, null)
---
// mix gently with a wooden_spoon .
has_sense(mix-1,mix-1-sense)
is_a(mix-1-sense,blend.v.03)
has_sense(gently-2,gently-2-sense)
is_a(gently-2-sense,gently.r.02)
has_sense(wooden_spoon-5,wooden_spoon-5-sense)
is_a(wooden_spoon-5-sense,wooden_spoon.n.02)
root(ROOT-0, mix-1)
advmod(mix-1, gently-2)
det(wooden_spoon-5, a-4)
prep_with(mix-1, wooden_spoon-5)
has_pos(mix-1,VB)
has_pos(gently-2,RB)
has_pos(a-4,DT)
has_pos(wooden_spoon-5,NN)
has_sense(a-4, null)
---
// prepare cake_mix according to box direction .
has_sense(prepare-1,prepare-1-sense)
is_a(prepare-1-sense,fix.v.12)
has_sense(cake_mix-2,cake_mix-2-sense)
is_a(cake_mix-2-sense,cake_mix.n.01)
has_sense(box-5,box-5-sense)
is_a(box-5-sense,box.n.01)
has_sense(direction-6,direction-6-sense)
is_a(direction-6-sense,direction.n.06)
root(ROOT-0, prepare-1)
dobj(prepare-1, cake_mix-2)
prepc_according_to(prepare-1, to-4)
nn(direction-6, box-5)
pobj(prepare-1, direction-6)
has_pos(prepare-1,VB)
has_pos(cake_mix-2,NN)
has_pos(to-4,TO)
has_pos(box-5,NN)
has_pos(direction-6,NN)
has_sense(to-4, null)
---
// place all the fruit into a large bowl and mix them together .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(fruit-4,fruit-4-sense)
is_a(fruit-4-sense,fruit.n.01)
has_sense(large-7,large-7-sense)
is_a(large-7-sense,large.a.01)
has_sense(bowl-8,bowl-8-sense)
is_a(bowl-8-sense,bowl.n.01)
has_sense(mix-10,mix-10-sense)
is_a(mix-10-sense,blend.v.03)
root(ROOT-0, place-1)
predet(fruit-4, all-2)
det(fruit-4, the-3)
dobj(place-1, fruit-4)
det(bowl-8, a-6)
amod(bowl-8, large-7)
prep_into(place-1, bowl-8)
conj_and(place-1, mix-10)
dobj(mix-10, them-11)
advmod(mix-10, together-12)
has_pos(place-1,VB)
has_pos(all-2,PDT)
has_pos(the-3,DT)
has_pos(fruit-4,NN)
has_pos(a-6,DT)
has_pos(large-7,JJ)
has_pos(bowl-8,NN)
has_pos(mix-10,VB)
has_pos(them-11,PRP)
has_pos(together-12,RB)
has_sense(the-3, null)
has_sense(together-12, null)
has_sense(them-11, null)
has_sense(all-2, null)
has_sense(a-6, null)
---
// mix the wet ingredient briefly .
has_sense(mix-1,mix-1-sense)
is_a(mix-1-sense,blend.v.03)
has_sense(wet-3,wet-3-sense)
is_a(wet-3-sense,wet.a.01)
has_sense(ingredient-4,ingredient-4-sense)
is_a(ingredient-4-sense,ingredient.n.03)
has_sense(briefly-5,briefly-5-sense)
is_a(briefly-5-sense,briefly.r.01)
root(ROOT-0, mix-1)
det(ingredient-4, the-2)
amod(ingredient-4, wet-3)
dobj(mix-1, ingredient-4)
advmod(mix-1, briefly-5)
has_pos(mix-1,VB)
has_pos(the-2,DT)
has_pos(wet-3,JJ)
has_pos(ingredient-4,NN)
has_pos(briefly-5,NN)
has_sense(the-2, null)
---
// add the eggs and butter and mix until dough come together .
has_sense(add-1,add-1-sense)
is_a(add-1-sense,add.v.01)
has_sense(eggs-3,eggs-3-sense)
is_a(eggs-3-sense,egg.n.02)
has_sense(butter-5,butter-5-sense)
is_a(butter-5-sense,butter.n.01)
has_sense(mix-7,mix-7-sense)
is_a(mix-7-sense,mix.v.04)
has_sense(dough-9,dough-9-sense)
is_a(dough-9-sense,dough.n.01)
has_sense(come-10,come-10-sense)
is_a(come-10-sense,come.v.04)
has_sense(together-11,together-11-sense)
is_a(together-11-sense,together.r.01)
root(ROOT-0, add-1)
det(eggs-3, the-2)
dobj(add-1, eggs-3)
conj_and(eggs-3, butter-5)
conj_and(add-1, mix-7)
mark(come-10, until-8)
nsubj(come-10, dough-9)
advcl(mix-7, come-10)
advmod(come-10, together-11)
has_pos(add-1,VB)
has_pos(the-2,DT)
has_pos(eggs-3,NNS)
has_pos(butter-5,NN)
has_pos(mix-7,VB)
has_pos(until-8,IN)
has_pos(dough-9,NN)
has_pos(come-10,VBP)
has_pos(together-11,RB)
has_sense(until-8, null)
has_sense(the-2, null)
---
// Mix ingredient well , make sure all sugar be dissolve , with the garlic and ginger even spread out .
has_sense(ingredient-2,ingredient-2-sense)
is_a(ingredient-2-sense,ingredient.n.03)
has_sense(well-3,well-3-sense)
is_a(well-3-sense,well.r.02)
has_sense(make-5,make-5-sense)
is_a(make-5-sense,make.v.03)
has_sense(sure-6,sure-6-sense)
is_a(sure-6-sense,surely.r.01)
has_sense(sugar-8,sugar-8-sense)
is_a(sugar-8-sense,sugar.n.01)
has_sense(be-9,be-9-sense)
is_a(be-9-sense,be.v.01)
has_sense(dissolve-10,dissolve-10-sense)
is_a(dissolve-10-sense,dissolve.v.02)
has_sense(garlic-14,garlic-14-sense)
is_a(garlic-14-sense,garlic.n.02)
has_sense(ginger-16,ginger-16-sense)
is_a(ginger-16-sense,ginger.n.02)
has_sense(spread-18,spread-18-sense)
is_a(spread-18-sense,spread.v.09)
num(ingredient-2, Mix-1)
npadvmod(well-3, ingredient-2)
advmod(make-5, well-3)
root(ROOT-0, make-5)
acomp(make-5, sure-6)
det(sugar-8, all-7)
nsubjpass(dissolve-10, sugar-8)
auxpass(dissolve-10, be-9)
dep(sure-6, dissolve-10)
det(garlic-14, the-13)
prep_with(dissolve-10, garlic-14)
conj_and(garlic-14, ginger-16)
advmod(spread-18, even-17)
partmod(garlic-14, spread-18)
prt(spread-18, out-19)
has_pos(Mix-1,CD)
has_pos(ingredient-2,NN)
has_pos(well-3,RB)
has_pos(make-5,VB)
has_pos(sure-6,JJ)
has_pos(all-7,DT)
has_pos(sugar-8,NN)
has_pos(be-9,VB)
has_pos(dissolve-10,VBN)
has_pos(the-13,DT)
has_pos(garlic-14,NN)
has_pos(ginger-16,NN)
has_pos(even-17,RB)
has_pos(spread-18,VBN)
has_pos(out-19,RP)
has_sense(Mix-1, null)
has_sense(even-17, null)
has_sense(out-19, null)
has_sense(all-7, null)
has_sense(the-13, null)
---
// In one bowl mix together flour , salt , cinnamon , baking_soda , nutmeg , clove and ginger .
has_sense(flour-6,flour-6-sense)
is_a(flour-6-sense,flour.n.01)
has_sense(salt-8,salt-8-sense)
is_a(salt-8-sense,salt.n.02)
has_sense(cinnamon-10,cinnamon-10-sense)
is_a(cinnamon-10-sense,cinnamon.n.03)
has_sense(baking_soda-12,baking_soda-12-sense)
is_a(baking_soda-12-sense,bicarbonate_of_soda.n.01)
has_sense(nutmeg-14,nutmeg-14-sense)
is_a(nutmeg-14-sense,nutmeg.n.02)
has_sense(clove-16,clove-16-sense)
is_a(clove-16-sense,clove.n.04)
has_sense(ginger-18,ginger-18-sense)
is_a(ginger-18-sense,ginger.n.02)
prep_in(bowl-3, one-2)
root(ROOT-0, bowl-3)
dobj(bowl-3, mix-4)
prt(bowl-3, together-5)
nsubj(bowl-3, flour-6)
appos(flour-6, salt-8)
conj_and(salt-8, cinnamon-10)
conj_and(salt-8, baking_soda-12)
conj_and(salt-8, nutmeg-14)
conj_and(salt-8, clove-16)
conj_and(salt-8, ginger-18)
has_pos(one-2,CD)
has_pos(bowl-3,VBP)
has_pos(mix-4,NN)
has_pos(together-5,RP)
has_pos(flour-6,NN)
has_pos(salt-8,NN)
has_pos(cinnamon-10,NN)
has_pos(baking_soda-12,NN)
has_pos(nutmeg-14,NN)
has_pos(clove-16,NN)
has_pos(ginger-18,NN)
has_sense(mix-4, null)
has_sense(together-5, null)
has_sense(bowl-3, null)
has_sense(one-2, null)
---
// Mix 1 tablespooon of jello powder into each bowl . 1 flavor per bowl .
has_sense(jello-5,jello-5-sense)
is_a(jello-5-sense,jello.n.01)
has_sense(bowl-9,bowl-9-sense)
is_a(bowl-9-sense,bowl.n.01)
has_sense(flavor-12,flavor-12-sense)
is_a(flavor-12-sense,relish.n.03)
has_sense(bowl-14,bowl-14-sense)
is_a(bowl-14-sense,bowl.n.01)
nn(tablespooon-3, Mix-1)
num(tablespooon-3, 1-2)
nsubj(powder-6, tablespooon-3)
prep_of(tablespooon-3, jello-5)
root(ROOT-0, powder-6)
det(flavor-12, each-8)
nn(flavor-12, bowl-9)
num(flavor-12, 1-11)
prep_into(powder-6, flavor-12)
prep_per(flavor-12, bowl-14)
has_pos(Mix-1,NNP)
has_pos(1-2,CD)
has_pos(tablespooon-3,NN)
has_pos(jello-5,NN)
has_pos(powder-6,VBP)
has_pos(each-8,DT)
has_pos(bowl-9,NNP)
has_pos(1-11,CD)
has_pos(flavor-12,NN)
has_pos(bowl-14,NN)
has_sense(tablespooon-3, null)
has_sense(powder-6, null)
has_sense(Mix-1, null)
has_sense(1-2, null)
has_sense(each-8, null)
has_sense(1-11, null)
---
// add one can of condensed_milk to the bowl and mix until thick .
has_sense(add-1,add-1-sense)
is_a(add-1-sense,add.v.01)
has_sense(can-3,can-3-sense)
is_a(can-3-sense,can.n.02)
has_sense(condensed_milk-5,condensed_milk-5-sense)
is_a(condensed_milk-5-sense,condensed_milk.n.01)
has_sense(bowl-8,bowl-8-sense)
is_a(bowl-8-sense,bowl.n.01)
has_sense(mix-10,mix-10-sense)
is_a(mix-10-sense,blend.v.03)
has_sense(thick-12,thick-12-sense)
is_a(thick-12-sense,thick.a.01)
root(ROOT-0, add-1)
num(can-3, one-2)
dobj(add-1, can-3)
prep_of(can-3, condensed_milk-5)
det(bowl-8, the-7)
prep_to(add-1, bowl-8)
conj_and(add-1, mix-10)
prep_until(mix-10, thick-12)
has_pos(add-1,VB)
has_pos(one-2,CD)
has_pos(can-3,NN)
has_pos(condensed_milk-5,NN)
has_pos(the-7,DT)
has_pos(bowl-8,NN)
has_pos(mix-10,VB)
has_pos(thick-12,JJ)
has_sense(the-7, null)
has_sense(one-2, null)
---
// mix around , in the butter .
has_sense(mix-1,mix-1-sense)
is_a(mix-1-sense,blend.v.03)
has_sense(around-2,around-2-sense)
is_a(around-2-sense,around.r.04)
has_sense(butter-6,butter-6-sense)
is_a(butter-6-sense,butter.n.01)
root(ROOT-0, mix-1)
advmod(mix-1, around-2)
det(butter-6, the-5)
prep_in(mix-1, butter-6)
has_pos(mix-1,VB)
has_pos(around-2,RB)
has_pos(the-5,DT)
has_pos(butter-6,NN)
has_sense(the-5, null)
---
// Mix in the hamburger , pea , carrot , and noodle .
has_sense(hamburger-4,hamburger-4-sense)
is_a(hamburger-4-sense,ground_beef.n.01)
has_sense(pea-6,pea-6-sense)
is_a(pea-6-sense,pea.n.01)
has_sense(carrot-8,carrot-8-sense)
is_a(carrot-8-sense,carrot.n.01)
has_sense(noodle-11,noodle-11-sense)
is_a(noodle-11-sense,noodle.n.01)
root(ROOT-0, Mix-1)
det(hamburger-4, the-3)
prep_in(Mix-1, hamburger-4)
nn(noodle-11, pea-6)
conj_and(noodle-11, carrot-8)
appos(hamburger-4, noodle-11)
has_pos(Mix-1,NNP)
has_pos(the-3,DT)
has_pos(hamburger-4,NN)
has_pos(pea-6,NN)
has_pos(carrot-8,NN)
has_pos(noodle-11,NN)
has_sense(the-3, null)
has_sense(Mix-1, null)
---
// mix until well combine .
has_sense(mix-1,mix-1-sense)
is_a(mix-1-sense,mix.n.03)
has_sense(well-3,well-3-sense)
is_a(well-3-sense,well.r.01)
has_sense(combine-4,combine-4-sense)
is_a(combine-4-sense,compound.v.05)
nsubj(combine-4, mix-1)
advmod(combine-4, until-2)
advmod(until-2, well-3)
root(ROOT-0, combine-4)
has_pos(mix-1,NN)
has_pos(until-2,IN)
has_pos(well-3,RB)
has_pos(combine-4,VBP)
has_sense(until-2, null)
---
// prepare the cake_mix follow direction on the package .
has_sense(prepare-1,prepare-1-sense)
is_a(prepare-1-sense,fix.v.12)
has_sense(cake_mix-3,cake_mix-3-sense)
is_a(cake_mix-3-sense,cake_mix.n.01)
has_sense(follow-4,follow-4-sense)
is_a(follow-4-sense,comply.v.01)
has_sense(direction-5,direction-5-sense)
is_a(direction-5-sense,direction.n.06)
has_sense(package-8,package-8-sense)
is_a(package-8-sense,package.n.02)
root(ROOT-0, prepare-1)
det(cake_mix-3, the-2)
nsubj(follow-4, cake_mix-3)
ccomp(prepare-1, follow-4)
dobj(follow-4, direction-5)
det(package-8, the-7)
prep_on(follow-4, package-8)
has_pos(prepare-1,VB)
has_pos(the-2,DT)
has_pos(cake_mix-3,NN)
has_pos(follow-4,VB)
has_pos(direction-5,NN)
has_pos(the-7,DT)
has_pos(package-8,NN)
has_sense(the-7, null)
has_sense(the-2, null)
---
// Mix in sugar-up to your liking of sweetness-and milk , until the mix be frothy .
has_sense(liking-6,liking-6-sense)
is_a(liking-6-sense,liking.n.01)
has_sense(milk-9,milk-9-sense)
is_a(milk-9-sense,milk.n.01)
has_sense(be-14,be-14-sense)
is_a(be-14-sense,be.v.01)
has_sense(frothy-15,frothy-15-sense)
is_a(frothy-15-sense,bubbling.s.01)
root(ROOT-0, Mix-1)
prep_in(Mix-1, sugar-up-3)
poss(liking-6, your-5)
prep_to(Mix-1, liking-6)
amod(milk-9, sweetness-and-8)
prep_of(liking-6, milk-9)
mark(frothy-15, until-11)
det(mix-13, the-12)
nsubj(frothy-15, mix-13)
cop(frothy-15, be-14)
advcl(Mix-1, frothy-15)
has_pos(Mix-1,VBN)
has_pos(sugar-up-3,NN)
has_pos(your-5,PRP$)
has_pos(liking-6,NN)
has_pos(sweetness-and-8,JJ)
has_pos(milk-9,NN)
has_pos(until-11,IN)
has_pos(the-12,DT)
has_pos(mix-13,NN)
has_pos(be-14,VB)
has_pos(frothy-15,JJ)
has_sense(your-5, null)
has_sense(until-11, null)
has_sense(Mix-1, null)
has_sense(sugar-up-3, null)
has_sense(the-12, null)
has_sense(sweetness-and-8, null)
has_sense(mix-13, null)
---
// mix together all of the dry ingredient into a medium-large bowl .
has_sense(mix-1,mix-1-sense)
is_a(mix-1-sense,blend.v.03)
has_sense(dry-6,dry-6-sense)
is_a(dry-6-sense,dry.a.01)
has_sense(ingredient-7,ingredient-7-sense)
is_a(ingredient-7-sense,ingredient.n.03)
has_sense(medium-large-10,medium-large-10-sense)
is_a(medium-large-10-sense,medium-large.s.01)
has_sense(bowl-11,bowl-11-sense)
is_a(bowl-11-sense,bowl.n.01)
root(ROOT-0, mix-1)
prt(mix-1, together-2)
dobj(mix-1, all-3)
det(ingredient-7, the-5)
amod(ingredient-7, dry-6)
prep_of(all-3, ingredient-7)
det(bowl-11, a-9)
amod(bowl-11, medium-large-10)
prep_into(ingredient-7, bowl-11)
has_pos(mix-1,VB)
has_pos(together-2,RP)
has_pos(all-3,DT)
has_pos(the-5,DT)
has_pos(dry-6,JJ)
has_pos(ingredient-7,NN)
has_pos(a-9,DT)
has_pos(medium-large-10,JJ)
has_pos(bowl-11,NN)
has_sense(the-5, null)
has_sense(together-2, null)
has_sense(a-9, null)
has_sense(all-3, null)
---
// take a coffee_cup or bowl , mix about 3-4 tablespoon of good olive_oil with 2-3 tsp of chopped garlic .
has_sense(take-1,take-1-sense)
is_a(take-1-sense,take.v.04)
has_sense(coffee_cup-3,coffee_cup-3-sense)
is_a(coffee_cup-3-sense,coffee_cup.n.01)
has_sense(bowl-5,bowl-5-sense)
is_a(bowl-5-sense,bowl.n.01)
has_sense(tablespoon-10,tablespoon-10-sense)
is_a(tablespoon-10-sense,tablespoon.n.01)
has_sense(good-12,good-12-sense)
is_a(good-12-sense,good.a.01)
has_sense(olive_oil-13,olive_oil-13-sense)
is_a(olive_oil-13-sense,olive_oil.n.01)
has_sense(chopped-18,chopped-18-sense)
is_a(chopped-18-sense,chopped.s.01)
has_sense(garlic-19,garlic-19-sense)
is_a(garlic-19-sense,garlic.n.02)
root(ROOT-0, take-1)
det(coffee_cup-3, a-2)
dobj(take-1, coffee_cup-3)
conj_or(coffee_cup-3, bowl-5)
appos(coffee_cup-3, mix-7)
num(tablespoon-10, 3-4-9)
prep_about(mix-7, tablespoon-10)
amod(olive_oil-13, good-12)
prep_of(tablespoon-10, olive_oil-13)
num(tsp-16, 2-3-15)
prep_with(take-1, tsp-16)
amod(garlic-19, chopped-18)
prep_of(tsp-16, garlic-19)
has_pos(take-1,VB)
has_pos(a-2,DT)
has_pos(coffee_cup-3,NN)
has_pos(bowl-5,NN)
has_pos(mix-7,NN)
has_pos(3-4-9,CD)
has_pos(tablespoon-10,NN)
has_pos(good-12,JJ)
has_pos(olive_oil-13,NN)
has_pos(2-3-15,CD)
has_pos(tsp-16,NN)
has_pos(chopped-18,JJ)
has_pos(garlic-19,NN)
has_sense(mix-7, null)
has_sense(2-3-15, null)
has_sense(tsp-16, null)
has_sense(3-4-9, null)
has_sense(a-2, null)
---
// For the filling , -LRB- if use -RRB- mix the cream_cheese and the ricotta cheese until well combined .
has_sense(filling-3,filling-3-sense)
is_a(filling-3-sense,filling.n.03)
has_sense(use-7,use-7-sense)
is_a(use-7-sense,use.v.01)
has_sense(mix-9,mix-9-sense)
is_a(mix-9-sense,blend.v.03)
has_sense(cream_cheese-11,cream_cheese-11-sense)
is_a(cream_cheese-11-sense,cream_cheese.n.01)
has_sense(ricotta-14,ricotta-14-sense)
is_a(ricotta-14-sense,ricotta.n.01)
has_sense(cheese-15,cheese-15-sense)
is_a(cheese-15-sense,cheese.n.01)
has_sense(well-17,well-17-sense)
is_a(well-17-sense,well.r.01)
has_sense(combined-18,combined-18-sense)
is_a(combined-18-sense,combined.a.01)
det(filling-3, the-2)
prep_for(mix-9, filling-3)
mark(use-7, if-6)
parataxis(mix-9, use-7)
root(ROOT-0, mix-9)
det(cream_cheese-11, the-10)
dobj(mix-9, cream_cheese-11)
det(cheese-15, the-13)
nn(cheese-15, ricotta-14)
conj_and(cream_cheese-11, cheese-15)
advmod(combined-18, well-17)
prep_until(mix-9, combined-18)
has_pos(the-2,DT)
has_pos(filling-3,NN)
has_pos(if-6,IN)
has_pos(use-7,VBP)
has_pos(mix-9,VB)
has_pos(the-10,DT)
has_pos(cream_cheese-11,NN)
has_pos(the-13,DT)
has_pos(ricotta-14,NN)
has_pos(cheese-15,NN)
has_pos(well-17,RB)
has_pos(combined-18,JJ)
has_sense(the-2, null)
has_sense(the-13, null)
has_sense(if-6, null)
has_sense(the-10, null)
---
// mix everything well together and place it on the side for 10 minutes .
has_sense(mix-1,mix-1-sense)
is_a(mix-1-sense,blend.v.03)
has_sense(well-3,well-3-sense)
is_a(well-3-sense,well.r.02)
has_sense(place-6,place-6-sense)
is_a(place-6-sense,put.v.01)
has_sense(side-10,side-10-sense)
is_a(side-10-sense,side.n.01)
root(ROOT-0, mix-1)
dobj(mix-1, everything-2)
advmod(together-4, well-3)
advmod(mix-1, together-4)
conj_and(mix-1, place-6)
dobj(place-6, it-7)
det(side-10, the-9)
prep_on(place-6, side-10)
num(minutes-13, 10-12)
prep_for(side-10, minutes-13)
has_pos(mix-1,VB)
has_pos(everything-2,NN)
has_pos(well-3,RB)
has_pos(together-4,RB)
has_pos(place-6,VB)
has_pos(it-7,PRP)
has_pos(the-9,DT)
has_pos(side-10,NN)
has_pos(10-12,CD)
has_pos(minutes-13,NNS)
has_sense(10-12, null)
has_sense(together-4, null)
has_sense(everything-2, null)
has_sense(the-9, null)
has_sense(it-7, null)
has_sense(minutes-13, null)
---
// Mix until the sugar and butter be smooth and creamy .
has_sense(sugar-4,sugar-4-sense)
is_a(sugar-4-sense,sugar.n.01)
has_sense(butter-6,butter-6-sense)
is_a(butter-6-sense,butter.n.01)
has_sense(be-7,be-7-sense)
is_a(be-7-sense,be.v.01)
has_sense(smooth-8,smooth-8-sense)
is_a(smooth-8-sense,smooth.a.01)
has_sense(creamy-10,creamy-10-sense)
is_a(creamy-10-sense,creamy.s.02)
nsubj(smooth-8, Mix-1)
det(sugar-4, the-3)
prep_until(Mix-1, sugar-4)
conj_and(sugar-4, butter-6)
cop(smooth-8, be-7)
root(ROOT-0, smooth-8)
conj_and(smooth-8, creamy-10)
has_pos(Mix-1,NNP)
has_pos(the-3,DT)
has_pos(sugar-4,NN)
has_pos(butter-6,NN)
has_pos(be-7,VB)
has_pos(smooth-8,JJ)
has_pos(creamy-10,JJ)
has_sense(the-3, null)
has_sense(Mix-1, null)
---
// Mix flour , baking_powder , and salt thoroughly .
has_sense(flour-2,flour-2-sense)
is_a(flour-2-sense,flour.n.01)
has_sense(baking_powder-4,baking_powder-4-sense)
is_a(baking_powder-4-sense,baking_powder.n.01)
has_sense(salt-7,salt-7-sense)
is_a(salt-7-sense,salt.n.02)
has_sense(thoroughly-8,thoroughly-8-sense)
is_a(thoroughly-8-sense,thoroughly.r.02)
root(ROOT-0, Mix-1)
nn(salt-7, flour-2)
conj_and(salt-7, baking_powder-4)
dep(Mix-1, salt-7)
advmod(salt-7, thoroughly-8)
has_pos(Mix-1,NNP)
has_pos(flour-2,NN)
has_pos(baking_powder-4,NN)
has_pos(salt-7,NN)
has_pos(thoroughly-8,RB)
has_sense(Mix-1, null)
---
// mix in and stir-fry for another 2-3 minutes .
has_sense(mix-1,mix-1-sense)
is_a(mix-1-sense,mix.n.03)
root(ROOT-0, mix-1)
dep(mix-1, in-2)
dep(mix-1, and-3)
dep(mix-1, stir-fry-4)
dep(mix-1, for-5)
det(minutes-8, another-6)
num(minutes-8, 2-3-7)
dep(mix-1, minutes-8)
has_pos(mix-1,VB)
has_pos(in-2,IN)
has_pos(and-3,CC)
has_pos(stir-fry-4,RB)
has_pos(for-5,IN)
has_pos(another-6,DT)
has_pos(2-3-7,CD)
has_pos(minutes-8,NNS)
has_sense(in-2, null)
has_sense(minutes-8, null)
has_sense(another-6, null)
has_sense(2-3-7, null)
has_sense(for-5, null)
has_sense(and-3, null)
has_sense(stir-fry-4, null)
---
// Mix the flour and salt in your first bowl .
has_sense(flour-3,flour-3-sense)
is_a(flour-3-sense,flour.n.01)
has_sense(salt-5,salt-5-sense)
is_a(salt-5-sense,salt.n.02)
has_sense(first-8,first-8-sense)
is_a(first-8-sense,first.a.01)
has_sense(bowl-9,bowl-9-sense)
is_a(bowl-9-sense,bowl.n.01)
root(ROOT-0, Mix-1)
det(flour-3, the-2)
dep(Mix-1, flour-3)
conj_and(flour-3, salt-5)
poss(bowl-9, your-7)
amod(bowl-9, first-8)
prep_in(flour-3, bowl-9)
has_pos(Mix-1,NNP)
has_pos(the-2,DT)
has_pos(flour-3,NN)
has_pos(salt-5,NN)
has_pos(your-7,PRP$)
has_pos(first-8,JJ)
has_pos(bowl-9,NN)
has_sense(your-7, null)
has_sense(Mix-1, null)
has_sense(the-2, null)
---
// add 1 cup of flour to wet mix and stir with fork until it 's well mix .
has_sense(add-1,add-1-sense)
is_a(add-1-sense,add.v.01)
has_sense(cup-3,cup-3-sense)
is_a(cup-3-sense,cup.n.02)
has_sense(flour-5,flour-5-sense)
is_a(flour-5-sense,flour.n.01)
has_sense(mix-8,mix-8-sense)
is_a(mix-8-sense,mix.n.01)
has_sense(stir-10,stir-10-sense)
is_a(stir-10-sense,stir.v.01)
has_sense(fork-12,fork-12-sense)
is_a(fork-12-sense,fork.n.01)
has_sense(well-16,well-16-sense)
is_a(well-16-sense,well.r.02)
has_sense(mix-17,mix-17-sense)
is_a(mix-17-sense,blend.v.03)
root(ROOT-0, add-1)
num(cup-3, 1-2)
dobj(add-1, cup-3)
prep_of(cup-3, flour-5)
amod(mix-8, wet-7)
prep_to(add-1, mix-8)
conj_and(add-1, stir-10)
prep_with(stir-10, fork-12)
mark(mix-17, until-13)
nsubj(mix-17, it-14)
cop(mix-17, 's-15)
advmod(mix-17, well-16)
advcl(stir-10, mix-17)
has_pos(add-1,VB)
has_pos(1-2,CD)
has_pos(cup-3,NN)
has_pos(flour-5,NN)
has_pos(wet-7,JJ)
has_pos(mix-8,NN)
has_pos(stir-10,VB)
has_pos(fork-12,NN)
has_pos(until-13,IN)
has_pos(it-14,PRP)
has_pos('s-15,VBZ)
has_pos(well-16,RB)
has_pos(mix-17,NN)
has_sense(wet-7, null)
has_sense(it-14, null)
has_sense(until-13, null)
has_sense(1-2, null)
has_sense('s-15, null)
---
// let the pancake-mix sit for 2-3 minutes , shake again .
has_sense(let-1,let-1-sense)
is_a(let-1-sense,let.v.05)
has_sense(sit-4,sit-4-sense)
is_a(sit-4-sense,sit.v.02)
has_sense(shake-9,shake-9-sense)
is_a(shake-9-sense,shake.v.01)
has_sense(again-10,again-10-sense)
is_a(again-10-sense,again.r.01)
root(ROOT-0, let-1)
det(sit-4, the-2)
amod(sit-4, pancake-mix-3)
dobj(let-1, sit-4)
num(minutes-7, 2-3-6)
prep_for(sit-4, minutes-7)
dep(let-1, shake-9)
advmod(shake-9, again-10)
has_pos(let-1,VB)
has_pos(the-2,DT)
has_pos(pancake-mix-3,JJ)
has_pos(sit-4,NN)
has_pos(2-3-6,CD)
has_pos(minutes-7,NNS)
has_pos(shake-9,VB)
has_pos(again-10,RB)
has_sense(the-2, null)
has_sense(minutes-7, null)
has_sense(2-3-6, null)
has_sense(pancake-mix-3, null)
---
// spoon out the potato and mix it in with the cheese and bacon .
has_sense(spoon-1,spoon-1-sense)
is_a(spoon-1-sense,spoon.v.01)
has_sense(potato-4,potato-4-sense)
is_a(potato-4-sense,potato.n.01)
has_sense(mix-6,mix-6-sense)
is_a(mix-6-sense,blend.v.03)
has_sense(cheese-11,cheese-11-sense)
is_a(cheese-11-sense,cheese.n.01)
has_sense(bacon-13,bacon-13-sense)
is_a(bacon-13-sense,bacon.n.01)
root(ROOT-0, spoon-1)
prt(spoon-1, out-2)
det(potato-4, the-3)
dobj(spoon-1, potato-4)
conj_and(spoon-1, mix-6)
dobj(mix-6, it-7)
dep(mix-6, in-8)
det(cheese-11, the-10)
prep_with(mix-6, cheese-11)
conj_and(cheese-11, bacon-13)
has_pos(spoon-1,VB)
has_pos(out-2,RP)
has_pos(the-3,DT)
has_pos(potato-4,NN)
has_pos(mix-6,VB)
has_pos(it-7,PRP)
has_pos(in-8,IN)
has_pos(the-10,DT)
has_pos(cheese-11,NN)
has_pos(bacon-13,NN)
has_sense(the-3, null)
has_sense(in-8, null)
has_sense(it-7, null)
has_sense(out-2, null)
has_sense(the-10, null)
---
// Mix the sticky sauce .
has_sense(sticky-3,sticky-3-sense)
is_a(sticky-3-sense,gluey.s.01)
has_sense(sauce-4,sauce-4-sense)
is_a(sauce-4-sense,sauce.n.01)
root(ROOT-0, Mix-1)
det(sauce-4, the-2)
amod(sauce-4, sticky-3)
dep(Mix-1, sauce-4)
has_pos(Mix-1,NNP)
has_pos(the-2,DT)
has_pos(sticky-3,JJ)
has_pos(sauce-4,NN)
has_sense(Mix-1, null)
has_sense(the-2, null)
---
// In a medium , smooth bottomed bowl , mix the remaining ingredient with the cooled fried onion .
has_sense(smooth-5,smooth-5-sense)
is_a(smooth-5-sense,smooth.a.01)
has_sense(bowl-7,bowl-7-sense)
is_a(bowl-7-sense,bowl.n.01)
has_sense(mix-9,mix-9-sense)
is_a(mix-9-sense,blend.v.03)
has_sense(ingredient-12,ingredient-12-sense)
is_a(ingredient-12-sense,ingredient.n.03)
has_sense(fried-16,fried-16-sense)
is_a(fried-16-sense,fried.s.01)
has_sense(onion-17,onion-17-sense)
is_a(onion-17-sense,onion.n.01)
det(medium-3, a-2)
prep_in(mix-9, medium-3)
amod(bottomed-6, smooth-5)
nsubj(bowl-7, bottomed-6)
parataxis(mix-9, bowl-7)
root(ROOT-0, mix-9)
det(ingredient-12, the-10)
amod(ingredient-12, remaining-11)
dobj(mix-9, ingredient-12)
det(onion-17, the-14)
amod(onion-17, cooled-15)
amod(onion-17, fried-16)
prep_with(ingredient-12, onion-17)
has_pos(a-2,DT)
has_pos(medium-3,NN)
has_pos(smooth-5,JJ)
has_pos(bottomed-6,NNS)
has_pos(bowl-7,VBP)
has_pos(mix-9,VB)
has_pos(the-10,DT)
has_pos(remaining-11,VBG)
has_pos(ingredient-12,NN)
has_pos(the-14,DT)
has_pos(cooled-15,JJ)
has_pos(fried-16,JJ)
has_pos(onion-17,NN)
has_sense(cooled-15, null)
has_sense(bottomed-6, null)
has_sense(remaining-11, null)
has_sense(a-2, null)
has_sense(the-14, null)
has_sense(medium-3, null)
has_sense(the-10, null)
---
// slice some strawberries and mix sugar into them for a different topping .
has_sense(slice-1,slice-1-sense)
is_a(slice-1-sense,slice.v.03)
has_sense(sugar-6,sugar-6-sense)
is_a(sugar-6-sense,sugar.n.01)
has_sense(topping-12,topping-12-sense)
is_a(topping-12-sense,topping.n.01)
root(ROOT-0, slice-1)
det(strawberries-3, some-2)
dep(slice-1, strawberries-3)
nn(sugar-6, mix-5)
conj_and(strawberries-3, sugar-6)
prep_into(strawberries-3, them-8)
det(topping-12, a-10)
amod(topping-12, different-11)
prep_for(slice-1, topping-12)
has_pos(slice-1,NN)
has_pos(some-2,DT)
has_pos(strawberries-3,NNS)
has_pos(mix-5,NN)
has_pos(sugar-6,NN)
has_pos(them-8,PRP)
has_pos(a-10,DT)
has_pos(different-11,JJ)
has_pos(topping-12,NN)
has_sense(mix-5, null)
has_sense(different-11, null)
has_sense(them-8, null)
has_sense(a-10, null)
has_sense(some-2, null)
has_sense(strawberries-3, null)
---
// mix soup and sour_cream .
has_sense(mix-1,mix-1-sense)
is_a(mix-1-sense,mix.n.03)
has_sense(soup-2,soup-2-sense)
is_a(soup-2-sense,soup.n.01)
has_sense(sour_cream-4,sour_cream-4-sense)
is_a(sour_cream-4-sense,sour_cream.n.01)
root(ROOT-0, mix-1)
dobj(mix-1, soup-2)
conj_and(soup-2, sour_cream-4)
has_pos(mix-1,VB)
has_pos(soup-2,NN)
has_pos(sour_cream-4,NN)
---
// gently sift in the flour and baking_powder and mix till all combine .
has_sense(gently-1,gently-1-sense)
is_a(gently-1-sense,gently.r.02)
has_sense(sift-2,sift-2-sense)
is_a(sift-2-sense,sift.v.02)
has_sense(flour-5,flour-5-sense)
is_a(flour-5-sense,flour.n.01)
has_sense(baking_powder-7,baking_powder-7-sense)
is_a(baking_powder-7-sense,baking_powder.n.01)
has_sense(mix-9,mix-9-sense)
is_a(mix-9-sense,blend.v.03)
has_sense(combine-12,combine-12-sense)
is_a(combine-12-sense,compound.v.05)
advmod(sift-2, gently-1)
root(ROOT-0, sift-2)
det(flour-5, the-4)
prep_in(sift-2, flour-5)
conj_and(flour-5, baking_powder-7)
conj_and(flour-5, mix-9)
mark(combine-12, till-10)
nsubj(combine-12, all-11)
advcl(sift-2, combine-12)
has_pos(gently-1,RB)
has_pos(sift-2,VB)
has_pos(the-4,DT)
has_pos(flour-5,NN)
has_pos(baking_powder-7,NN)
has_pos(mix-9,NN)
has_pos(till-10,IN)
has_pos(all-11,DT)
has_pos(combine-12,VBP)
has_sense(till-10, null)
has_sense(the-4, null)
has_sense(all-11, null)
---
// Take off the wrapping sheet and mix it .
has_sense(wrapping-4,wrapping-4-sense)
is_a(wrapping-4-sense,wrapping.n.01)
has_sense(mix-7,mix-7-sense)
is_a(mix-7-sense,blend.v.03)
root(ROOT-0, Take-1)
prt(Take-1, off-2)
det(sheet-5, the-3)
nn(sheet-5, wrapping-4)
dobj(Take-1, sheet-5)
conj_and(Take-1, mix-7)
dobj(mix-7, it-8)
has_pos(Take-1,VB)
has_pos(off-2,RP)
has_pos(the-3,DT)
has_pos(wrapping-4,NN)
has_pos(sheet-5,NN)
has_pos(mix-7,VB)
has_pos(it-8,PRP)
has_sense(the-3, null)
has_sense(Take-1, null)
has_sense(sheet-5, null)
has_sense(off-2, null)
has_sense(it-8, null)
---
// mix powdered_sugar and orange_juice together in a small bowl .
has_sense(mix-1,mix-1-sense)
is_a(mix-1-sense,mix.n.03)
has_sense(powdered_sugar-2,powdered_sugar-2-sense)
is_a(powdered_sugar-2-sense,powdered_sugar.n.01)
has_sense(orange_juice-4,orange_juice-4-sense)
is_a(orange_juice-4-sense,orange_juice.n.01)
has_sense(together-5,together-5-sense)
is_a(together-5-sense,together.r.02)
has_sense(small-8,small-8-sense)
is_a(small-8-sense,small.a.01)
has_sense(bowl-9,bowl-9-sense)
is_a(bowl-9-sense,bowl.n.01)
root(ROOT-0, mix-1)
dobj(mix-1, powdered_sugar-2)
conj_and(mix-1, orange_juice-4)
advmod(orange_juice-4, together-5)
det(bowl-9, a-7)
amod(bowl-9, small-8)
prep_in(orange_juice-4, bowl-9)
has_pos(mix-1,VB)
has_pos(powdered_sugar-2,NN)
has_pos(orange_juice-4,VB)
has_pos(together-5,RB)
has_pos(a-7,DT)
has_pos(small-8,JJ)
has_pos(bowl-9,NN)
has_sense(a-7, null)
---
// mix dressing with garlic and chilli well .
has_sense(mix-1,mix-1-sense)
is_a(mix-1-sense,mix.n.03)
has_sense(garlic-4,garlic-4-sense)
is_a(garlic-4-sense,garlic.n.02)
has_sense(chilli-6,chilli-6-sense)
is_a(chilli-6-sense,chili.n.02)
has_sense(well-7,well-7-sense)
is_a(well-7-sense,well.r.01)
root(ROOT-0, mix-1)
partmod(mix-1, dressing-2)
prep_with(dressing-2, garlic-4)
conj_and(garlic-4, chilli-6)
advmod(dressing-2, well-7)
has_pos(mix-1,NN)
has_pos(dressing-2,VBG)
has_pos(garlic-4,NN)
has_pos(chilli-6,NN)
has_pos(well-7,RB)
has_sense(dressing-2, null)
---
// Mix on low speed for 3 minutes .
has_sense(low-3,low-3-sense)
is_a(low-3-sense,low.a.01)
has_sense(speed-4,speed-4-sense)
is_a(speed-4-sense,speed.n.02)
root(ROOT-0, Mix-1)
amod(speed-4, low-3)
prep_on(Mix-1, speed-4)
num(minutes-7, 3-6)
prep_for(Mix-1, minutes-7)
has_pos(Mix-1,NNP)
has_pos(low-3,JJ)
has_pos(speed-4,NN)
has_pos(3-6,CD)
has_pos(minutes-7,NNS)
has_sense(Mix-1, null)
has_sense(3-6, null)
has_sense(minutes-7, null)
---
// melt the chocolate as before , and mix together with the cream .
has_sense(melt-1,melt-1-sense)
is_a(melt-1-sense,melt.v.01)
has_sense(chocolate-3,chocolate-3-sense)
is_a(chocolate-3-sense,chocolate.n.02)
has_sense(as-4,as-4-sense)
is_a(as-4-sense,equally.r.01)
has_sense(before-5,before-5-sense)
is_a(before-5-sense,earlier.r.01)
has_sense(mix-8,mix-8-sense)
is_a(mix-8-sense,blend.v.03)
has_sense(together-9,together-9-sense)
is_a(together-9-sense,together.r.01)
has_sense(cream-12,cream-12-sense)
is_a(cream-12-sense,cream.n.02)
root(ROOT-0, melt-1)
det(chocolate-3, the-2)
dobj(melt-1, chocolate-3)
advmod(before-5, as-4)
advmod(melt-1, before-5)
conj_and(melt-1, mix-8)
det(cream-12, the-11)
prep_together_with(mix-8, cream-12)
has_pos(melt-1,VB)
has_pos(the-2,DT)
has_pos(chocolate-3,NN)
has_pos(as-4,RB)
has_pos(before-5,RB)
has_pos(mix-8,VB)
has_pos(the-11,DT)
has_pos(cream-12,NN)
has_sense(the-2, null)
has_sense(the-11, null)
---
// mix the egg_yolk with 1 tablespoon of water and brush each pretzel with this mixture .
has_sense(mix-1,mix-1-sense)
is_a(mix-1-sense,mix.v.04)
has_sense(egg_yolk-3,egg_yolk-3-sense)
is_a(egg_yolk-3-sense,egg_yolk.n.01)
has_sense(tablespoon-6,tablespoon-6-sense)
is_a(tablespoon-6-sense,tablespoon.n.01)
has_sense(water-8,water-8-sense)
is_a(water-8-sense,water.n.06)
has_sense(brush-10,brush-10-sense)
is_a(brush-10-sense,brush.v.01)
has_sense(pretzel-12,pretzel-12-sense)
is_a(pretzel-12-sense,pretzel.n.01)
has_sense(mixture-15,mixture-15-sense)
is_a(mixture-15-sense,concoction.n.01)
root(ROOT-0, mix-1)
det(egg_yolk-3, the-2)
dobj(mix-1, egg_yolk-3)
num(tablespoon-6, 1-5)
prep_with(mix-1, tablespoon-6)
prep_of(tablespoon-6, water-8)
conj_and(mix-1, brush-10)
det(pretzel-12, each-11)
dobj(brush-10, pretzel-12)
det(mixture-15, this-14)
prep_with(brush-10, mixture-15)
has_pos(mix-1,VB)
has_pos(the-2,DT)
has_pos(egg_yolk-3,NN)
has_pos(1-5,CD)
has_pos(tablespoon-6,NN)
has_pos(water-8,NN)
has_pos(brush-10,VB)
has_pos(each-11,DT)
has_pos(pretzel-12,NN)
has_pos(this-14,DT)
has_pos(mixture-15,NN)
has_sense(the-2, null)
has_sense(1-5, null)
has_sense(this-14, null)
has_sense(each-11, null)
---
// Mix until a soft dough form .
has_sense(soft-4,soft-4-sense)
is_a(soft-4-sense,soft.a.01)
has_sense(dough-5,dough-5-sense)
is_a(dough-5-sense,dough.n.01)
has_sense(form-6,form-6-sense)
is_a(form-6-sense,form.v.03)
nsubj(form-6, Mix-1)
det(dough-5, a-3)
amod(dough-5, soft-4)
prep_until(Mix-1, dough-5)
root(ROOT-0, form-6)
has_pos(Mix-1,NNP)
has_pos(a-3,DT)
has_pos(soft-4,JJ)
has_pos(dough-5,NN)
has_pos(form-6,VBP)
has_sense(a-3, null)
has_sense(Mix-1, null)
---
// use your hands mix the ingredient together so all the breadcrumb be mixed in with the sausage mince .
has_sense(use-1,use-1-sense)
is_a(use-1-sense,use.v.01)
has_sense(mix-4,mix-4-sense)
is_a(mix-4-sense,blend.v.03)
has_sense(ingredient-6,ingredient-6-sense)
is_a(ingredient-6-sense,ingredient.n.03)
has_sense(together-7,together-7-sense)
is_a(together-7-sense,together.r.01)
has_sense(so-8,so-8-sense)
is_a(so-8-sense,so.r.02)
has_sense(breadcrumb-11,breadcrumb-11-sense)
is_a(breadcrumb-11-sense,breadcrumb.n.01)
has_sense(be-12,be-12-sense)
is_a(be-12-sense,be.v.01)
has_sense(sausage-17,sausage-17-sense)
is_a(sausage-17-sense,sausage.n.01)
has_sense(mince-18,mince-18-sense)
is_a(mince-18-sense,mince.n.01)
root(ROOT-0, use-1)
poss(hands-3, your-2)
nsubj(mix-4, hands-3)
ccomp(use-1, mix-4)
det(ingredient-6, the-5)
dobj(mix-4, ingredient-6)
prt(mix-4, together-7)
mark(mixed-13, so-8)
predet(breadcrumb-11, all-9)
det(breadcrumb-11, the-10)
nsubjpass(mixed-13, breadcrumb-11)
auxpass(mixed-13, be-12)
advcl(mix-4, mixed-13)
prep(mixed-13, in-14)
pcomp(in-14, with-15)
det(mince-18, the-16)
nn(mince-18, sausage-17)
pobj(with-15, mince-18)
has_pos(use-1,VB)
has_pos(your-2,PRP$)
has_pos(hands-3,NNS)
has_pos(mix-4,VB)
has_pos(the-5,DT)
has_pos(ingredient-6,NN)
has_pos(together-7,RP)
has_pos(so-8,IN)
has_pos(all-9,PDT)
has_pos(the-10,DT)
has_pos(breadcrumb-11,NN)
has_pos(be-12,VB)
has_pos(mixed-13,VBN)
has_pos(in-14,IN)
has_pos(with-15,IN)
has_pos(the-16,DT)
has_pos(sausage-17,NN)
has_pos(mince-18,NN)
has_sense(the-5, null)
has_sense(in-14, null)
has_sense(hands-3, null)
has_sense(mixed-13, null)
has_sense(with-15, null)
has_sense(your-2, null)
has_sense(all-9, null)
has_sense(the-16, null)
has_sense(the-10, null)
---
// add about a cup of the chicken mix to the tortilla .
has_sense(add-1,add-1-sense)
is_a(add-1-sense,add.v.01)
has_sense(chicken-7,chicken-7-sense)
is_a(chicken-7-sense,chicken.n.01)
has_sense(tortilla-11,tortilla-11-sense)
is_a(tortilla-11-sense,tortilla.n.01)
root(ROOT-0, add-1)
det(cup-4, a-3)
prep_about(add-1, cup-4)
det(mix-8, the-6)
nn(mix-8, chicken-7)
prep_of(cup-4, mix-8)
det(tortilla-11, the-10)
prep_to(add-1, tortilla-11)
has_pos(add-1,VB)
has_pos(a-3,DT)
has_pos(cup-4,NN)
has_pos(the-6,DT)
has_pos(chicken-7,NN)
has_pos(mix-8,NN)
has_pos(the-10,DT)
has_pos(tortilla-11,NN)
has_sense(the-6, null)
has_sense(mix-8, null)
has_sense(cup-4, null)
has_sense(a-3, null)
has_sense(the-10, null)
---
// Coat chicken with seasoning mix as direct on package .
has_sense(chicken-2,chicken-2-sense)
is_a(chicken-2-sense,chicken.n.01)
has_sense(mix-5,mix-5-sense)
is_a(mix-5-sense,mix.n.01)
has_sense(direct-7,direct-7-sense)
is_a(direct-7-sense,direct.v.09)
amod(chicken-2, Coat-1)
root(ROOT-0, chicken-2)
prepc_with(chicken-2, seasoning-4)
dobj(seasoning-4, mix-5)
prep_as(seasoning-4, direct-7)
prep_on(direct-7, package-9)
has_pos(Coat-1,JJ)
has_pos(chicken-2,NN)
has_pos(seasoning-4,VBG)
has_pos(mix-5,NN)
has_pos(direct-7,JJ)
has_pos(package-9,NN)
has_sense(Coat-1, null)
has_sense(seasoning-4, null)
has_sense(package-9, null)
---
// Mix until all ingredient be combine .
has_sense(ingredient-4,ingredient-4-sense)
is_a(ingredient-4-sense,ingredient.n.03)
has_sense(be-5,be-5-sense)
is_a(be-5-sense,be.v.01)
has_sense(combine-6,combine-6-sense)
is_a(combine-6-sense,compound.v.05)
nsubjpass(combine-6, Mix-1)
det(ingredient-4, all-3)
prep_until(Mix-1, ingredient-4)
auxpass(combine-6, be-5)
root(ROOT-0, combine-6)
has_pos(Mix-1,NNP)
has_pos(all-3,DT)
has_pos(ingredient-4,NN)
has_pos(be-5,VB)
has_pos(combine-6,VBN)
has_sense(all-3, null)
has_sense(Mix-1, null)
---
// In a mixing_bowl , mix the yogurt , cucumber , and lemon_juice together .
has_sense(mixing_bowl-3,mixing_bowl-3-sense)
is_a(mixing_bowl-3-sense,mixing_bowl.n.01)
has_sense(mix-5,mix-5-sense)
is_a(mix-5-sense,mix.v.04)
has_sense(yogurt-7,yogurt-7-sense)
is_a(yogurt-7-sense,yogurt.n.01)
has_sense(cucumber-9,cucumber-9-sense)
is_a(cucumber-9-sense,cucumber.n.02)
has_sense(lemon_juice-12,lemon_juice-12-sense)
is_a(lemon_juice-12-sense,lemon_juice.n.01)
det(mixing_bowl-3, a-2)
prep_in(mix-5, mixing_bowl-3)
root(ROOT-0, mix-5)
det(lemon_juice-12, the-6)
nn(lemon_juice-12, yogurt-7)
conj_and(lemon_juice-12, cucumber-9)
dobj(mix-5, lemon_juice-12)
advmod(lemon_juice-12, together-13)
has_pos(a-2,DT)
has_pos(mixing_bowl-3,NN)
has_pos(mix-5,VB)
has_pos(the-6,DT)
has_pos(yogurt-7,NN)
has_pos(cucumber-9,NN)
has_pos(lemon_juice-12,NN)
has_pos(together-13,RB)
has_sense(the-6, null)
has_sense(a-2, null)
has_sense(together-13, null)
---
// stir in the rum and mix well .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(rum-4,rum-4-sense)
is_a(rum-4-sense,rum.n.01)
has_sense(mix-6,mix-6-sense)
is_a(mix-6-sense,blend.v.03)
has_sense(well-7,well-7-sense)
is_a(well-7-sense,well.r.02)
root(ROOT-0, stir-1)
det(rum-4, the-3)
prep_in(stir-1, rum-4)
conj_and(stir-1, mix-6)
advmod(mix-6, well-7)
has_pos(stir-1,VB)
has_pos(the-3,DT)
has_pos(rum-4,NN)
has_pos(mix-6,VB)
has_pos(well-7,RB)
has_sense(the-3, null)
---
// A salad mix contain radish and carrot be fine , too .
has_sense(salad-2,salad-2-sense)
is_a(salad-2-sense,salad.n.01)
has_sense(contain-4,contain-4-sense)
is_a(contain-4-sense,incorporate.v.02)
has_sense(radish-5,radish-5-sense)
is_a(radish-5-sense,radish.n.03)
has_sense(carrot-7,carrot-7-sense)
is_a(carrot-7-sense,carrot.n.01)
has_sense(be-8,be-8-sense)
is_a(be-8-sense,be.v.01)
has_sense(fine-9,fine-9-sense)
is_a(fine-9-sense,all_right.s.01)
has_sense(too-11,too-11-sense)
is_a(too-11-sense,besides.r.02)
det(mix-3, A-1)
nn(mix-3, salad-2)
nsubj(contain-4, mix-3)
root(ROOT-0, contain-4)
dobj(contain-4, radish-5)
conj_and(radish-5, carrot-7)
cop(fine-9, be-8)
dep(contain-4, fine-9)
advmod(fine-9, too-11)
has_pos(A-1,DT)
has_pos(salad-2,NN)
has_pos(mix-3,NN)
has_pos(contain-4,VB)
has_pos(radish-5,NN)
has_pos(carrot-7,NN)
has_pos(be-8,VB)
has_pos(fine-9,JJ)
has_pos(too-11,RB)
has_sense(A-1, null)
has_sense(mix-3, null)
---
// mix all the ingredient and roll into small ball .
has_sense(mix-1,mix-1-sense)
is_a(mix-1-sense,blend.v.03)
has_sense(ingredient-4,ingredient-4-sense)
is_a(ingredient-4-sense,ingredient.n.03)
has_sense(roll-6,roll-6-sense)
is_a(roll-6-sense,roll.v.08)
has_sense(ball-9,ball-9-sense)
is_a(ball-9-sense,ball.n.03)
root(ROOT-0, mix-1)
predet(ingredient-4, all-2)
det(ingredient-4, the-3)
dobj(mix-1, ingredient-4)
conj_and(mix-1, roll-6)
amod(ball-9, small-8)
prep_into(roll-6, ball-9)
has_pos(mix-1,VB)
has_pos(all-2,PDT)
has_pos(the-3,DT)
has_pos(ingredient-4,NN)
has_pos(roll-6,VB)
has_pos(small-8,JJ)
has_pos(ball-9,NN)
has_sense(small-8, null)
has_sense(the-3, null)
has_sense(all-2, null)
---
// Mix sugar , brown_sugar , butter and egg in a large bowl with a mixer to achieve smooth dough .
has_sense(sugar-2,sugar-2-sense)
is_a(sugar-2-sense,sugar.n.01)
has_sense(brown_sugar-4,brown_sugar-4-sense)
is_a(brown_sugar-4-sense,brown_sugar.n.01)
has_sense(butter-6,butter-6-sense)
is_a(butter-6-sense,butter.n.01)
has_sense(egg-8,egg-8-sense)
is_a(egg-8-sense,egg.n.02)
has_sense(large-11,large-11-sense)
is_a(large-11-sense,large.a.01)
has_sense(bowl-12,bowl-12-sense)
is_a(bowl-12-sense,bowl.n.03)
has_sense(mixer-15,mixer-15-sense)
is_a(mixer-15-sense,mixer.n.04)
has_sense(achieve-17,achieve-17-sense)
is_a(achieve-17-sense,achieve.v.01)
has_sense(smooth-18,smooth-18-sense)
is_a(smooth-18-sense,smooth.a.01)
has_sense(dough-19,dough-19-sense)
is_a(dough-19-sense,dough.n.01)
root(ROOT-0, Mix-1)
dobj(Mix-1, sugar-2)
conj_and(sugar-2, brown_sugar-4)
conj_and(sugar-2, butter-6)
conj_and(sugar-2, egg-8)
det(bowl-12, a-10)
amod(bowl-12, large-11)
prep_in(Mix-1, bowl-12)
det(mixer-15, a-14)
prep_with(bowl-12, mixer-15)
aux(achieve-17, to-16)
infmod(mixer-15, achieve-17)
amod(dough-19, smooth-18)
dobj(achieve-17, dough-19)
has_pos(Mix-1,VB)
has_pos(sugar-2,NN)
has_pos(brown_sugar-4,NN)
has_pos(butter-6,NN)
has_pos(egg-8,NN)
has_pos(a-10,DT)
has_pos(large-11,JJ)
has_pos(bowl-12,NN)
has_pos(a-14,DT)
has_pos(mixer-15,NN)
has_pos(to-16,TO)
has_pos(achieve-17,VB)
has_pos(smooth-18,JJ)
has_pos(dough-19,NN)
has_sense(a-14, null)
has_sense(a-10, null)
has_sense(to-16, null)
has_sense(Mix-1, null)
---
// mix potato , meat , onion , egg_yolk , milk and pepper .
has_sense(mix-1,mix-1-sense)
is_a(mix-1-sense,mix.n.03)
has_sense(potato-2,potato-2-sense)
is_a(potato-2-sense,potato.n.01)
has_sense(meat-4,meat-4-sense)
is_a(meat-4-sense,meat.n.01)
has_sense(onion-6,onion-6-sense)
is_a(onion-6-sense,onion.n.01)
has_sense(egg_yolk-8,egg_yolk-8-sense)
is_a(egg_yolk-8-sense,egg_yolk.n.01)
has_sense(milk-10,milk-10-sense)
is_a(milk-10-sense,milk.n.01)
has_sense(pepper-12,pepper-12-sense)
is_a(pepper-12-sense,pepper.n.03)
root(ROOT-0, mix-1)
dobj(mix-1, potato-2)
conj_and(potato-2, meat-4)
conj_and(potato-2, onion-6)
conj_and(potato-2, egg_yolk-8)
conj_and(potato-2, milk-10)
conj_and(potato-2, pepper-12)
has_pos(mix-1,VB)
has_pos(potato-2,NN)
has_pos(meat-4,NN)
has_pos(onion-6,NN)
has_pos(egg_yolk-8,NN)
has_pos(milk-10,NN)
has_pos(pepper-12,NN)
---
// mix all these together until you see that the dressing be cover the pasta to your desire .
has_sense(mix-1,mix-1-sense)
is_a(mix-1-sense,blend.v.03)
has_sense(see-7,see-7-sense)
is_a(see-7-sense,see.v.01)
has_sense(dressing-10,dressing-10-sense)
is_a(dressing-10-sense,dressing.n.01)
has_sense(be-11,be-11-sense)
is_a(be-11-sense,be.v.01)
has_sense(cover-12,cover-12-sense)
is_a(cover-12-sense,overlay.v.01)
has_sense(pasta-14,pasta-14-sense)
is_a(pasta-14-sense,pasta.n.02)
has_sense(desire-17,desire-17-sense)
is_a(desire-17-sense,desire.n.03)
root(ROOT-0, mix-1)
predet(these-3, all-2)
dobj(mix-1, these-3)
prt(mix-1, together-4)
mark(see-7, until-5)
nsubj(see-7, you-6)
advcl(mix-1, see-7)
complm(be-11, that-8)
det(dressing-10, the-9)
nsubj(be-11, dressing-10)
ccomp(see-7, be-11)
ccomp(be-11, cover-12)
det(pasta-14, the-13)
dobj(cover-12, pasta-14)
poss(desire-17, your-16)
prep_to(cover-12, desire-17)
has_pos(mix-1,VB)
has_pos(all-2,PDT)
has_pos(these-3,DT)
has_pos(together-4,RP)
has_pos(until-5,IN)
has_pos(you-6,PRP)
has_pos(see-7,VBP)
has_pos(that-8,IN)
has_pos(the-9,DT)
has_pos(dressing-10,NN)
has_pos(be-11,VB)
has_pos(cover-12,VB)
has_pos(the-13,DT)
has_pos(pasta-14,NN)
has_pos(your-16,PRP$)
has_pos(desire-17,NN)
has_sense(you-6, null)
has_sense(together-4, null)
has_sense(these-3, null)
has_sense(the-9, null)
has_sense(until-5, null)
has_sense(that-8, null)
has_sense(your-16, null)
has_sense(the-13, null)
has_sense(all-2, null)
---
// mix all the dry ingredient together with the whisk .
has_sense(mix-1,mix-1-sense)
is_a(mix-1-sense,blend.v.03)
has_sense(dry-4,dry-4-sense)
is_a(dry-4-sense,dry.a.01)
has_sense(ingredient-5,ingredient-5-sense)
is_a(ingredient-5-sense,ingredient.n.03)
has_sense(together-6,together-6-sense)
is_a(together-6-sense,together.r.01)
has_sense(whisk-9,whisk-9-sense)
is_a(whisk-9-sense,whisk.n.01)
root(ROOT-0, mix-1)
predet(ingredient-5, all-2)
det(ingredient-5, the-3)
amod(ingredient-5, dry-4)
dobj(mix-1, ingredient-5)
det(whisk-9, the-8)
prep_together_with(mix-1, whisk-9)
has_pos(mix-1,VB)
has_pos(all-2,PDT)
has_pos(the-3,DT)
has_pos(dry-4,JJ)
has_pos(ingredient-5,NN)
has_pos(the-8,DT)
has_pos(whisk-9,NN)
has_sense(the-3, null)
has_sense(all-2, null)
has_sense(the-8, null)
---
// let the mix bake for 20 to 25 minutes .
has_sense(let-1,let-1-sense)
is_a(let-1-sense,let.v.01)
has_sense(bake-4,bake-4-sense)
is_a(bake-4-sense,bake.v.02)
root(ROOT-0, let-1)
det(bake-4, the-2)
nn(bake-4, mix-3)
dobj(let-1, bake-4)
number(25-8, 20-6)
dep(25-8, to-7)
num(minutes-9, 25-8)
prep_for(let-1, minutes-9)
has_pos(let-1,VB)
has_pos(the-2,DT)
has_pos(mix-3,NN)
has_pos(bake-4,NN)
has_pos(20-6,CD)
has_pos(to-7,TO)
has_pos(25-8,CD)
has_pos(minutes-9,NNS)
has_sense(minutes-9, null)
has_sense(the-2, null)
has_sense(mix-3, null)
has_sense(to-7, null)
has_sense(25-8, null)
has_sense(20-6, null)
---
// take the mix from the refrigerator .
has_sense(take-1,take-1-sense)
is_a(take-1-sense,take.v.04)
has_sense(refrigerator-6,refrigerator-6-sense)
is_a(refrigerator-6-sense,refrigerator.n.01)
root(ROOT-0, take-1)
det(mix-3, the-2)
dobj(take-1, mix-3)
det(refrigerator-6, the-5)
prep_from(take-1, refrigerator-6)
has_pos(take-1,VB)
has_pos(the-2,DT)
has_pos(mix-3,NN)
has_pos(the-5,DT)
has_pos(refrigerator-6,NN)
has_sense(the-5, null)
has_sense(the-2, null)
has_sense(mix-3, null)
---
// add the cooled chocolate to the mixture and mix in .
has_sense(add-1,add-1-sense)
is_a(add-1-sense,add.v.01)
has_sense(chocolate-4,chocolate-4-sense)
is_a(chocolate-4-sense,chocolate.n.02)
has_sense(mixture-7,mixture-7-sense)
is_a(mixture-7-sense,concoction.n.01)
has_sense(mix-9,mix-9-sense)
is_a(mix-9-sense,blend.v.03)
root(ROOT-0, add-1)
det(chocolate-4, the-2)
amod(chocolate-4, cooled-3)
dobj(add-1, chocolate-4)
det(mixture-7, the-6)
prep_to(add-1, mixture-7)
conj_and(add-1, mix-9)
prt(mix-9, in-10)
has_pos(add-1,VB)
has_pos(the-2,DT)
has_pos(cooled-3,JJ)
has_pos(chocolate-4,NN)
has_pos(the-6,DT)
has_pos(mixture-7,NN)
has_pos(mix-9,VB)
has_pos(in-10,RP)
has_sense(in-10, null)
has_sense(the-6, null)
has_sense(the-2, null)
has_sense(cooled-3, null)
---
// In a large mixing_bowl , mix eggs , sugar , oil , and mix with an electric_mixer .
has_sense(large-3,large-3-sense)
is_a(large-3-sense,large.a.01)
has_sense(mixing_bowl-4,mixing_bowl-4-sense)
is_a(mixing_bowl-4-sense,mixing_bowl.n.01)
has_sense(eggs-7,eggs-7-sense)
is_a(eggs-7-sense,egg.n.02)
has_sense(sugar-9,sugar-9-sense)
is_a(sugar-9-sense,sugar.n.01)
has_sense(oil-11,oil-11-sense)
is_a(oil-11-sense,vegetable_oil.n.01)
has_sense(electric_mixer-17,electric_mixer-17-sense)
is_a(electric_mixer-17-sense,electric_mixer.n.01)
det(mixing_bowl-4, a-2)
amod(mixing_bowl-4, large-3)
prep_in(mix-6, mixing_bowl-4)
root(ROOT-0, mix-6)
dobj(mix-6, eggs-7)
nn(mix-14, sugar-9)
conj_and(mix-14, oil-11)
appos(eggs-7, mix-14)
det(electric_mixer-17, an-16)
prep_with(mix-14, electric_mixer-17)
has_pos(a-2,DT)
has_pos(large-3,JJ)
has_pos(mixing_bowl-4,NN)
has_pos(mix-6,VB)
has_pos(eggs-7,NNS)
has_pos(sugar-9,NN)
has_pos(oil-11,NN)
has_pos(mix-14,NN)
has_pos(an-16,DT)
has_pos(electric_mixer-17,NN)
has_sense(mix-6, null)
has_sense(mix-14, null)
has_sense(a-2, null)
has_sense(an-16, null)
---
// Mix rolled_oats with wheat_flour .
has_sense(rolled_oats-2,rolled_oats-2-sense)
is_a(rolled_oats-2-sense,oatmeal.n.02)
has_sense(wheat_flour-4,wheat_flour-4-sense)
is_a(wheat_flour-4-sense,wheat_flour.n.01)
nsubj(rolled_oats-2, Mix-1)
root(ROOT-0, rolled_oats-2)
prep_with(rolled_oats-2, wheat_flour-4)
has_pos(Mix-1,NNP)
has_pos(rolled_oats-2,VBZ)
has_pos(wheat_flour-4,NN)
has_sense(Mix-1, null)
---
// Mix in vanilla , zucchini , and cooled chocolate .
has_sense(vanilla-3,vanilla-3-sense)
is_a(vanilla-3-sense,vanilla.n.02)
has_sense(zucchini-5,zucchini-5-sense)
is_a(zucchini-5-sense,zucchini.n.02)
has_sense(chocolate-9,chocolate-9-sense)
is_a(chocolate-9-sense,chocolate.n.02)
root(ROOT-0, Mix-1)
nn(zucchini-5, vanilla-3)
prep_in(Mix-1, zucchini-5)
nn(chocolate-9, cooled-8)
conj_and(zucchini-5, chocolate-9)
has_pos(Mix-1,NNP)
has_pos(vanilla-3,NN)
has_pos(zucchini-5,NN)
has_pos(cooled-8,NN)
has_pos(chocolate-9,NN)
has_sense(Mix-1, null)
has_sense(cooled-8, null)
---
// mix the butter , garlic , bread crumb , parsley , and parmesan in another bowl .
has_sense(mix-1,mix-1-sense)
is_a(mix-1-sense,mix.n.03)
has_sense(butter-3,butter-3-sense)
is_a(butter-3-sense,butter.n.01)
has_sense(garlic-5,garlic-5-sense)
is_a(garlic-5-sense,garlic.n.01)
has_sense(bread-7,bread-7-sense)
is_a(bread-7-sense,bread.n.01)
has_sense(crumb-8,crumb-8-sense)
is_a(crumb-8-sense,crumb.n.03)
has_sense(parsley-10,parsley-10-sense)
is_a(parsley-10-sense,parsley.n.02)
has_sense(parmesan-13,parmesan-13-sense)
is_a(parmesan-13-sense,parmesan.n.01)
has_sense(bowl-16,bowl-16-sense)
is_a(bowl-16-sense,bowl.n.01)
root(ROOT-0, mix-1)
det(butter-3, the-2)
dobj(mix-1, butter-3)
conj_and(butter-3, garlic-5)
nn(crumb-8, bread-7)
conj_and(butter-3, crumb-8)
conj_and(butter-3, parsley-10)
conj_and(butter-3, parmesan-13)
det(bowl-16, another-15)
prep_in(parmesan-13, bowl-16)
has_pos(mix-1,VB)
has_pos(the-2,DT)
has_pos(butter-3,NN)
has_pos(garlic-5,NN)
has_pos(bread-7,NN)
has_pos(crumb-8,NN)
has_pos(parsley-10,NN)
has_pos(parmesan-13,NN)
has_pos(another-15,DT)
has_pos(bowl-16,NN)
has_sense(the-2, null)
has_sense(another-15, null)
---
// Mix garlic , oil , and thyme leaves in bowl and season with salt and pepper to taste .
has_sense(garlic-2,garlic-2-sense)
is_a(garlic-2-sense,garlic.n.02)
has_sense(oil-4,oil-4-sense)
is_a(oil-4-sense,vegetable_oil.n.01)
has_sense(thyme-7,thyme-7-sense)
is_a(thyme-7-sense,thyme.n.02)
has_sense(bowl-10,bowl-10-sense)
is_a(bowl-10-sense,bowl.n.01)
has_sense(salt-14,salt-14-sense)
is_a(salt-14-sense,salt.n.02)
has_sense(pepper-16,pepper-16-sense)
is_a(pepper-16-sense,pepper.n.03)
nn(garlic-2, Mix-1)
nsubj(leaves-8, garlic-2)
conj_and(garlic-2, oil-4)
conj_and(garlic-2, thyme-7)
root(ROOT-0, leaves-8)
prep_in(leaves-8, bowl-10)
conj_and(bowl-10, season-12)
prep_with(bowl-10, salt-14)
conj_and(salt-14, pepper-16)
prep_to(leaves-8, taste-18)
has_pos(Mix-1,NNP)
has_pos(garlic-2,NNP)
has_pos(oil-4,NN)
has_pos(thyme-7,NN)
has_pos(leaves-8,VBZ)
has_pos(bowl-10,NN)
has_pos(season-12,NN)
has_pos(salt-14,NN)
has_pos(pepper-16,NN)
has_pos(taste-18,NN)
has_sense(Mix-1, null)
has_sense(season-12, null)
has_sense(taste-18, null)
has_sense(leaves-8, null)
---
// mix the ingredient to make the dough .
has_sense(mix-1,mix-1-sense)
is_a(mix-1-sense,blend.v.03)
has_sense(ingredient-3,ingredient-3-sense)
is_a(ingredient-3-sense,ingredient.n.03)
has_sense(make-5,make-5-sense)
is_a(make-5-sense,make.v.15)
has_sense(dough-7,dough-7-sense)
is_a(dough-7-sense,dough.n.01)
root(ROOT-0, mix-1)
det(ingredient-3, the-2)
dobj(mix-1, ingredient-3)
aux(make-5, to-4)
infmod(ingredient-3, make-5)
det(dough-7, the-6)
dobj(make-5, dough-7)
has_pos(mix-1,VB)
has_pos(the-2,DT)
has_pos(ingredient-3,NN)
has_pos(to-4,TO)
has_pos(make-5,VB)
has_pos(the-6,DT)
has_pos(dough-7,NN)
has_sense(the-6, null)
has_sense(to-4, null)
has_sense(the-2, null)
---
// mix all the ingredient in a bowl .
has_sense(mix-1,mix-1-sense)
is_a(mix-1-sense,mix.n.03)
has_sense(ingredient-4,ingredient-4-sense)
is_a(ingredient-4-sense,ingredient.n.03)
has_sense(bowl-7,bowl-7-sense)
is_a(bowl-7-sense,bowl.n.01)
root(ROOT-0, mix-1)
predet(ingredient-4, all-2)
det(ingredient-4, the-3)
dobj(mix-1, ingredient-4)
det(bowl-7, a-6)
prep_in(mix-1, bowl-7)
has_pos(mix-1,VB)
has_pos(all-2,PDT)
has_pos(the-3,DT)
has_pos(ingredient-4,NN)
has_pos(a-6,DT)
has_pos(bowl-7,NN)
has_sense(a-6, null)
has_sense(the-3, null)
has_sense(all-2, null)
---
// Season with salt and pepper and mix everything together .
has_sense(salt-3,salt-3-sense)
is_a(salt-3-sense,salt.n.02)
has_sense(pepper-5,pepper-5-sense)
is_a(pepper-5-sense,pepper.n.03)
has_sense(together-9,together-9-sense)
is_a(together-9-sense,together.r.01)
root(ROOT-0, Season-1)
prep_with(Season-1, salt-3)
conj_and(salt-3, pepper-5)
conj_and(Season-1, mix-7)
dobj(mix-7, everything-8)
advmod(mix-7, together-9)
has_pos(Season-1,VB)
has_pos(salt-3,NN)
has_pos(pepper-5,NN)
has_pos(mix-7,VB)
has_pos(everything-8,NN)
has_pos(together-9,RB)
has_sense(everything-8, null)
has_sense(mix-7, null)
has_sense(Season-1, null)
---
// add the ground almonds and sugar and mix in well .
has_sense(add-1,add-1-sense)
is_a(add-1-sense,add.v.01)
has_sense(sugar-6,sugar-6-sense)
is_a(sugar-6-sense,sugar.n.01)
has_sense(mix-8,mix-8-sense)
is_a(mix-8-sense,blend.v.03)
has_sense(well-10,well-10-sense)
is_a(well-10-sense,well.r.02)
root(ROOT-0, add-1)
det(almonds-4, the-2)
nn(almonds-4, ground-3)
dobj(add-1, almonds-4)
conj_and(almonds-4, sugar-6)
conj_and(add-1, mix-8)
prep(mix-8, in-9)
pcomp(in-9, well-10)
has_pos(add-1,VB)
has_pos(the-2,DT)
has_pos(ground-3,NN)
has_pos(almonds-4,NNS)
has_pos(sugar-6,NN)
has_pos(mix-8,VB)
has_pos(in-9,IN)
has_pos(well-10,RB)
has_sense(the-2, null)
has_sense(ground-3, null)
has_sense(in-9, null)
has_sense(almonds-4, null)
---
// then mix them together with the fork .
has_sense(then-1,then-1-sense)
is_a(then-1-sense,then.r.01)
has_sense(mix-2,mix-2-sense)
is_a(mix-2-sense,blend.v.03)
has_sense(together-4,together-4-sense)
is_a(together-4-sense,together.r.01)
has_sense(fork-7,fork-7-sense)
is_a(fork-7-sense,fork.n.01)
advmod(mix-2, then-1)
root(ROOT-0, mix-2)
dobj(mix-2, them-3)
det(fork-7, the-6)
prep_together_with(mix-2, fork-7)
has_pos(then-1,RB)
has_pos(mix-2,VB)
has_pos(them-3,PRP)
has_pos(the-6,DT)
has_pos(fork-7,NN)
has_sense(them-3, null)
has_sense(the-6, null)
---
// When the crouton be cool , mix them into the bowl , too .
has_sense(crouton-3,crouton-3-sense)
is_a(crouton-3-sense,crouton.n.01)
has_sense(be-4,be-4-sense)
is_a(be-4-sense,be.v.01)
has_sense(cool-5,cool-5-sense)
is_a(cool-5-sense,cool.a.01)
has_sense(mix-7,mix-7-sense)
is_a(mix-7-sense,mix.v.04)
has_sense(bowl-11,bowl-11-sense)
is_a(bowl-11-sense,bowl.n.01)
has_sense(too-13,too-13-sense)
is_a(too-13-sense,besides.r.02)
advmod(cool-5, When-1)
det(crouton-3, the-2)
nsubj(cool-5, crouton-3)
cop(cool-5, be-4)
advcl(mix-7, cool-5)
root(ROOT-0, mix-7)
dobj(mix-7, them-8)
det(bowl-11, the-10)
prep_into(mix-7, bowl-11)
advmod(bowl-11, too-13)
has_pos(When-1,WRB)
has_pos(the-2,DT)
has_pos(crouton-3,NN)
has_pos(be-4,VB)
has_pos(cool-5,JJ)
has_pos(mix-7,VB)
has_pos(them-8,PRP)
has_pos(the-10,DT)
has_pos(bowl-11,NN)
has_pos(too-13,RB)
has_sense(them-8, null)
has_sense(the-2, null)
has_sense(When-1, null)
has_sense(the-10, null)
---
// mix the salt in , and let the cabbage wilt for about an hour .
has_sense(mix-1,mix-1-sense)
is_a(mix-1-sense,mix.v.04)
has_sense(salt-3,salt-3-sense)
is_a(salt-3-sense,salt.n.02)
has_sense(let-7,let-7-sense)
is_a(let-7-sense,let.v.05)
has_sense(cabbage-9,cabbage-9-sense)
is_a(cabbage-9-sense,cabbage.n.01)
has_sense(wilt-10,wilt-10-sense)
is_a(wilt-10-sense,wilt.n.02)
has_sense(about-12,about-12-sense)
is_a(about-12-sense,approximately.r.01)
has_sense(hour-14,hour-14-sense)
is_a(hour-14-sense,hour.n.01)
root(ROOT-0, mix-1)
det(salt-3, the-2)
dobj(mix-1, salt-3)
prep(mix-1, in-4)
conj_and(mix-1, let-7)
det(wilt-10, the-8)
amod(wilt-10, cabbage-9)
dobj(let-7, wilt-10)
quantmod(hour-14, about-12)
quantmod(hour-14, an-13)
prep_for(let-7, hour-14)
has_pos(mix-1,VB)
has_pos(the-2,DT)
has_pos(salt-3,NN)
has_pos(in-4,IN)
has_pos(let-7,VB)
has_pos(the-8,DT)
has_pos(cabbage-9,JJ)
has_pos(wilt-10,NN)
has_pos(about-12,RB)
has_pos(an-13,DT)
has_pos(hour-14,NN)
has_sense(the-2, null)
has_sense(in-4, null)
has_sense(the-8, null)
has_sense(an-13, null)
---
// mix the flour and baking_powder together .
has_sense(mix-1,mix-1-sense)
is_a(mix-1-sense,blend.v.03)
has_sense(flour-3,flour-3-sense)
is_a(flour-3-sense,flour.n.01)
has_sense(baking_powder-5,baking_powder-5-sense)
is_a(baking_powder-5-sense,baking_powder.n.01)
has_sense(together-6,together-6-sense)
is_a(together-6-sense,together.r.01)
root(ROOT-0, mix-1)
det(flour-3, the-2)
dobj(mix-1, flour-3)
conj_and(flour-3, baking_powder-5)
advmod(mix-1, together-6)
has_pos(mix-1,VB)
has_pos(the-2,DT)
has_pos(flour-3,NN)
has_pos(baking_powder-5,NN)
has_pos(together-6,RB)
has_sense(the-2, null)
---
// After all the oil has be add , mix in 2 tbsp of vinegar and set this mayonnaise mixture aside .
has_sense(oil-4,oil-4-sense)
is_a(oil-4-sense,vegetable_oil.n.01)
has_sense(be-6,be-6-sense)
is_a(be-6-sense,be.v.05)
has_sense(add-7,add-7-sense)
is_a(add-7-sense,add.v.01)
has_sense(mix-9,mix-9-sense)
is_a(mix-9-sense,mix.v.04)
has_sense(vinegar-14,vinegar-14-sense)
is_a(vinegar-14-sense,vinegar.n.01)
has_sense(set-16,set-16-sense)
is_a(set-16-sense,put.v.01)
has_sense(mayonnaise-18,mayonnaise-18-sense)
is_a(mayonnaise-18-sense,mayonnaise.n.01)
has_sense(mixture-19,mixture-19-sense)
is_a(mixture-19-sense,concoction.n.01)
has_sense(aside-20,aside-20-sense)
is_a(aside-20-sense,aside.r.01)
mark(add-7, After-1)
predet(oil-4, all-2)
det(oil-4, the-3)
nsubj(add-7, oil-4)
aux(add-7, has-5)
aux(add-7, be-6)
advcl(mix-9, add-7)
root(ROOT-0, mix-9)
num(tbsp-12, 2-11)
prep_in(mix-9, tbsp-12)
prep_of(tbsp-12, vinegar-14)
conj_and(mix-9, set-16)
det(mixture-19, this-17)
nn(mixture-19, mayonnaise-18)
dobj(set-16, mixture-19)
advmod(set-16, aside-20)
has_pos(After-1,IN)
has_pos(all-2,PDT)
has_pos(the-3,DT)
has_pos(oil-4,NN)
has_pos(has-5,VBZ)
has_pos(be-6,VB)
has_pos(add-7,VB)
has_pos(mix-9,VB)
has_pos(2-11,CD)
has_pos(tbsp-12,NN)
has_pos(vinegar-14,NN)
has_pos(set-16,VB)
has_pos(this-17,DT)
has_pos(mayonnaise-18,NN)
has_pos(mixture-19,NN)
has_pos(aside-20,RB)
has_sense(After-1, null)
has_sense(the-3, null)
has_sense(tbsp-12, null)
has_sense(this-17, null)
has_sense(2-11, null)
has_sense(all-2, null)
has_sense(has-5, null)
---
// mix in the curry_powder and sugar and then season with salt and pepper .
has_sense(mix-1,mix-1-sense)
is_a(mix-1-sense,mix.n.03)
has_sense(curry_powder-4,curry_powder-4-sense)
is_a(curry_powder-4-sense,curry_powder.n.01)
has_sense(sugar-6,sugar-6-sense)
is_a(sugar-6-sense,sugar.n.01)
has_sense(then-8,then-8-sense)
is_a(then-8-sense,then.r.01)
has_sense(salt-11,salt-11-sense)
is_a(salt-11-sense,salt.n.02)
has_sense(pepper-13,pepper-13-sense)
is_a(pepper-13-sense,pepper.n.03)
root(ROOT-0, mix-1)
det(curry_powder-4, the-3)
prep_in(mix-1, curry_powder-4)
conj_and(curry_powder-4, sugar-6)
conj_and(curry_powder-4, then-8)
tmod(mix-1, season-9)
prep_with(mix-1, salt-11)
conj_and(salt-11, pepper-13)
has_pos(mix-1,VB)
has_pos(the-3,DT)
has_pos(curry_powder-4,NN)
has_pos(sugar-6,NN)
has_pos(then-8,RB)
has_pos(season-9,NN)
has_pos(salt-11,NN)
has_pos(pepper-13,NN)
has_sense(the-3, null)
has_sense(season-9, null)
---
// pour the tomato mixture over the rice and mix well .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(tomato-3,tomato-3-sense)
is_a(tomato-3-sense,tomato.n.01)
has_sense(mixture-4,mixture-4-sense)
is_a(mixture-4-sense,concoction.n.01)
has_sense(rice-7,rice-7-sense)
is_a(rice-7-sense,rice.n.01)
has_sense(mix-9,mix-9-sense)
is_a(mix-9-sense,blend.v.03)
has_sense(well-10,well-10-sense)
is_a(well-10-sense,well.r.02)
root(ROOT-0, pour-1)
det(mixture-4, the-2)
nn(mixture-4, tomato-3)
dobj(pour-1, mixture-4)
det(rice-7, the-6)
prep_over(pour-1, rice-7)
conj_and(pour-1, mix-9)
advmod(mix-9, well-10)
has_pos(pour-1,VB)
has_pos(the-2,DT)
has_pos(tomato-3,NN)
has_pos(mixture-4,NN)
has_pos(the-6,DT)
has_pos(rice-7,NN)
has_pos(mix-9,VB)
has_pos(well-10,RB)
has_sense(the-6, null)
has_sense(the-2, null)
---
// crack in the eggs one at a time and mix in .
has_sense(crack-1,crack-1-sense)
is_a(crack-1-sense,crack.v.01)
has_sense(eggs-4,eggs-4-sense)
is_a(eggs-4-sense,egg.n.02)
has_sense(one-5,one-5-sense)
is_a(one-5-sense,one.n.02)
has_sense(time-8,time-8-sense)
is_a(time-8-sense,time.n.01)
root(ROOT-0, crack-1)
det(one-5, the-3)
nn(one-5, eggs-4)
prep_in(crack-1, one-5)
det(time-8, a-7)
prep_at(crack-1, time-8)
conj_and(crack-1, mix-10)
prt(mix-10, in-11)
has_pos(crack-1,VB)
has_pos(the-3,DT)
has_pos(eggs-4,NNS)
has_pos(one-5,NN)
has_pos(a-7,DT)
has_pos(time-8,NN)
has_pos(mix-10,VB)
has_pos(in-11,RP)
has_sense(in-11, null)
has_sense(the-3, null)
has_sense(mix-10, null)
has_sense(a-7, null)
---
// mix the potato and cooked vegetable in a bowl .
has_sense(mix-1,mix-1-sense)
is_a(mix-1-sense,blend.v.03)
has_sense(potato-3,potato-3-sense)
is_a(potato-3-sense,potato.n.01)
has_sense(vegetable-6,vegetable-6-sense)
is_a(vegetable-6-sense,vegetable.n.02)
has_sense(bowl-9,bowl-9-sense)
is_a(bowl-9-sense,bowl.n.01)
root(ROOT-0, mix-1)
det(vegetable-6, the-2)
nn(vegetable-6, potato-3)
conj_and(potato-3, cooked-5)
dobj(mix-1, vegetable-6)
det(bowl-9, a-8)
prep_in(vegetable-6, bowl-9)
has_pos(mix-1,VB)
has_pos(the-2,DT)
has_pos(potato-3,NN)
has_pos(cooked-5,NN)
has_pos(vegetable-6,NN)
has_pos(a-8,DT)
has_pos(bowl-9,NN)
has_sense(cooked-5, null)
has_sense(a-8, null)
has_sense(the-2, null)
---
// mix it all well to make a dough .
has_sense(mix-1,mix-1-sense)
is_a(mix-1-sense,blend.v.03)
has_sense(well-4,well-4-sense)
is_a(well-4-sense,well.r.02)
has_sense(make-6,make-6-sense)
is_a(make-6-sense,produce.v.02)
has_sense(dough-8,dough-8-sense)
is_a(dough-8-sense,dough.n.01)
root(ROOT-0, mix-1)
dobj(mix-1, it-2)
dep(well-4, all-3)
advmod(mix-1, well-4)
aux(make-6, to-5)
dep(well-4, make-6)
det(dough-8, a-7)
dobj(make-6, dough-8)
has_pos(mix-1,VB)
has_pos(it-2,PRP)
has_pos(all-3,DT)
has_pos(well-4,RB)
has_pos(to-5,TO)
has_pos(make-6,VB)
has_pos(a-7,DT)
has_pos(dough-8,NN)
has_sense(a-7, null)
has_sense(all-3, null)
has_sense(to-5, null)
has_sense(it-2, null)
---
// follow the exact direction on the cake_mix box .
has_sense(follow-1,follow-1-sense)
is_a(follow-1-sense,comply.v.01)
has_sense(exact-3,exact-3-sense)
is_a(exact-3-sense,exact.a.01)
has_sense(direction-4,direction-4-sense)
is_a(direction-4-sense,direction.n.06)
has_sense(cake_mix-7,cake_mix-7-sense)
is_a(cake_mix-7-sense,cake_mix.n.01)
has_sense(box-8,box-8-sense)
is_a(box-8-sense,box.n.01)
root(ROOT-0, follow-1)
det(direction-4, the-2)
amod(direction-4, exact-3)
dobj(follow-1, direction-4)
det(box-8, the-6)
nn(box-8, cake_mix-7)
prep_on(follow-1, box-8)
has_pos(follow-1,VB)
has_pos(the-2,DT)
has_pos(exact-3,JJ)
has_pos(direction-4,NN)
has_pos(the-6,DT)
has_pos(cake_mix-7,NN)
has_pos(box-8,NN)
has_sense(the-6, null)
has_sense(the-2, null)
---
// mix together the mango juice , vinegar , honey , ketchup and cornstarch .
has_sense(mix-1,mix-1-sense)
is_a(mix-1-sense,blend.v.03)
has_sense(mango-4,mango-4-sense)
is_a(mango-4-sense,mango.n.02)
has_sense(juice-5,juice-5-sense)
is_a(juice-5-sense,juice.n.01)
has_sense(vinegar-7,vinegar-7-sense)
is_a(vinegar-7-sense,vinegar.n.01)
has_sense(honey-9,honey-9-sense)
is_a(honey-9-sense,honey.n.01)
has_sense(ketchup-11,ketchup-11-sense)
is_a(ketchup-11-sense,catsup.n.01)
has_sense(cornstarch-13,cornstarch-13-sense)
is_a(cornstarch-13-sense,cornstarch.n.01)
root(ROOT-0, mix-1)
prt(mix-1, together-2)
det(juice-5, the-3)
nn(juice-5, mango-4)
dobj(mix-1, juice-5)
conj_and(juice-5, vinegar-7)
conj_and(juice-5, honey-9)
conj_and(juice-5, ketchup-11)
conj_and(juice-5, cornstarch-13)
has_pos(mix-1,VB)
has_pos(together-2,RP)
has_pos(the-3,DT)
has_pos(mango-4,NN)
has_pos(juice-5,NN)
has_pos(vinegar-7,NN)
has_pos(honey-9,NN)
has_pos(ketchup-11,NN)
has_pos(cornstarch-13,NN)
has_sense(the-3, null)
has_sense(together-2, null)
---
// mix all ingredient in a mixing_bowl .
has_sense(mix-1,mix-1-sense)
is_a(mix-1-sense,mix.n.03)
has_sense(ingredient-3,ingredient-3-sense)
is_a(ingredient-3-sense,ingredient.n.03)
has_sense(mixing_bowl-6,mixing_bowl-6-sense)
is_a(mixing_bowl-6-sense,mixing_bowl.n.01)
root(ROOT-0, mix-1)
det(ingredient-3, all-2)
dobj(mix-1, ingredient-3)
det(mixing_bowl-6, a-5)
prep_in(ingredient-3, mixing_bowl-6)
has_pos(mix-1,VB)
has_pos(all-2,DT)
has_pos(ingredient-3,NN)
has_pos(a-5,DT)
has_pos(mixing_bowl-6,NN)
has_sense(a-5, null)
has_sense(all-2, null)
---
// Mix 1\/2 teaspoon of baking_powder into the flour .
has_sense(teaspoon-3,teaspoon-3-sense)
is_a(teaspoon-3-sense,teaspoon.n.01)
has_sense(baking_powder-5,baking_powder-5-sense)
is_a(baking_powder-5-sense,baking_powder.n.01)
has_sense(flour-8,flour-8-sense)
is_a(flour-8-sense,flour.n.01)
nn(teaspoon-3, Mix-1)
num(teaspoon-3, 1\/2-2)
root(ROOT-0, teaspoon-3)
prep_of(teaspoon-3, baking_powder-5)
det(flour-8, the-7)
prep_into(teaspoon-3, flour-8)
has_pos(Mix-1,NNP)
has_pos(1\/2-2,CD)
has_pos(teaspoon-3,NN)
has_pos(baking_powder-5,NN)
has_pos(the-7,DT)
has_pos(flour-8,NN)
has_sense(the-7, null)
has_sense(1\/2-2, null)
has_sense(Mix-1, null)
---
// mix over medium\/low heat and stir in the cheese until melted .
has_sense(mix-1,mix-1-sense)
is_a(mix-1-sense,mix.n.03)
has_sense(stir-6,stir-6-sense)
is_a(stir-6-sense,stir.v.01)
has_sense(cheese-9,cheese-9-sense)
is_a(cheese-9-sense,cheese.n.01)
has_sense(melted-11,melted-11-sense)
is_a(melted-11-sense,melted.a.01)
root(ROOT-0, mix-1)
nn(heat-4, medium\/low-3)
prep_over(mix-1, heat-4)
conj_and(mix-1, stir-6)
det(cheese-9, the-8)
prep_in(stir-6, cheese-9)
prep_until(stir-6, melted-11)
has_pos(mix-1,VB)
has_pos(medium\/low-3,NN)
has_pos(heat-4,NN)
has_pos(stir-6,VB)
has_pos(the-8,DT)
has_pos(cheese-9,NN)
has_pos(melted-11,NN)
has_sense(the-8, null)
has_sense(medium\/low-3, null)
has_sense(heat-4, null)
---
// mix together the powdered_sugar , butter , almond flavoring and hot water until smooth .
has_sense(mix-1,mix-1-sense)
is_a(mix-1-sense,blend.v.03)
has_sense(powdered_sugar-4,powdered_sugar-4-sense)
is_a(powdered_sugar-4-sense,powdered_sugar.n.01)
has_sense(butter-6,butter-6-sense)
is_a(butter-6-sense,butter.n.01)
has_sense(almond-8,almond-8-sense)
is_a(almond-8-sense,almond.n.02)
has_sense(flavoring-9,flavoring-9-sense)
is_a(flavoring-9-sense,flavorer.n.01)
has_sense(smooth-14,smooth-14-sense)
is_a(smooth-14-sense,smooth.a.01)
root(ROOT-0, mix-1)
prt(mix-1, together-2)
det(flavoring-9, the-3)
nn(flavoring-9, powdered_sugar-4)
dep(flavoring-9, butter-6)
amod(flavoring-9, almond-8)
dobj(mix-1, flavoring-9)
amod(water-12, hot-11)
conj_and(flavoring-9, water-12)
prep_until(mix-1, smooth-14)
has_pos(mix-1,VB)
has_pos(together-2,RP)
has_pos(the-3,DT)
has_pos(powdered_sugar-4,NN)
has_pos(butter-6,NN)
has_pos(almond-8,JJ)
has_pos(flavoring-9,NN)
has_pos(hot-11,JJ)
has_pos(water-12,NN)
has_pos(smooth-14,JJ)
has_sense(the-3, null)
has_sense(together-2, null)
has_sense(hot-11, null)
has_sense(water-12, null)
---
// mix everything together and chill for a few hours before serve .
has_sense(mix-1,mix-1-sense)
is_a(mix-1-sense,blend.v.03)
has_sense(together-3,together-3-sense)
is_a(together-3-sense,together.r.01)
has_sense(chill-5,chill-5-sense)
is_a(chill-5-sense,cool.v.01)
has_sense(few-8,few-8-sense)
is_a(few-8-sense,few.a.01)
has_sense(serve-11,serve-11-sense)
is_a(serve-11-sense,serve.v.05)
root(ROOT-0, mix-1)
dobj(mix-1, everything-2)
advmod(mix-1, together-3)
conj_and(mix-1, chill-5)
det(hours-9, a-7)
amod(hours-9, few-8)
prep_for(chill-5, hours-9)
mark(serve-11, before-10)
advcl(chill-5, serve-11)
has_pos(mix-1,VB)
has_pos(everything-2,NN)
has_pos(together-3,RB)
has_pos(chill-5,VB)
has_pos(a-7,DT)
has_pos(few-8,JJ)
has_pos(hours-9,NNS)
has_pos(before-10,IN)
has_pos(serve-11,VBP)
has_sense(hours-9, null)
has_sense(everything-2, null)
has_sense(before-10, null)
has_sense(a-7, null)
---
// Mix together .
has_sense(together-2,together-2-sense)
is_a(together-2-sense,together.r.02)
root(ROOT-0, Mix-1)
dep(Mix-1, together-2)
has_pos(Mix-1,NNP)
has_pos(together-2,RB)
has_sense(Mix-1, null)
---
// get a bowl and mix the worcester_sauce , tomato , sauce , and ketchup .
has_sense(get-1,get-1-sense)
is_a(get-1-sense,get.v.01)
has_sense(bowl-3,bowl-3-sense)
is_a(bowl-3-sense,bowl.n.01)
has_sense(mix-5,mix-5-sense)
is_a(mix-5-sense,blend.v.03)
has_sense(worcester_sauce-7,worcester_sauce-7-sense)
is_a(worcester_sauce-7-sense,worcester_sauce.n.01)
has_sense(tomato-9,tomato-9-sense)
is_a(tomato-9-sense,tomato.n.01)
has_sense(sauce-11,sauce-11-sense)
is_a(sauce-11-sense,sauce.n.01)
has_sense(ketchup-14,ketchup-14-sense)
is_a(ketchup-14-sense,catsup.n.01)
root(ROOT-0, get-1)
det(bowl-3, a-2)
dobj(get-1, bowl-3)
conj_and(get-1, mix-5)
det(worcester_sauce-7, the-6)
dobj(mix-5, worcester_sauce-7)
conj_and(worcester_sauce-7, tomato-9)
conj_and(worcester_sauce-7, sauce-11)
conj_and(worcester_sauce-7, ketchup-14)
has_pos(get-1,VB)
has_pos(a-2,DT)
has_pos(bowl-3,NN)
has_pos(mix-5,VB)
has_pos(the-6,DT)
has_pos(worcester_sauce-7,NN)
has_pos(tomato-9,NN)
has_pos(sauce-11,NN)
has_pos(ketchup-14,NN)
has_sense(the-6, null)
has_sense(a-2, null)
---
// Mix blueberries lightly with other ingredient in a mixing_bowl .
has_sense(lightly-3,lightly-3-sense)
is_a(lightly-3-sense,lightly.r.03)
has_sense(other-5,other-5-sense)
is_a(other-5-sense,other.a.01)
has_sense(ingredient-6,ingredient-6-sense)
is_a(ingredient-6-sense,ingredient.n.03)
has_sense(mixing_bowl-9,mixing_bowl-9-sense)
is_a(mixing_bowl-9-sense,mixing_bowl.n.01)
nsubj(blueberries-2, Mix-1)
root(ROOT-0, blueberries-2)
advmod(blueberries-2, lightly-3)
amod(ingredient-6, other-5)
prep_with(blueberries-2, ingredient-6)
det(mixing_bowl-9, a-8)
prep_in(ingredient-6, mixing_bowl-9)
has_pos(Mix-1,NNP)
has_pos(blueberries-2,VBZ)
has_pos(lightly-3,RB)
has_pos(other-5,JJ)
has_pos(ingredient-6,NN)
has_pos(a-8,DT)
has_pos(mixing_bowl-9,NN)
has_sense(blueberries-2, null)
has_sense(a-8, null)
has_sense(Mix-1, null)
---
// add milk and mix it gradually .
has_sense(add-1,add-1-sense)
is_a(add-1-sense,add.v.01)
has_sense(milk-2,milk-2-sense)
is_a(milk-2-sense,milk.n.01)
has_sense(mix-4,mix-4-sense)
is_a(mix-4-sense,blend.v.03)
has_sense(gradually-6,gradually-6-sense)
is_a(gradually-6-sense,gradually.r.01)
root(ROOT-0, add-1)
dobj(add-1, milk-2)
conj_and(add-1, mix-4)
dobj(mix-4, it-5)
advmod(mix-4, gradually-6)
has_pos(add-1,VB)
has_pos(milk-2,NN)
has_pos(mix-4,VB)
has_pos(it-5,PRP)
has_pos(gradually-6,RB)
has_sense(it-5, null)
---
// add about 1\/4 cup of parmesan cheese to the bowl and mix well .
has_sense(add-1,add-1-sense)
is_a(add-1-sense,add.v.01)
has_sense(about-2,about-2-sense)
is_a(about-2-sense,approximately.r.01)
has_sense(cup-4,cup-4-sense)
is_a(cup-4-sense,cup.n.04)
has_sense(parmesan-6,parmesan-6-sense)
is_a(parmesan-6-sense,parmesan.n.01)
has_sense(cheese-7,cheese-7-sense)
is_a(cheese-7-sense,cheese.n.01)
has_sense(bowl-10,bowl-10-sense)
is_a(bowl-10-sense,bowl.n.01)
has_sense(mix-12,mix-12-sense)
is_a(mix-12-sense,blend.v.03)
has_sense(well-13,well-13-sense)
is_a(well-13-sense,well.r.02)
root(ROOT-0, add-1)
quantmod(1\/4-3, about-2)
num(cup-4, 1\/4-3)
dobj(add-1, cup-4)
nn(cheese-7, parmesan-6)
prep_of(cup-4, cheese-7)
det(bowl-10, the-9)
prep_to(add-1, bowl-10)
conj_and(add-1, mix-12)
advmod(mix-12, well-13)
has_pos(add-1,VB)
has_pos(about-2,RB)
has_pos(1\/4-3,CD)
has_pos(cup-4,NN)
has_pos(parmesan-6,NN)
has_pos(cheese-7,NN)
has_pos(the-9,DT)
has_pos(bowl-10,NN)
has_pos(mix-12,VB)
has_pos(well-13,RB)
has_sense(1\/4-3, null)
has_sense(the-9, null)
---
// Mix the ingredient well use a spoon .
has_sense(ingredient-3,ingredient-3-sense)
is_a(ingredient-3-sense,ingredient.n.03)
has_sense(well-4,well-4-sense)
is_a(well-4-sense,well.r.02)
has_sense(use-5,use-5-sense)
is_a(use-5-sense,use.v.01)
has_sense(spoon-7,spoon-7-sense)
is_a(spoon-7-sense,spoon.n.01)
nsubj(use-5, Mix-1)
det(ingredient-3, the-2)
npadvmod(well-4, ingredient-3)
advmod(use-5, well-4)
root(ROOT-0, use-5)
det(spoon-7, a-6)
dobj(use-5, spoon-7)
has_pos(Mix-1,NNP)
has_pos(the-2,DT)
has_pos(ingredient-3,NN)
has_pos(well-4,RB)
has_pos(use-5,VBP)
has_pos(a-6,DT)
has_pos(spoon-7,NN)
has_sense(a-6, null)
has_sense(Mix-1, null)
has_sense(the-2, null)
---
// Mix 2 1\/2 cup of the cooked rice , sugar , melted butter , milk , eggs , cinnamon , nutmeg and raisin well .
has_sense(cup-3,cup-3-sense)
is_a(cup-3-sense,cup.n.02)
has_sense(cooked-6,cooked-6-sense)
is_a(cooked-6-sense,cooked.a.01)
has_sense(rice-7,rice-7-sense)
is_a(rice-7-sense,rice.n.01)
has_sense(sugar-9,sugar-9-sense)
is_a(sugar-9-sense,sugar.n.01)
has_sense(butter-12,butter-12-sense)
is_a(butter-12-sense,butter.n.01)
has_sense(milk-14,milk-14-sense)
is_a(milk-14-sense,milk.n.01)
has_sense(eggs-16,eggs-16-sense)
is_a(eggs-16-sense,egg.n.02)
has_sense(cinnamon-18,cinnamon-18-sense)
is_a(cinnamon-18-sense,cinnamon.n.03)
has_sense(nutmeg-20,nutmeg-20-sense)
is_a(nutmeg-20-sense,nutmeg.n.02)
has_sense(raisin-22,raisin-22-sense)
is_a(raisin-22-sense,raisin.n.01)
has_sense(well-23,well-23-sense)
is_a(well-23-sense,well.r.02)
nn(cup-3, Mix-1)
num(cup-3, 2 1\/2-2)
nsubj(melted-11, cup-3)
det(rice-7, the-5)
amod(rice-7, cooked-6)
prep_of(cup-3, rice-7)
appos(rice-7, sugar-9)
root(ROOT-0, melted-11)
dobj(melted-11, butter-12)
conj_and(butter-12, milk-14)
conj_and(butter-12, eggs-16)
conj_and(butter-12, cinnamon-18)
conj_and(butter-12, nutmeg-20)
conj_and(butter-12, raisin-22)
advmod(melted-11, well-23)
has_pos(Mix-1,NNP)
has_pos(2 1\/2-2,CD)
has_pos(cup-3,NN)
has_pos(the-5,DT)
has_pos(cooked-6,JJ)
has_pos(rice-7,NN)
has_pos(sugar-9,NN)
has_pos(melted-11,VBD)
has_pos(butter-12,NN)
has_pos(milk-14,NN)
has_pos(eggs-16,NNS)
has_pos(cinnamon-18,NN)
has_pos(nutmeg-20,NN)
has_pos(raisin-22,NN)
has_pos(well-23,RB)
has_sense(the-5, null)
has_sense(Mix-1, null)
has_sense(2 1\/2-2, null)
has_sense(melted-11, null)
---
// In a separate bowl , mix the oil , sugar and eggs .
has_sense(separate-3,separate-3-sense)
is_a(separate-3-sense,separate.a.01)
has_sense(bowl-4,bowl-4-sense)
is_a(bowl-4-sense,bowl.n.01)
has_sense(mix-6,mix-6-sense)
is_a(mix-6-sense,blend.v.03)
has_sense(oil-8,oil-8-sense)
is_a(oil-8-sense,vegetable_oil.n.01)
has_sense(sugar-10,sugar-10-sense)
is_a(sugar-10-sense,sugar.n.01)
has_sense(eggs-12,eggs-12-sense)
is_a(eggs-12-sense,egg.n.02)
det(bowl-4, a-2)
amod(bowl-4, separate-3)
prep_in(mix-6, bowl-4)
root(ROOT-0, mix-6)
det(oil-8, the-7)
dobj(mix-6, oil-8)
conj_and(oil-8, sugar-10)
conj_and(oil-8, eggs-12)
has_pos(a-2,DT)
has_pos(separate-3,JJ)
has_pos(bowl-4,NN)
has_pos(mix-6,VB)
has_pos(the-7,DT)
has_pos(oil-8,NN)
has_pos(sugar-10,NN)
has_pos(eggs-12,NNS)
has_sense(the-7, null)
has_sense(a-2, null)
---
// Mix the crumbled madeira_cake and melted chocolate together .
has_sense(madeira_cake-4,madeira_cake-4-sense)
is_a(madeira_cake-4-sense,madeira_cake.n.01)
has_sense(melted-6,melted-6-sense)
is_a(melted-6-sense,melted.a.01)
has_sense(chocolate-7,chocolate-7-sense)
is_a(chocolate-7-sense,chocolate.n.02)
has_sense(together-8,together-8-sense)
is_a(together-8-sense,together.r.01)
nn(the-2, Mix-1)
nsubj(crumbled-3, the-2)
root(ROOT-0, crumbled-3)
amod(chocolate-7, madeira_cake-4)
conj_and(madeira_cake-4, melted-6)
dobj(crumbled-3, chocolate-7)
advmod(crumbled-3, together-8)
has_pos(Mix-1,NNP)
has_pos(the-2,NNP)
has_pos(crumbled-3,VBD)
has_pos(madeira_cake-4,JJ)
has_pos(melted-6,JJ)
has_pos(chocolate-7,NN)
has_pos(together-8,RB)
has_sense(crumbled-3, null)
has_sense(Mix-1, null)
has_sense(the-2, null)
---
// Mix together cherries , sugar , cornstarch and almond_extract .
has_sense(together-2,together-2-sense)
is_a(together-2-sense,together.r.01)
has_sense(sugar-5,sugar-5-sense)
is_a(sugar-5-sense,sugar.n.01)
has_sense(cornstarch-7,cornstarch-7-sense)
is_a(cornstarch-7-sense,cornstarch.n.01)
has_sense(almond_extract-9,almond_extract-9-sense)
is_a(almond_extract-9-sense,almond_extract.n.01)
root(ROOT-0, Mix-1)
prt(Mix-1, together-2)
dobj(Mix-1, cherries-3)
conj_and(cherries-3, sugar-5)
conj_and(cherries-3, cornstarch-7)
conj_and(cherries-3, almond_extract-9)
has_pos(Mix-1,VB)
has_pos(together-2,RP)
has_pos(cherries-3,NNS)
has_pos(sugar-5,NN)
has_pos(cornstarch-7,NN)
has_pos(almond_extract-9,NN)
has_sense(Mix-1, null)
has_sense(cherries-3, null)
---
// add the lemon_juice and mix a few times .
has_sense(add-1,add-1-sense)
is_a(add-1-sense,add.v.01)
has_sense(lemon_juice-3,lemon_juice-3-sense)
is_a(lemon_juice-3-sense,lemon_juice.n.01)
has_sense(mix-5,mix-5-sense)
is_a(mix-5-sense,blend.v.03)
has_sense(few-7,few-7-sense)
is_a(few-7-sense,few.a.01)
root(ROOT-0, add-1)
det(lemon_juice-3, the-2)
dobj(add-1, lemon_juice-3)
conj_and(add-1, mix-5)
det(times-8, a-6)
amod(times-8, few-7)
dobj(mix-5, times-8)
has_pos(add-1,VB)
has_pos(the-2,DT)
has_pos(lemon_juice-3,NN)
has_pos(mix-5,VB)
has_pos(a-6,DT)
has_pos(few-7,JJ)
has_pos(times-8,NNS)
has_sense(a-6, null)
has_sense(the-2, null)
has_sense(times-8, null)
---
// stir all of the ingredient together and mix thoroughly .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(ingredient-5,ingredient-5-sense)
is_a(ingredient-5-sense,ingredient.n.03)
has_sense(together-6,together-6-sense)
is_a(together-6-sense,together.r.02)
has_sense(mix-8,mix-8-sense)
is_a(mix-8-sense,blend.v.03)
has_sense(thoroughly-9,thoroughly-9-sense)
is_a(thoroughly-9-sense,thoroughly.r.02)
root(ROOT-0, stir-1)
dobj(stir-1, all-2)
det(ingredient-5, the-4)
prep_of(all-2, ingredient-5)
advmod(stir-1, together-6)
conj_and(stir-1, mix-8)
advmod(mix-8, thoroughly-9)
has_pos(stir-1,VB)
has_pos(all-2,DT)
has_pos(the-4,DT)
has_pos(ingredient-5,NN)
has_pos(together-6,RB)
has_pos(mix-8,VB)
has_pos(thoroughly-9,RB)
has_sense(all-2, null)
has_sense(the-4, null)
---
// mix the dry ingredient first .
has_sense(mix-1,mix-1-sense)
is_a(mix-1-sense,blend.v.03)
has_sense(dry-3,dry-3-sense)
is_a(dry-3-sense,dry.a.01)
has_sense(ingredient-4,ingredient-4-sense)
is_a(ingredient-4-sense,ingredient.n.03)
has_sense(first-5,first-5-sense)
is_a(first-5-sense,first.r.01)
root(ROOT-0, mix-1)
det(ingredient-4, the-2)
amod(ingredient-4, dry-3)
dobj(mix-1, ingredient-4)
advmod(mix-1, first-5)
has_pos(mix-1,VB)
has_pos(the-2,DT)
has_pos(dry-3,JJ)
has_pos(ingredient-4,NN)
has_pos(first-5,RB)
has_sense(the-2, null)
---
// repeat this until there be no mixture left , before you pour the mix each time throw in the knob of butter to prevent the pancake stick .
has_sense(repeat-1,repeat-1-sense)
is_a(repeat-1-sense,duplicate.v.01)
has_sense(be-5,be-5-sense)
is_a(be-5-sense,be.v.01)
has_sense(mixture-7,mixture-7-sense)
is_a(mixture-7-sense,concoction.n.01)
has_sense(pour-12,pour-12-sense)
is_a(pour-12-sense,pour.v.01)
has_sense(time-16,time-16-sense)
is_a(time-16-sense,time.n.01)
has_sense(butter-22,butter-22-sense)
is_a(butter-22-sense,butter.n.01)
has_sense(prevent-24,prevent-24-sense)
is_a(prevent-24-sense,prevent.v.01)
has_sense(pancake-26,pancake-26-sense)
is_a(pancake-26-sense,pancake.n.01)
has_sense(stick-27,stick-27-sense)
is_a(stick-27-sense,stick.v.04)
root(ROOT-0, repeat-1)
dobj(repeat-1, this-2)
mark(be-5, until-3)
expl(be-5, there-4)
advcl(repeat-1, be-5)
det(mixture-7, no-6)
nsubj(be-5, mixture-7)
partmod(mixture-7, left-8)
mark(pour-12, before-10)
nsubj(pour-12, you-11)
advcl(left-8, pour-12)
det(mix-14, the-13)
iobj(pour-12, mix-14)
det(time-16, each-15)
dobj(pour-12, time-16)
dep(time-16, throw-17)
det(knob-20, the-19)
prep_in(throw-17, knob-20)
prep_of(knob-20, butter-22)
aux(prevent-24, to-23)
xcomp(throw-17, prevent-24)
det(stick-27, the-25)
amod(stick-27, pancake-26)
dobj(prevent-24, stick-27)
has_pos(repeat-1,VB)
has_pos(this-2,DT)
has_pos(until-3,IN)
has_pos(there-4,EX)
has_pos(be-5,VB)
has_pos(no-6,DT)
has_pos(mixture-7,NN)
has_pos(left-8,VBN)
has_pos(before-10,IN)
has_pos(you-11,PRP)
has_pos(pour-12,VBP)
has_pos(the-13,DT)
has_pos(mix-14,NN)
has_pos(each-15,DT)
has_pos(time-16,NN)
has_pos(throw-17,VB)
has_pos(the-19,DT)
has_pos(knob-20,NN)
has_pos(butter-22,NN)
has_pos(to-23,TO)
has_pos(prevent-24,VB)
has_pos(the-25,DT)
has_pos(pancake-26,JJ)
has_pos(stick-27,NN)
has_sense(knob-20, null)
has_sense(throw-17, null)
has_sense(there-4, null)
has_sense(left-8, null)
has_sense(this-2, null)
has_sense(before-10, null)
has_sense(mix-14, null)
has_sense(the-25, null)
has_sense(no-6, null)
has_sense(each-15, null)
has_sense(the-19, null)
has_sense(until-3, null)
has_sense(the-13, null)
has_sense(to-23, null)
has_sense(you-11, null)
---
// Mix 1 cup ketchup , 1 cup corn_syrup or honey , 1 cup brown_sugar , 1\/2 cup soy_sauce , and 1 tsp garlic together in a sauce pan .
has_sense(cup-3,cup-3-sense)
is_a(cup-3-sense,cup.n.04)
has_sense(ketchup-4,ketchup-4-sense)
is_a(ketchup-4-sense,catsup.n.01)
has_sense(cup-7,cup-7-sense)
is_a(cup-7-sense,cup.n.02)
has_sense(corn_syrup-8,corn_syrup-8-sense)
is_a(corn_syrup-8-sense,corn_syrup.n.01)
has_sense(honey-10,honey-10-sense)
is_a(honey-10-sense,honey.n.01)
has_sense(cup-13,cup-13-sense)
is_a(cup-13-sense,cup.n.04)
has_sense(brown_sugar-14,brown_sugar-14-sense)
is_a(brown_sugar-14-sense,brown_sugar.n.01)
has_sense(cup-17,cup-17-sense)
is_a(cup-17-sense,cup.n.04)
has_sense(soy_sauce-18,soy_sauce-18-sense)
is_a(soy_sauce-18-sense,soy_sauce.n.01)
has_sense(garlic-23,garlic-23-sense)
is_a(garlic-23-sense,garlic.n.02)
has_sense(together-24,together-24-sense)
is_a(together-24-sense,together.r.02)
has_sense(sauce-27,sauce-27-sense)
is_a(sauce-27-sense,sauce.n.01)
nn(ketchup-4, Mix-1)
num(ketchup-4, 1-2)
nn(ketchup-4, cup-3)
nsubj(tsp-22, ketchup-4)
num(corn_syrup-8, 1-6)
nn(corn_syrup-8, cup-7)
conj_or(ketchup-4, corn_syrup-8)
conj_or(ketchup-4, honey-10)
num(brown_sugar-14, 1-12)
nn(brown_sugar-14, cup-13)
conj_and(honey-10, brown_sugar-14)
num(soy_sauce-18, 1\/2-16)
nn(soy_sauce-18, cup-17)
conj_and(honey-10, soy_sauce-18)
conj_and(honey-10, 1-21)
root(ROOT-0, tsp-22)
acomp(tsp-22, garlic-23)
advmod(tsp-22, together-24)
det(pan-28, a-26)
nn(pan-28, sauce-27)
prep_in(tsp-22, pan-28)
has_pos(Mix-1,NN)
has_pos(1-2,CD)
has_pos(cup-3,NN)
has_pos(ketchup-4,NN)
has_pos(1-6,CD)
has_pos(cup-7,NN)
has_pos(corn_syrup-8,NN)
has_pos(honey-10,NN)
has_pos(1-12,CD)
has_pos(cup-13,NN)
has_pos(brown_sugar-14,NN)
has_pos(1\/2-16,CD)
has_pos(cup-17,NN)
has_pos(soy_sauce-18,NN)
has_pos(1-21,CD)
has_pos(tsp-22,VBP)
has_pos(garlic-23,JJ)
has_pos(together-24,RB)
has_pos(a-26,DT)
has_pos(sauce-27,NN)
has_pos(pan-28,NN)
has_sense(tsp-22, null)
has_sense(1-2, null)
has_sense(Mix-1, null)
has_sense(1-21, null)
has_sense(pan-28, null)
has_sense(1\/2-16, null)
has_sense(1-6, null)
has_sense(1-12, null)
has_sense(a-26, null)
---
// Pour the Arborio rice into the saucepan and stir to mix with the onion .
has_sense(rice-4,rice-4-sense)
is_a(rice-4-sense,rice.n.01)
has_sense(saucepan-7,saucepan-7-sense)
is_a(saucepan-7-sense,saucepan.n.01)
has_sense(stir-9,stir-9-sense)
is_a(stir-9-sense,stir.v.01)
has_sense(mix-11,mix-11-sense)
is_a(mix-11-sense,mix.v.04)
has_sense(onion-14,onion-14-sense)
is_a(onion-14-sense,onion.n.01)
root(ROOT-0, Pour-1)
det(rice-4, the-2)
nn(rice-4, Arborio-3)
dobj(Pour-1, rice-4)
det(saucepan-7, the-6)
prep_into(Pour-1, saucepan-7)
conj_and(Pour-1, stir-9)
aux(mix-11, to-10)
xcomp(stir-9, mix-11)
det(onion-14, the-13)
prep_with(mix-11, onion-14)
has_pos(Pour-1,VB)
has_pos(the-2,DT)
has_pos(Arborio-3,NNP)
has_pos(rice-4,NN)
has_pos(the-6,DT)
has_pos(saucepan-7,NN)
has_pos(stir-9,VB)
has_pos(to-10,TO)
has_pos(mix-11,VB)
has_pos(the-13,DT)
has_pos(onion-14,NN)
has_sense(the-6, null)
has_sense(the-2, null)
has_sense(Pour-1, null)
has_sense(to-10, null)
has_sense(the-13, null)
has_sense(Arborio-3, null)
---
// transfer the cake_mix into your lined tin and gently spread it out to the edges use a spatula .
has_sense(transfer-1,transfer-1-sense)
is_a(transfer-1-sense,transfer.v.02)
has_sense(cake_mix-3,cake_mix-3-sense)
is_a(cake_mix-3-sense,cake_mix.n.01)
has_sense(lined-6,lined-6-sense)
is_a(lined-6-sense,lined.a.03)
has_sense(tin-7,tin-7-sense)
is_a(tin-7-sense,tin.n.02)
has_sense(gently-9,gently-9-sense)
is_a(gently-9-sense,lightly.r.03)
has_sense(spread-10,spread-10-sense)
is_a(spread-10-sense,spread.v.10)
has_sense(use-16,use-16-sense)
is_a(use-16-sense,use.v.01)
has_sense(spatula-18,spatula-18-sense)
is_a(spatula-18-sense,spatula.n.02)
root(ROOT-0, transfer-1)
det(cake_mix-3, the-2)
dobj(transfer-1, cake_mix-3)
poss(tin-7, your-5)
amod(tin-7, lined-6)
prep_into(transfer-1, tin-7)
advmod(spread-10, gently-9)
conj_and(transfer-1, spread-10)
nsubj(use-16, it-11)
advmod(use-16, out-12)
det(edges-15, the-14)
prep_to(out-12, edges-15)
ccomp(spread-10, use-16)
det(spatula-18, a-17)
dobj(use-16, spatula-18)
has_pos(transfer-1,VB)
has_pos(the-2,DT)
has_pos(cake_mix-3,NN)
has_pos(your-5,PRP$)
has_pos(lined-6,JJ)
has_pos(tin-7,NN)
has_pos(gently-9,RB)
has_pos(spread-10,VB)
has_pos(it-11,PRP)
has_pos(out-12,IN)
has_pos(the-14,DT)
has_pos(edges-15,NNS)
has_pos(use-16,VB)
has_pos(a-17,DT)
has_pos(spatula-18,NN)
has_sense(your-5, null)
has_sense(a-17, null)
has_sense(the-2, null)
has_sense(it-11, null)
has_sense(edges-15, null)
has_sense(out-12, null)
has_sense(the-14, null)
---
// In a small bowl , mix sugar , cornstarch , cinnamon , nutmeg and salt .
has_sense(small-3,small-3-sense)
is_a(small-3-sense,small.a.01)
has_sense(bowl-4,bowl-4-sense)
is_a(bowl-4-sense,bowl.n.01)
has_sense(mix-6,mix-6-sense)
is_a(mix-6-sense,blend.v.03)
has_sense(sugar-7,sugar-7-sense)
is_a(sugar-7-sense,sugar.n.01)
has_sense(cornstarch-9,cornstarch-9-sense)
is_a(cornstarch-9-sense,cornstarch.n.01)
has_sense(cinnamon-11,cinnamon-11-sense)
is_a(cinnamon-11-sense,cinnamon.n.03)
has_sense(nutmeg-13,nutmeg-13-sense)
is_a(nutmeg-13-sense,nutmeg.n.02)
has_sense(salt-15,salt-15-sense)
is_a(salt-15-sense,salt.n.02)
det(bowl-4, a-2)
amod(bowl-4, small-3)
prep_in(mix-6, bowl-4)
root(ROOT-0, mix-6)
dobj(mix-6, sugar-7)
conj_and(sugar-7, cornstarch-9)
conj_and(sugar-7, cinnamon-11)
conj_and(sugar-7, nutmeg-13)
conj_and(sugar-7, salt-15)
has_pos(a-2,DT)
has_pos(small-3,JJ)
has_pos(bowl-4,NN)
has_pos(mix-6,VB)
has_pos(sugar-7,NN)
has_pos(cornstarch-9,NN)
has_pos(cinnamon-11,NN)
has_pos(nutmeg-13,NN)
has_pos(salt-15,NN)
has_sense(a-2, null)
---
// mix well , so as to avoid lumps in the batter .
has_sense(mix-1,mix-1-sense)
is_a(mix-1-sense,blend.v.03)
has_sense(well-2,well-2-sense)
is_a(well-2-sense,well.r.02)
has_sense(so-4,so-4-sense)
is_a(so-4-sense,so.r.02)
has_sense(avoid-7,avoid-7-sense)
is_a(avoid-7-sense,debar.v.02)
has_sense(batter-11,batter-11-sense)
is_a(batter-11-sense,batter.n.02)
root(ROOT-0, mix-1)
advmod(mix-1, well-2)
advmod(lumps-8, so-4)
dep(lumps-8, as-5)
aux(avoid-7, to-6)
csubj(lumps-8, avoid-7)
ccomp(mix-1, lumps-8)
det(batter-11, the-10)
prep_in(lumps-8, batter-11)
has_pos(mix-1,VB)
has_pos(well-2,RB)
has_pos(so-4,RB)
has_pos(as-5,IN)
has_pos(to-6,TO)
has_pos(avoid-7,VB)
has_pos(lumps-8,VBZ)
has_pos(the-10,DT)
has_pos(batter-11,NN)
has_sense(lumps-8, null)
has_sense(as-5, null)
has_sense(to-6, null)
has_sense(the-10, null)
---
// mix it all together .
has_sense(mix-1,mix-1-sense)
is_a(mix-1-sense,blend.v.03)
has_sense(together-4,together-4-sense)
is_a(together-4-sense,together.r.01)
root(ROOT-0, mix-1)
dobj(mix-1, it-2)
dep(together-4, all-3)
advmod(mix-1, together-4)
has_pos(mix-1,VB)
has_pos(it-2,PRP)
has_pos(all-3,DT)
has_pos(together-4,RB)
has_sense(all-3, null)
has_sense(it-2, null)