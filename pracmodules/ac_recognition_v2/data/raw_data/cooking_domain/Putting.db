/* **************************************************************************** 
 * WIKIHOW.COM -- NATURAL-LANGUAGE INSTRUCTIONS
 * 
 * (C) 2011-2013 by Daniel Nyga (nyga@cs.uni-bremen.edu)
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 ******************************************************************************/

// put salt and pepper or whatever you put on your eggs .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(salt-2,salt-2-sense)
is_a(salt-2-sense,salt.n.02)
has_sense(pepper-4,pepper-4-sense)
is_a(pepper-4-sense,pepper.n.03)
has_sense(put-8,put-8-sense)
is_a(put-8-sense,put.v.01)
has_sense(eggs-11,eggs-11-sense)
is_a(eggs-11-sense,egg.n.02)
root(ROOT-0, put-1)
dobj(put-1, salt-2)
conj_and(salt-2, pepper-4)
dobj(put-8, whatever-6)
nsubj(put-8, you-7)
conj_or(salt-2, put-8)
poss(eggs-11, your-10)
prep_on(put-8, eggs-11)
has_pos(put-1,VB)
has_pos(salt-2,NN)
has_pos(pepper-4,NN)
has_pos(whatever-6,WDT)
has_pos(you-7,PRP)
has_pos(put-8,VBD)
has_pos(your-10,PRP$)
has_pos(eggs-11,NNS)
has_sense(you-7, null)
has_sense(whatever-6, null)
has_sense(your-10, null)
---
// put the wrapping sheet over again and put in the microwave for 1 minute .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(wrapping-3,wrapping-3-sense)
is_a(wrapping-3-sense,wrapping.n.01)
has_sense(sheet-4,sheet-4-sense)
is_a(sheet-4-sense,sheet.n.01)
has_sense(again-6,again-6-sense)
is_a(again-6-sense,again.r.01)
has_sense(put-8,put-8-sense)
is_a(put-8-sense,put.v.01)
has_sense(microwave-11,microwave-11-sense)
is_a(microwave-11-sense,microwave.n.02)
has_sense(minute-14,minute-14-sense)
is_a(minute-14-sense,minute.n.01)
root(ROOT-0, put-1)
det(sheet-4, the-2)
nn(sheet-4, wrapping-3)
dobj(put-1, sheet-4)
prt(put-1, over-5)
advmod(put-1, again-6)
conj_and(put-1, put-8)
det(microwave-11, the-10)
prep_in(put-8, microwave-11)
num(minute-14, 1-13)
prep_for(microwave-11, minute-14)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(wrapping-3,NN)
has_pos(sheet-4,NN)
has_pos(over-5,RP)
has_pos(again-6,RB)
has_pos(put-8,VB)
has_pos(the-10,DT)
has_pos(microwave-11,NN)
has_pos(1-13,CD)
has_pos(minute-14,NN)
has_sense(the-2, null)
has_sense(over-5, null)
has_sense(1-13, null)
has_sense(the-10, null)
---
// put the chicken back into the pan and combine with the other ingredient .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(chicken-3,chicken-3-sense)
is_a(chicken-3-sense,chicken.n.01)
has_sense(pan-7,pan-7-sense)
is_a(pan-7-sense,pan.n.01)
has_sense(combine-9,combine-9-sense)
is_a(combine-9-sense,compound.v.02)
has_sense(other-12,other-12-sense)
is_a(other-12-sense,other.a.01)
has_sense(ingredient-13,ingredient-13-sense)
is_a(ingredient-13-sense,ingredient.n.03)
root(ROOT-0, put-1)
det(chicken-3, the-2)
dobj(put-1, chicken-3)
prt(put-1, back-4)
det(pan-7, the-6)
prep_into(put-1, pan-7)
conj_and(put-1, combine-9)
det(ingredient-13, the-11)
amod(ingredient-13, other-12)
prep_with(combine-9, ingredient-13)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(chicken-3,NN)
has_pos(back-4,RP)
has_pos(the-6,DT)
has_pos(pan-7,NN)
has_pos(combine-9,VB)
has_pos(the-11,DT)
has_pos(other-12,JJ)
has_pos(ingredient-13,NN)
has_sense(the-6, null)
has_sense(the-2, null)
has_sense(back-4, null)
has_sense(the-11, null)
---
// put the pan on medium heat .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(pan-3,pan-3-sense)
is_a(pan-3-sense,pan.n.01)
has_sense(heat-6,heat-6-sense)
is_a(heat-6-sense,hotness.n.01)
root(ROOT-0, put-1)
det(pan-3, the-2)
dobj(put-1, pan-3)
nn(heat-6, medium-5)
prep_on(put-1, heat-6)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(pan-3,NN)
has_pos(medium-5,NN)
has_pos(heat-6,NN)
has_sense(medium-5, null)
has_sense(the-2, null)
---
// put more sauce .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(more-2,more-2-sense)
is_a(more-2-sense,more.a.01)
has_sense(sauce-3,sauce-3-sense)
is_a(sauce-3-sense,sauce.n.01)
root(ROOT-0, put-1)
amod(sauce-3, more-2)
dobj(put-1, sauce-3)
has_pos(put-1,VB)
has_pos(more-2,JJR)
has_pos(sauce-3,NN)
---
// put the apple slice on one of the waffle 's peanut-buttered sides .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(apple-3,apple-3-sense)
is_a(apple-3-sense,apple.n.01)
has_sense(slice-4,slice-4-sense)
is_a(slice-4-sense,piece.n.08)
has_sense(waffle-9,waffle-9-sense)
is_a(waffle-9-sense,waffle.n.01)
root(ROOT-0, put-1)
det(slice-4, the-2)
nn(slice-4, apple-3)
dobj(put-1, slice-4)
prep_on(put-1, one-6)
det(waffle-9, the-8)
poss(sides-12, waffle-9)
amod(sides-12, peanut-buttered-11)
prep_of(one-6, sides-12)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(apple-3,NN)
has_pos(slice-4,NN)
has_pos(one-6,CD)
has_pos(the-8,DT)
has_pos(waffle-9,NN)
has_pos(peanut-buttered-11,JJ)
has_pos(sides-12,NNS)
has_sense(sides-12, null)
has_sense(the-2, null)
has_sense(one-6, null)
has_sense(the-8, null)
has_sense(peanut-buttered-11, null)
---
// If you have any cherries , put one on top .
has_sense(have-3,have-3-sense)
is_a(have-3-sense,have.v.01)
has_sense(put-7,put-7-sense)
is_a(put-7-sense,put.v.01)
has_sense(top-10,top-10-sense)
is_a(top-10-sense,top.n.02)
mark(have-3, If-1)
nsubj(have-3, you-2)
advcl(put-7, have-3)
det(cherries-5, any-4)
dobj(have-3, cherries-5)
root(ROOT-0, put-7)
dobj(put-7, one-8)
prep_on(put-7, top-10)
has_pos(If-1,IN)
has_pos(you-2,PRP)
has_pos(have-3,VBP)
has_pos(any-4,DT)
has_pos(cherries-5,NNS)
has_pos(put-7,VB)
has_pos(one-8,CD)
has_pos(top-10,NN)
has_sense(you-2, null)
has_sense(one-8, null)
has_sense(cherries-5, null)
has_sense(any-4, null)
has_sense(If-1, null)
---
// put the pizza on the pan and then stick the pizza in the oven .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(pizza-3,pizza-3-sense)
is_a(pizza-3-sense,pizza.n.01)
has_sense(pan-6,pan-6-sense)
is_a(pan-6-sense,pan.n.01)
has_sense(then-8,then-8-sense)
is_a(then-8-sense,then.r.01)
has_sense(stick-9,stick-9-sense)
is_a(stick-9-sense,lodge.v.02)
has_sense(pizza-11,pizza-11-sense)
is_a(pizza-11-sense,pizza.n.01)
has_sense(oven-14,oven-14-sense)
is_a(oven-14-sense,oven.n.01)
root(ROOT-0, put-1)
det(pizza-3, the-2)
dobj(put-1, pizza-3)
det(pan-6, the-5)
prep_on(put-1, pan-6)
advmod(stick-9, then-8)
conj_and(put-1, stick-9)
det(pizza-11, the-10)
dobj(stick-9, pizza-11)
det(oven-14, the-13)
prep_in(pizza-11, oven-14)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(pizza-3,NN)
has_pos(the-5,DT)
has_pos(pan-6,NN)
has_pos(then-8,RB)
has_pos(stick-9,VB)
has_pos(the-10,DT)
has_pos(pizza-11,NN)
has_pos(the-13,DT)
has_pos(oven-14,NN)
has_sense(the-5, null)
has_sense(the-2, null)
has_sense(the-13, null)
has_sense(the-10, null)
---
// put your saucepan on low heat and melt 1T of butter or 1T oil .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(saucepan-3,saucepan-3-sense)
is_a(saucepan-3-sense,saucepan.n.01)
has_sense(low-5,low-5-sense)
is_a(low-5-sense,low.a.01)
has_sense(melt-8,melt-8-sense)
is_a(melt-8-sense,melt.v.01)
has_sense(butter-11,butter-11-sense)
is_a(butter-11-sense,butter.n.01)
has_sense(oil-14,oil-14-sense)
is_a(oil-14-sense,vegetable_oil.n.01)
root(ROOT-0, put-1)
poss(saucepan-3, your-2)
dobj(put-1, saucepan-3)
amod(heat-6, low-5)
prep_on(put-1, heat-6)
conj_and(put-1, melt-8)
dobj(melt-8, 1T-9)
prep_of(1T-9, butter-11)
num(oil-14, 1T-13)
conj_or(butter-11, oil-14)
has_pos(put-1,VB)
has_pos(your-2,PRP$)
has_pos(saucepan-3,NN)
has_pos(low-5,JJ)
has_pos(heat-6,NN)
has_pos(melt-8,VB)
has_pos(1T-9,CD)
has_pos(butter-11,NN)
has_pos(1T-13,CD)
has_pos(oil-14,NN)
has_sense(your-2, null)
has_sense(1T-13, null)
has_sense(1T-9, null)
has_sense(heat-6, null)
---
// put the steak on the pan and fry on one side for around 3 minutes .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(steak-3,steak-3-sense)
is_a(steak-3-sense,steak.n.01)
has_sense(pan-6,pan-6-sense)
is_a(pan-6-sense,pan.n.01)
has_sense(side-11,side-11-sense)
is_a(side-11-sense,side.n.04)
has_sense(around-13,around-13-sense)
is_a(around-13-sense,about.r.03)
root(ROOT-0, put-1)
det(steak-3, the-2)
dobj(put-1, steak-3)
det(pan-6, the-5)
prep_on(put-1, pan-6)
conj_and(pan-6, fry-8)
num(side-11, one-10)
prep_on(pan-6, side-11)
quantmod(3-14, around-13)
num(minutes-15, 3-14)
prep_for(side-11, minutes-15)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(steak-3,NN)
has_pos(the-5,DT)
has_pos(pan-6,NN)
has_pos(fry-8,NN)
has_pos(one-10,CD)
has_pos(side-11,NN)
has_pos(around-13,RB)
has_pos(3-14,CD)
has_pos(minutes-15,NNS)
has_sense(the-5, null)
has_sense(the-2, null)
has_sense(one-10, null)
has_sense(fry-8, null)
has_sense(minutes-15, null)
has_sense(3-14, null)
---
// put in 1 cup milk_chocolate chips .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(cup-4,cup-4-sense)
is_a(cup-4-sense,cup.n.04)
has_sense(milk_chocolate-5,milk_chocolate-5-sense)
is_a(milk_chocolate-5-sense,milk_chocolate.n.01)
root(ROOT-0, put-1)
num(chips-6, 1-3)
nn(chips-6, cup-4)
nn(chips-6, milk_chocolate-5)
prep_in(put-1, chips-6)
has_pos(put-1,VB)
has_pos(1-3,CD)
has_pos(cup-4,NN)
has_pos(milk_chocolate-5,NN)
has_pos(chips-6,NNS)
has_sense(1-3, null)
has_sense(chips-6, null)
---
// then take the Nesquik powder and put two regular spoonful into the blender .
has_sense(then-1,then-1-sense)
is_a(then-1-sense,then.r.01)
has_sense(take-2,take-2-sense)
is_a(take-2-sense,take.v.04)
has_sense(powder-5,powder-5-sense)
is_a(powder-5-sense,powder.n.01)
has_sense(put-7,put-7-sense)
is_a(put-7-sense,put.v.01)
has_sense(regular-9,regular-9-sense)
is_a(regular-9-sense,regular.s.03)
has_sense(spoonful-10,spoonful-10-sense)
is_a(spoonful-10-sense,spoon.n.02)
has_sense(blender-13,blender-13-sense)
is_a(blender-13-sense,blender.n.01)
advmod(take-2, then-1)
root(ROOT-0, take-2)
det(powder-5, the-3)
nn(powder-5, Nesquik-4)
dobj(take-2, powder-5)
conj_and(take-2, put-7)
num(spoonful-10, two-8)
amod(spoonful-10, regular-9)
dobj(put-7, spoonful-10)
det(blender-13, the-12)
prep_into(put-7, blender-13)
has_pos(then-1,RB)
has_pos(take-2,VB)
has_pos(the-3,DT)
has_pos(Nesquik-4,NNP)
has_pos(powder-5,NN)
has_pos(put-7,VB)
has_pos(two-8,CD)
has_pos(regular-9,JJ)
has_pos(spoonful-10,NN)
has_pos(the-12,DT)
has_pos(blender-13,NN)
has_sense(the-3, null)
has_sense(two-8, null)
has_sense(Nesquik-4, null)
has_sense(the-12, null)
---
// crack the eggs and put them into a bowl .
has_sense(crack-1,crack-1-sense)
is_a(crack-1-sense,crack.v.11)
has_sense(eggs-3,eggs-3-sense)
is_a(eggs-3-sense,egg.n.02)
has_sense(put-5,put-5-sense)
is_a(put-5-sense,put.v.01)
has_sense(bowl-9,bowl-9-sense)
is_a(bowl-9-sense,bowl.n.01)
root(ROOT-0, crack-1)
det(eggs-3, the-2)
dobj(crack-1, eggs-3)
conj_and(crack-1, put-5)
dobj(put-5, them-6)
det(bowl-9, a-8)
prep_into(put-5, bowl-9)
has_pos(crack-1,VB)
has_pos(the-2,DT)
has_pos(eggs-3,NNS)
has_pos(put-5,VB)
has_pos(them-6,PRP)
has_pos(a-8,DT)
has_pos(bowl-9,NN)
has_sense(the-2, null)
has_sense(them-6, null)
has_sense(a-8, null)
---
// put the mixture in container .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(mixture-3,mixture-3-sense)
is_a(mixture-3-sense,concoction.n.01)
has_sense(container-5,container-5-sense)
is_a(container-5-sense,container.n.01)
root(ROOT-0, put-1)
det(mixture-3, the-2)
dobj(put-1, mixture-3)
prep_in(mixture-3, container-5)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(mixture-3,NN)
has_pos(container-5,NN)
has_sense(the-2, null)
---
// If you be not use a roasting bag , put about a quarter-inch of water in the pan .
has_sense(be-3,be-3-sense)
is_a(be-3-sense,be.v.01)
has_sense(not-4,not-4-sense)
is_a(not-4-sense,not.r.01)
has_sense(use-5,use-5-sense)
is_a(use-5-sense,use.v.01)
has_sense(roasting-7,roasting-7-sense)
is_a(roasting-7-sense,roasting.n.01)
has_sense(bag-8,bag-8-sense)
is_a(bag-8-sense,bag.n.01)
has_sense(put-10,put-10-sense)
is_a(put-10-sense,put.v.01)
has_sense(about-11,about-11-sense)
is_a(about-11-sense,approximately.r.01)
has_sense(water-15,water-15-sense)
is_a(water-15-sense,water.n.06)
has_sense(pan-18,pan-18-sense)
is_a(pan-18-sense,pan.n.01)
mark(not-4, If-1)
nsubj(not-4, you-2)
aux(not-4, be-3)
advcl(put-10, not-4)
ccomp(not-4, use-5)
det(bag-8, a-6)
amod(bag-8, roasting-7)
dobj(use-5, bag-8)
root(ROOT-0, put-10)
advmod(quarter-inch-13, about-11)
det(quarter-inch-13, a-12)
dobj(put-10, quarter-inch-13)
prep_of(quarter-inch-13, water-15)
det(pan-18, the-17)
prep_in(water-15, pan-18)
has_pos(If-1,IN)
has_pos(you-2,PRP)
has_pos(be-3,VB)
has_pos(not-4,RB)
has_pos(use-5,VB)
has_pos(a-6,DT)
has_pos(roasting-7,JJ)
has_pos(bag-8,NN)
has_pos(put-10,VB)
has_pos(about-11,RB)
has_pos(a-12,DT)
has_pos(quarter-inch-13,JJ)
has_pos(water-15,NN)
has_pos(the-17,DT)
has_pos(pan-18,NN)
has_sense(you-2, null)
has_sense(a-12, null)
has_sense(quarter-inch-13, null)
has_sense(the-17, null)
has_sense(If-1, null)
has_sense(a-6, null)
---
// put the iron on a flat surface that wont have it slide around too badly .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(flat-6,flat-6-sense)
is_a(flat-6-sense,flat.s.01)
has_sense(surface-7,surface-7-sense)
is_a(surface-7-sense,surface.n.01)
has_sense(slide-12,slide-12-sense)
is_a(slide-12-sense,skid.v.04)
has_sense(too-14,too-14-sense)
is_a(too-14-sense,excessively.r.01)
has_sense(badly-15,badly-15-sense)
is_a(badly-15-sense,badly.r.01)
root(ROOT-0, put-1)
det(iron-3, the-2)
dobj(put-1, iron-3)
det(surface-7, a-5)
amod(surface-7, flat-6)
prep_on(iron-3, surface-7)
complm(have-10, that-8)
nsubj(have-10, wont-9)
ccomp(put-1, have-10)
nsubj(slide-12, it-11)
ccomp(have-10, slide-12)
dep(badly-15, around-13)
advmod(badly-15, too-14)
dep(slide-12, badly-15)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(iron-3,NN)
has_pos(a-5,DT)
has_pos(flat-6,JJ)
has_pos(surface-7,NN)
has_pos(that-8,IN)
has_pos(wont-9,NN)
has_pos(have-10,VBP)
has_pos(it-11,PRP)
has_pos(slide-12,VB)
has_pos(around-13,IN)
has_pos(too-14,RB)
has_pos(badly-15,RB)
has_sense(wont-9, null)
has_sense(iron-3, null)
has_sense(the-2, null)
has_sense(it-11, null)
has_sense(a-5, null)
has_sense(around-13, null)
has_sense(that-8, null)
has_sense(have-10, null)
---
// put some vegetable or fruit in it .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(vegetable-3,vegetable-3-sense)
is_a(vegetable-3-sense,vegetable.n.02)
has_sense(fruit-5,fruit-5-sense)
is_a(fruit-5-sense,fruit.n.01)
root(ROOT-0, put-1)
det(vegetable-3, some-2)
dobj(put-1, vegetable-3)
conj_or(vegetable-3, fruit-5)
prep_in(vegetable-3, it-7)
has_pos(put-1,VB)
has_pos(some-2,DT)
has_pos(vegetable-3,NN)
has_pos(fruit-5,NN)
has_pos(it-7,PRP)
has_sense(some-2, null)
has_sense(it-7, null)
---
// put the fruit into the blender .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(fruit-3,fruit-3-sense)
is_a(fruit-3-sense,fruit.n.01)
has_sense(blender-6,blender-6-sense)
is_a(blender-6-sense,blender.n.01)
root(ROOT-0, put-1)
det(fruit-3, the-2)
dobj(put-1, fruit-3)
det(blender-6, the-5)
prep_into(put-1, blender-6)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(fruit-3,NN)
has_pos(the-5,DT)
has_pos(blender-6,NN)
has_sense(the-5, null)
has_sense(the-2, null)
---
// put hot_chocolate powder in blender .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(hot_chocolate-2,hot_chocolate-2-sense)
is_a(hot_chocolate-2-sense,cocoa.n.01)
has_sense(powder-3,powder-3-sense)
is_a(powder-3-sense,powder.n.01)
has_sense(blender-5,blender-5-sense)
is_a(blender-5-sense,blender.n.01)
root(ROOT-0, put-1)
amod(powder-3, hot_chocolate-2)
dobj(put-1, powder-3)
prep_in(put-1, blender-5)
has_pos(put-1,VB)
has_pos(hot_chocolate-2,JJ)
has_pos(powder-3,NN)
has_pos(blender-5,NN)
---
// now put in a liter of kefir and a teaspoon of sugar .
has_sense(now-1,now-1-sense)
is_a(now-1-sense,now.r.03)
has_sense(put-2,put-2-sense)
is_a(put-2-sense,put.v.01)
has_sense(liter-5,liter-5-sense)
is_a(liter-5-sense,liter.n.01)
has_sense(teaspoon-10,teaspoon-10-sense)
is_a(teaspoon-10-sense,teaspoon.n.01)
has_sense(sugar-12,sugar-12-sense)
is_a(sugar-12-sense,sugar.n.01)
advmod(put-2, now-1)
root(ROOT-0, put-2)
det(liter-5, a-4)
prep_in(put-2, liter-5)
prep_of(liter-5, kefir-7)
det(teaspoon-10, a-9)
conj_and(liter-5, teaspoon-10)
prep_of(teaspoon-10, sugar-12)
has_pos(now-1,RB)
has_pos(put-2,VB)
has_pos(a-4,DT)
has_pos(liter-5,NN)
has_pos(kefir-7,NN)
has_pos(a-9,DT)
has_pos(teaspoon-10,NN)
has_pos(sugar-12,NN)
has_sense(kefir-7, null)
has_sense(a-9, null)
has_sense(a-4, null)
---
// If use a roasting bag , do the following steps first , put it in the bag , then put in roasting pan .
has_sense(use-2,use-2-sense)
is_a(use-2-sense,use.v.01)
has_sense(roasting-4,roasting-4-sense)
is_a(roasting-4-sense,roasting.n.01)
has_sense(bag-5,bag-5-sense)
is_a(bag-5-sense,bag.n.01)
has_sense(do-7,do-7-sense)
is_a(do-7-sense,perform.v.01)
has_sense(following-9,following-9-sense)
is_a(following-9-sense,following.s.01)
has_sense(first-11,first-11-sense)
is_a(first-11-sense,first.r.01)
has_sense(put-13,put-13-sense)
is_a(put-13-sense,put.v.01)
has_sense(bag-17,bag-17-sense)
is_a(bag-17-sense,bag.n.01)
has_sense(then-19,then-19-sense)
is_a(then-19-sense,then.r.01)
has_sense(put-20,put-20-sense)
is_a(put-20-sense,put.v.01)
has_sense(pan-23,pan-23-sense)
is_a(pan-23-sense,pan.n.01)
mark(use-2, If-1)
advcl(put-20, use-2)
det(bag-5, a-3)
amod(bag-5, roasting-4)
dobj(use-2, bag-5)
dep(use-2, do-7)
det(steps-10, the-8)
amod(steps-10, following-9)
dobj(do-7, steps-10)
advmod(do-7, first-11)
dep(use-2, put-13)
dobj(put-13, it-14)
det(bag-17, the-16)
prep_in(put-13, bag-17)
advmod(put-20, then-19)
root(ROOT-0, put-20)
amod(pan-23, roasting-22)
prep_in(put-20, pan-23)
has_pos(If-1,IN)
has_pos(use-2,VB)
has_pos(a-3,DT)
has_pos(roasting-4,JJ)
has_pos(bag-5,NN)
has_pos(do-7,VB)
has_pos(the-8,DT)
has_pos(following-9,JJ)
has_pos(steps-10,NNS)
has_pos(first-11,RB)
has_pos(put-13,VB)
has_pos(it-14,PRP)
has_pos(the-16,DT)
has_pos(bag-17,NN)
has_pos(then-19,RB)
has_pos(put-20,VB)
has_pos(roasting-22,JJ)
has_pos(pan-23,NNS)
has_sense(it-14, null)
has_sense(roasting-22, null)
has_sense(the-8, null)
has_sense(the-16, null)
has_sense(steps-10, null)
has_sense(a-3, null)
has_sense(If-1, null)
---
// put the coffee pot back on the warming plate .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(coffee-3,coffee-3-sense)
is_a(coffee-3-sense,coffee.n.01)
has_sense(pot-4,pot-4-sense)
is_a(pot-4-sense,pot.n.01)
has_sense(back-5,back-5-sense)
is_a(back-5-sense,back.r.01)
has_sense(warming-8,warming-8-sense)
is_a(warming-8-sense,heating.n.01)
has_sense(plate-9,plate-9-sense)
is_a(plate-9-sense,plate.n.04)
root(ROOT-0, put-1)
det(pot-4, the-2)
nn(pot-4, coffee-3)
dobj(put-1, pot-4)
advmod(put-1, back-5)
det(plate-9, the-7)
nn(plate-9, warming-8)
prep_on(put-1, plate-9)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(coffee-3,NN)
has_pos(pot-4,NN)
has_pos(back-5,RB)
has_pos(the-7,DT)
has_pos(warming-8,NN)
has_pos(plate-9,NN)
has_sense(the-7, null)
has_sense(the-2, null)
---
// put the egg shell on a paper_plate .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(egg-3,egg-3-sense)
is_a(egg-3-sense,egg.n.02)
has_sense(shell-4,shell-4-sense)
is_a(shell-4-sense,shell.n.05)
has_sense(paper_plate-7,paper_plate-7-sense)
is_a(paper_plate-7-sense,paper_plate.n.01)
root(ROOT-0, put-1)
det(shell-4, the-2)
nn(shell-4, egg-3)
dobj(put-1, shell-4)
det(paper_plate-7, a-6)
prep_on(put-1, paper_plate-7)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(egg-3,NN)
has_pos(shell-4,NN)
has_pos(a-6,DT)
has_pos(paper_plate-7,NN)
has_sense(a-6, null)
has_sense(the-2, null)
---
// put your mix aside and close the clam shell .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(mix-3,mix-3-sense)
is_a(mix-3-sense,mix.n.01)
has_sense(aside-4,aside-4-sense)
is_a(aside-4-sense,aside.r.01)
has_sense(close-6,close-6-sense)
is_a(close-6-sense,close.v.01)
has_sense(shell-9,shell-9-sense)
is_a(shell-9-sense,carapace.n.01)
root(ROOT-0, put-1)
poss(mix-3, your-2)
dobj(put-1, mix-3)
advmod(put-1, aside-4)
conj_and(put-1, close-6)
det(shell-9, the-7)
nn(shell-9, clam-8)
dobj(close-6, shell-9)
has_pos(put-1,VB)
has_pos(your-2,PRP$)
has_pos(mix-3,NN)
has_pos(aside-4,RB)
has_pos(close-6,VB)
has_pos(the-7,DT)
has_pos(clam-8,NN)
has_pos(shell-9,NN)
has_sense(the-7, null)
has_sense(clam-8, null)
has_sense(your-2, null)
---
// take the banana out of the freezer , and put the mixture onto it .
has_sense(take-1,take-1-sense)
is_a(take-1-sense,take.v.04)
has_sense(banana-3,banana-3-sense)
is_a(banana-3-sense,banana.n.02)
has_sense(freezer-7,freezer-7-sense)
is_a(freezer-7-sense,deep-freeze.n.01)
has_sense(put-10,put-10-sense)
is_a(put-10-sense,put.v.01)
has_sense(mixture-12,mixture-12-sense)
is_a(mixture-12-sense,concoction.n.01)
root(ROOT-0, take-1)
det(banana-3, the-2)
dobj(take-1, banana-3)
det(freezer-7, the-6)
prep_out_of(take-1, freezer-7)
conj_and(take-1, put-10)
det(mixture-12, the-11)
dobj(put-10, mixture-12)
prep_onto(put-10, it-14)
has_pos(take-1,VB)
has_pos(the-2,DT)
has_pos(banana-3,NN)
has_pos(the-6,DT)
has_pos(freezer-7,NN)
has_pos(put-10,VB)
has_pos(the-11,DT)
has_pos(mixture-12,NN)
has_pos(it-14,PRP)
has_sense(the-6, null)
has_sense(it-14, null)
has_sense(the-2, null)
has_sense(the-11, null)
---
// put them in a bowl and blend them .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(bowl-5,bowl-5-sense)
is_a(bowl-5-sense,bowl.n.01)
has_sense(blend-7,blend-7-sense)
is_a(blend-7-sense,blend.v.01)
root(ROOT-0, put-1)
dobj(put-1, them-2)
det(bowl-5, a-4)
prep_in(put-1, bowl-5)
conj_and(put-1, blend-7)
dobj(blend-7, them-8)
has_pos(put-1,VB)
has_pos(them-2,PRP)
has_pos(a-4,DT)
has_pos(bowl-5,NN)
has_pos(blend-7,VB)
has_pos(them-8,PRP)
has_sense(them-8, null)
has_sense(them-2, null)
has_sense(a-4, null)
---
// get a banana and put it in the freezer for at least 30 min .
has_sense(get-1,get-1-sense)
is_a(get-1-sense,get.v.01)
has_sense(banana-3,banana-3-sense)
is_a(banana-3-sense,banana.n.02)
has_sense(put-5,put-5-sense)
is_a(put-5-sense,put.v.01)
has_sense(freezer-9,freezer-9-sense)
is_a(freezer-9-sense,deep-freeze.n.01)
has_sense(least-12,least-12-sense)
is_a(least-12-sense,least.a.01)
has_sense(min-14,min-14-sense)
is_a(min-14-sense,minute.n.01)
root(ROOT-0, get-1)
det(banana-3, a-2)
dobj(get-1, banana-3)
conj_and(get-1, put-5)
dobj(put-5, it-6)
det(freezer-9, the-8)
prep_in(put-5, freezer-9)
quantmod(30-13, at-11)
mwe(at-11, least-12)
num(min-14, 30-13)
prep_for(freezer-9, min-14)
has_pos(get-1,VB)
has_pos(a-2,DT)
has_pos(banana-3,NN)
has_pos(put-5,VB)
has_pos(it-6,PRP)
has_pos(the-8,DT)
has_pos(freezer-9,NN)
has_pos(at-11,IN)
has_pos(least-12,JJS)
has_pos(30-13,CD)
has_pos(min-14,NN)
has_sense(the-8, null)
has_sense(it-6, null)
has_sense(at-11, null)
has_sense(30-13, null)
has_sense(a-2, null)
---
// put the garlic in the pan , and spread it around .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(garlic-3,garlic-3-sense)
is_a(garlic-3-sense,garlic.n.02)
has_sense(pan-6,pan-6-sense)
is_a(pan-6-sense,pan.n.01)
root(ROOT-0, put-1)
det(garlic-3, the-2)
dobj(put-1, garlic-3)
det(pan-6, the-5)
prep_in(garlic-3, pan-6)
conj_and(put-1, spread-9)
dobj(spread-9, it-10)
advmod(spread-9, around-11)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(garlic-3,NN)
has_pos(the-5,DT)
has_pos(pan-6,NN)
has_pos(spread-9,VB)
has_pos(it-10,PRP)
has_pos(around-11,RB)
has_sense(the-5, null)
has_sense(the-2, null)
has_sense(spread-9, null)
has_sense(it-10, null)
has_sense(around-11, null)
---
// When it be do place in a tupperware container and put somewhere like the microwave .
has_sense(be-3,be-3-sense)
is_a(be-3-sense,be.v.01)
has_sense(do-4,do-4-sense)
is_a(do-4-sense,do.v.03)
has_sense(place-5,place-5-sense)
is_a(place-5-sense,put.v.01)
has_sense(container-9,container-9-sense)
is_a(container-9-sense,container.n.01)
has_sense(put-11,put-11-sense)
is_a(put-11-sense,put.v.01)
has_sense(somewhere-12,somewhere-12-sense)
is_a(somewhere-12-sense,somewhere.r.01)
has_sense(microwave-15,microwave-15-sense)
is_a(microwave-15-sense,microwave.n.02)
advmod(do-4, When-1)
nsubj(do-4, it-2)
aux(do-4, be-3)
root(ROOT-0, do-4)
dobj(do-4, place-5)
det(container-9, a-7)
amod(container-9, tupperware-8)
prep_in(do-4, container-9)
conj_and(do-4, put-11)
advmod(put-11, somewhere-12)
det(microwave-15, the-14)
prep_like(put-11, microwave-15)
has_pos(When-1,WRB)
has_pos(it-2,PRP)
has_pos(be-3,VB)
has_pos(do-4,VB)
has_pos(place-5,NN)
has_pos(a-7,DT)
has_pos(tupperware-8,JJ)
has_pos(container-9,NN)
has_pos(put-11,VB)
has_pos(somewhere-12,RB)
has_pos(the-14,DT)
has_pos(microwave-15,NN)
has_sense(When-1, null)
has_sense(tupperware-8, null)
has_sense(it-2, null)
has_sense(the-14, null)
has_sense(a-7, null)
---
// put the grilled vegetable on the pizza .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(grilled-3,grilled-3-sense)
is_a(grilled-3-sense,broiled.s.01)
has_sense(vegetable-4,vegetable-4-sense)
is_a(vegetable-4-sense,vegetable.n.02)
has_sense(pizza-7,pizza-7-sense)
is_a(pizza-7-sense,pizza.n.01)
root(ROOT-0, put-1)
det(vegetable-4, the-2)
amod(vegetable-4, grilled-3)
dobj(put-1, vegetable-4)
det(pizza-7, the-6)
prep_on(put-1, pizza-7)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(grilled-3,JJ)
has_pos(vegetable-4,NN)
has_pos(the-6,DT)
has_pos(pizza-7,NN)
has_sense(the-6, null)
has_sense(the-2, null)
---
// put a little sauce on the top bun and some in the bottom bun .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(little-3,little-3-sense)
is_a(little-3-sense,small.a.01)
has_sense(sauce-4,sauce-4-sense)
is_a(sauce-4-sense,sauce.n.01)
has_sense(top-7,top-7-sense)
is_a(top-7-sense,top.a.01)
has_sense(bun-8,bun-8-sense)
is_a(bun-8-sense,bun.n.01)
has_sense(bottom-13,bottom-13-sense)
is_a(bottom-13-sense,bottom.a.01)
has_sense(bun-14,bun-14-sense)
is_a(bun-14-sense,bun.n.01)
root(ROOT-0, put-1)
det(sauce-4, a-2)
amod(sauce-4, little-3)
dobj(put-1, sauce-4)
det(bun-8, the-6)
amod(bun-8, top-7)
prep_on(sauce-4, bun-8)
conj_and(sauce-4, some-10)
det(bun-14, the-12)
amod(bun-14, bottom-13)
prep_in(some-10, bun-14)
has_pos(put-1,VB)
has_pos(a-2,DT)
has_pos(little-3,JJ)
has_pos(sauce-4,NN)
has_pos(the-6,DT)
has_pos(top-7,JJ)
has_pos(bun-8,NN)
has_pos(some-10,DT)
has_pos(the-12,DT)
has_pos(bottom-13,JJ)
has_pos(bun-14,NN)
has_sense(the-6, null)
has_sense(some-10, null)
has_sense(the-12, null)
has_sense(a-2, null)
---
// next , put about 5 spoonful of chocolate_syrup into the blender .
has_sense(next-1,next-1-sense)
is_a(next-1-sense,next.r.01)
has_sense(put-3,put-3-sense)
is_a(put-3-sense,put.v.01)
has_sense(about-4,about-4-sense)
is_a(about-4-sense,approximately.r.01)
has_sense(spoonful-6,spoonful-6-sense)
is_a(spoonful-6-sense,spoon.n.02)
has_sense(chocolate_syrup-8,chocolate_syrup-8-sense)
is_a(chocolate_syrup-8-sense,chocolate_sauce.n.01)
has_sense(blender-11,blender-11-sense)
is_a(blender-11-sense,blender.n.01)
advmod(put-3, next-1)
root(ROOT-0, put-3)
quantmod(5-5, about-4)
num(spoonful-6, 5-5)
dobj(put-3, spoonful-6)
prep_of(spoonful-6, chocolate_syrup-8)
det(blender-11, the-10)
prep_into(put-3, blender-11)
has_pos(next-1,RB)
has_pos(put-3,VB)
has_pos(about-4,RB)
has_pos(5-5,CD)
has_pos(spoonful-6,NN)
has_pos(chocolate_syrup-8,NN)
has_pos(the-10,DT)
has_pos(blender-11,NN)
has_sense(5-5, null)
has_sense(the-10, null)
---
// pour the milk until the cup be full , then put it into the blender .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(milk-3,milk-3-sense)
is_a(milk-3-sense,milk.n.01)
has_sense(cup-6,cup-6-sense)
is_a(cup-6-sense,cup.n.01)
has_sense(be-7,be-7-sense)
is_a(be-7-sense,be.v.01)
has_sense(full-8,full-8-sense)
is_a(full-8-sense,full.a.01)
has_sense(then-10,then-10-sense)
is_a(then-10-sense,then.r.01)
has_sense(put-11,put-11-sense)
is_a(put-11-sense,put.v.01)
has_sense(blender-15,blender-15-sense)
is_a(blender-15-sense,blender.n.01)
root(ROOT-0, pour-1)
det(milk-3, the-2)
dobj(pour-1, milk-3)
mark(full-8, until-4)
det(cup-6, the-5)
nsubj(full-8, cup-6)
cop(full-8, be-7)
advcl(pour-1, full-8)
advmod(full-8, then-10)
dep(full-8, put-11)
dobj(put-11, it-12)
det(blender-15, the-14)
prep_into(put-11, blender-15)
has_pos(pour-1,VB)
has_pos(the-2,DT)
has_pos(milk-3,NN)
has_pos(until-4,IN)
has_pos(the-5,DT)
has_pos(cup-6,NN)
has_pos(be-7,VB)
has_pos(full-8,JJ)
has_pos(then-10,RB)
has_pos(put-11,VB)
has_pos(it-12,PRP)
has_pos(the-14,DT)
has_pos(blender-15,NN)
has_sense(the-5, null)
has_sense(it-12, null)
has_sense(the-2, null)
has_sense(the-14, null)
has_sense(until-4, null)
---
// put a weight on top of the plate to keep the cabbage below the level of the water .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(weight-3,weight-3-sense)
is_a(weight-3-sense,weight.n.04)
has_sense(top-5,top-5-sense)
is_a(top-5-sense,top.n.02)
has_sense(plate-8,plate-8-sense)
is_a(plate-8-sense,plate.n.04)
has_sense(keep-10,keep-10-sense)
is_a(keep-10-sense,keep.v.01)
has_sense(cabbage-12,cabbage-12-sense)
is_a(cabbage-12-sense,cabbage.n.01)
has_sense(water-18,water-18-sense)
is_a(water-18-sense,water.n.06)
root(ROOT-0, put-1)
det(weight-3, a-2)
dobj(put-1, weight-3)
det(plate-8, the-7)
prep_on_top_of(weight-3, plate-8)
aux(keep-10, to-9)
infmod(plate-8, keep-10)
det(cabbage-12, the-11)
dobj(keep-10, cabbage-12)
det(level-15, the-14)
prep_below(keep-10, level-15)
det(water-18, the-17)
prep_of(level-15, water-18)
has_pos(put-1,VB)
has_pos(a-2,DT)
has_pos(weight-3,NN)
has_pos(the-7,DT)
has_pos(plate-8,NN)
has_pos(to-9,TO)
has_pos(keep-10,VB)
has_pos(the-11,DT)
has_pos(cabbage-12,NN)
has_pos(the-14,DT)
has_pos(level-15,NN)
has_pos(the-17,DT)
has_pos(water-18,NN)
has_sense(the-7, null)
has_sense(to-9, null)
has_sense(the-14, null)
has_sense(level-15, null)
has_sense(the-17, null)
has_sense(a-2, null)
has_sense(the-11, null)
---
// cut the mozarella in cubes and put it on the pizza .
has_sense(cut-1,cut-1-sense)
is_a(cut-1-sense,cut.v.01)
has_sense(put-7,put-7-sense)
is_a(put-7-sense,put.v.01)
has_sense(pizza-11,pizza-11-sense)
is_a(pizza-11-sense,pizza.n.01)
root(ROOT-0, cut-1)
det(mozarella-3, the-2)
dobj(cut-1, mozarella-3)
prep_in(mozarella-3, cubes-5)
conj_and(cut-1, put-7)
dobj(put-7, it-8)
det(pizza-11, the-10)
prep_on(put-7, pizza-11)
has_pos(cut-1,VB)
has_pos(the-2,DT)
has_pos(mozarella-3,NN)
has_pos(cubes-5,NNS)
has_pos(put-7,VB)
has_pos(it-8,PRP)
has_pos(the-10,DT)
has_pos(pizza-11,NN)
has_sense(the-2, null)
has_sense(cubes-5, null)
has_sense(mozarella-3, null)
has_sense(the-10, null)
has_sense(it-8, null)
---
// put the egg inside on the salad_plate .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(egg-3,egg-3-sense)
is_a(egg-3-sense,egg.n.02)
has_sense(inside-4,inside-4-sense)
is_a(inside-4-sense,inside.n.01)
has_sense(salad_plate-7,salad_plate-7-sense)
is_a(salad_plate-7-sense,salad_plate.n.01)
root(ROOT-0, put-1)
det(egg-3, the-2)
dobj(put-1, egg-3)
advmod(put-1, inside-4)
det(salad_plate-7, the-6)
prep_on(put-1, salad_plate-7)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(egg-3,NN)
has_pos(inside-4,RB)
has_pos(the-6,DT)
has_pos(salad_plate-7,NN)
has_sense(the-6, null)
has_sense(the-2, null)
---
// put the pie pan into the oven for ten minutes .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(pie-3,pie-3-sense)
is_a(pie-3-sense,pie.n.01)
has_sense(oven-7,oven-7-sense)
is_a(oven-7-sense,oven.n.01)
root(ROOT-0, put-1)
det(pie-3, the-2)
nsubj(pan-4, pie-3)
ccomp(put-1, pan-4)
det(oven-7, the-6)
prep_into(pan-4, oven-7)
num(minutes-10, ten-9)
prep_for(oven-7, minutes-10)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(pie-3,NN)
has_pos(pan-4,VB)
has_pos(the-6,DT)
has_pos(oven-7,NN)
has_pos(ten-9,CD)
has_pos(minutes-10,NNS)
has_sense(the-6, null)
has_sense(the-2, null)
has_sense(minutes-10, null)
has_sense(ten-9, null)
has_sense(pan-4, null)
---
// put the pepper , sausage , and onion into the bread .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(pepper-3,pepper-3-sense)
is_a(pepper-3-sense,pepper.n.03)
has_sense(sausage-5,sausage-5-sense)
is_a(sausage-5-sense,sausage.n.01)
has_sense(onion-8,onion-8-sense)
is_a(onion-8-sense,onion.n.01)
has_sense(bread-11,bread-11-sense)
is_a(bread-11-sense,bread.n.01)
root(ROOT-0, put-1)
det(onion-8, the-2)
nn(onion-8, pepper-3)
conj_and(onion-8, sausage-5)
dobj(put-1, onion-8)
det(bread-11, the-10)
prep_into(onion-8, bread-11)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(pepper-3,NN)
has_pos(sausage-5,NN)
has_pos(onion-8,NN)
has_pos(the-10,DT)
has_pos(bread-11,NN)
has_sense(the-2, null)
has_sense(the-10, null)
---
// put salt and pepper on the top of shred potato .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(salt-2,salt-2-sense)
is_a(salt-2-sense,salt.n.02)
has_sense(pepper-4,pepper-4-sense)
is_a(pepper-4-sense,pepper.n.03)
has_sense(top-7,top-7-sense)
is_a(top-7-sense,top.n.02)
has_sense(potato-10,potato-10-sense)
is_a(potato-10-sense,potato.n.01)
root(ROOT-0, put-1)
dobj(put-1, salt-2)
conj_and(salt-2, pepper-4)
det(top-7, the-6)
prep_on(put-1, top-7)
nn(potato-10, shred-9)
prep_of(top-7, potato-10)
has_pos(put-1,VB)
has_pos(salt-2,NN)
has_pos(pepper-4,NN)
has_pos(the-6,DT)
has_pos(top-7,NN)
has_pos(shred-9,NN)
has_pos(potato-10,NN)
has_sense(the-6, null)
has_sense(shred-9, null)
---
// put a teaspoon of instant_coffee into the mug .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(teaspoon-3,teaspoon-3-sense)
is_a(teaspoon-3-sense,teaspoon.n.01)
has_sense(instant_coffee-5,instant_coffee-5-sense)
is_a(instant_coffee-5-sense,instant_coffee.n.01)
has_sense(mug-8,mug-8-sense)
is_a(mug-8-sense,mug.n.04)
root(ROOT-0, put-1)
det(teaspoon-3, a-2)
dobj(put-1, teaspoon-3)
prep_of(teaspoon-3, instant_coffee-5)
det(mug-8, the-7)
prep_into(put-1, mug-8)
has_pos(put-1,VB)
has_pos(a-2,DT)
has_pos(teaspoon-3,NN)
has_pos(instant_coffee-5,NN)
has_pos(the-7,DT)
has_pos(mug-8,NN)
has_sense(the-7, null)
has_sense(a-2, null)
---
// put ingredient list below together on your workspace .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(ingredient-2,ingredient-2-sense)
is_a(ingredient-2-sense,ingredient.n.03)
has_sense(list-3,list-3-sense)
is_a(list-3-sense,list.v.02)
has_sense(together-5,together-5-sense)
is_a(together-5-sense,together.r.01)
has_sense(workspace-8,workspace-8-sense)
is_a(workspace-8-sense,workspace.n.01)
root(ROOT-0, put-1)
nn(list-3, ingredient-2)
dobj(put-1, list-3)
advmod(together-5, below-4)
advmod(put-1, together-5)
poss(workspace-8, your-7)
prep_on(put-1, workspace-8)
has_pos(put-1,VB)
has_pos(ingredient-2,NN)
has_pos(list-3,NN)
has_pos(below-4,RB)
has_pos(together-5,RB)
has_pos(your-7,PRP$)
has_pos(workspace-8,NN)
has_sense(your-7, null)
has_sense(below-4, null)
---
// If the turkey be not done yet , put the lid back on the smoker and let the bird cook another 30-45 minutes .
has_sense(turkey-3,turkey-3-sense)
is_a(turkey-3-sense,turkey.n.04)
has_sense(be-4,be-4-sense)
is_a(be-4-sense,be.v.01)
has_sense(not-5,not-5-sense)
is_a(not-5-sense,not.r.01)
has_sense(yet-7,yet-7-sense)
is_a(yet-7-sense,yet.r.01)
has_sense(put-9,put-9-sense)
is_a(put-9-sense,put.v.01)
has_sense(lid-11,lid-11-sense)
is_a(lid-11-sense,lid.n.02)
has_sense(let-17,let-17-sense)
is_a(let-17-sense,let.v.01)
has_sense(bird-19,bird-19-sense)
is_a(bird-19-sense,bird.n.02)
mark(done-6, If-1)
det(turkey-3, the-2)
nsubjpass(done-6, turkey-3)
auxpass(done-6, be-4)
neg(done-6, not-5)
advcl(put-9, done-6)
advmod(done-6, yet-7)
root(ROOT-0, put-9)
det(lid-11, the-10)
dobj(put-9, lid-11)
prt(put-9, back-12)
det(smoker-15, the-14)
prep_on(put-9, smoker-15)
conj_and(put-9, let-17)
det(cook-20, the-18)
nn(cook-20, bird-19)
dobj(let-17, cook-20)
det(minutes-23, another-21)
num(minutes-23, 30-45-22)
tmod(let-17, minutes-23)
has_pos(If-1,IN)
has_pos(the-2,DT)
has_pos(turkey-3,NN)
has_pos(be-4,VBP)
has_pos(not-5,RB)
has_pos(done-6,VBN)
has_pos(yet-7,RB)
has_pos(put-9,VB)
has_pos(the-10,DT)
has_pos(lid-11,NN)
has_pos(back-12,RP)
has_pos(the-14,DT)
has_pos(smoker-15,NN)
has_pos(let-17,VB)
has_pos(the-18,DT)
has_pos(bird-19,NN)
has_pos(cook-20,NN)
has_pos(another-21,DT)
has_pos(30-45-22,CD)
has_pos(minutes-23,NNS)
has_sense(the-14, null)
has_sense(30-45-22, null)
has_sense(the-2, null)
has_sense(done-6, null)
has_sense(back-12, null)
has_sense(minutes-23, null)
has_sense(smoker-15, null)
has_sense(another-21, null)
has_sense(the-18, null)
has_sense(If-1, null)
has_sense(cook-20, null)
has_sense(the-10, null)
---
// If you find the crust be too hard , put the bread in a sealed plastic_bag after it cool .
has_sense(find-3,find-3-sense)
is_a(find-3-sense,detect.v.01)
has_sense(crust-5,crust-5-sense)
is_a(crust-5-sense,crust.n.02)
has_sense(be-6,be-6-sense)
is_a(be-6-sense,be.v.01)
has_sense(too-7,too-7-sense)
is_a(too-7-sense,excessively.r.01)
has_sense(hard-8,hard-8-sense)
is_a(hard-8-sense,hard.s.12)
has_sense(put-10,put-10-sense)
is_a(put-10-sense,put.v.01)
has_sense(bread-12,bread-12-sense)
is_a(bread-12-sense,bread.n.01)
has_sense(plastic_bag-16,plastic_bag-16-sense)
is_a(plastic_bag-16-sense,plastic_bag.n.01)
has_sense(cool-19,cool-19-sense)
is_a(cool-19-sense,cool.v.02)
mark(find-3, If-1)
nsubj(find-3, you-2)
advcl(put-10, find-3)
det(crust-5, the-4)
nsubj(hard-8, crust-5)
cop(hard-8, be-6)
advmod(hard-8, too-7)
ccomp(find-3, hard-8)
root(ROOT-0, put-10)
det(bread-12, the-11)
dobj(put-10, bread-12)
det(plastic_bag-16, a-14)
amod(plastic_bag-16, sealed-15)
prep_in(put-10, plastic_bag-16)
mark(cool-19, after-17)
nsubj(cool-19, it-18)
advcl(put-10, cool-19)
has_pos(If-1,IN)
has_pos(you-2,PRP)
has_pos(find-3,VBP)
has_pos(the-4,DT)
has_pos(crust-5,NN)
has_pos(be-6,VB)
has_pos(too-7,RB)
has_pos(hard-8,JJ)
has_pos(put-10,VB)
has_pos(the-11,DT)
has_pos(bread-12,NN)
has_pos(a-14,DT)
has_pos(sealed-15,VBN)
has_pos(plastic_bag-16,NN)
has_pos(after-17,IN)
has_pos(it-18,PRP)
has_pos(cool-19,VBP)
has_sense(the-4, null)
has_sense(you-2, null)
has_sense(a-14, null)
has_sense(sealed-15, null)
has_sense(it-18, null)
has_sense(after-17, null)
has_sense(If-1, null)
has_sense(the-11, null)
---
// put the beef and onion on a plate .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(beef-3,beef-3-sense)
is_a(beef-3-sense,beef.n.02)
has_sense(onion-5,onion-5-sense)
is_a(onion-5-sense,onion.n.01)
has_sense(plate-8,plate-8-sense)
is_a(plate-8-sense,plate.n.04)
root(ROOT-0, put-1)
det(beef-3, the-2)
dobj(put-1, beef-3)
conj_and(beef-3, onion-5)
det(plate-8, a-7)
prep_on(beef-3, plate-8)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(beef-3,NN)
has_pos(onion-5,NN)
has_pos(a-7,DT)
has_pos(plate-8,NN)
has_sense(a-7, null)
has_sense(the-2, null)
---
// put about one tablespoon of butter on a pan .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(tablespoon-4,tablespoon-4-sense)
is_a(tablespoon-4-sense,tablespoon.n.01)
has_sense(butter-6,butter-6-sense)
is_a(butter-6-sense,butter.n.01)
has_sense(pan-9,pan-9-sense)
is_a(pan-9-sense,pan.n.01)
root(ROOT-0, put-1)
num(tablespoon-4, one-3)
prep_about(put-1, tablespoon-4)
prep_of(tablespoon-4, butter-6)
det(pan-9, a-8)
prep_on(put-1, pan-9)
has_pos(put-1,VB)
has_pos(one-3,CD)
has_pos(tablespoon-4,NN)
has_pos(butter-6,NN)
has_pos(a-8,DT)
has_pos(pan-9,NN)
has_sense(one-3, null)
has_sense(a-8, null)
---
// carefully put your slice of bread into the bread slot of the toaster or rack of a toaster_oven .
has_sense(carefully-1,carefully-1-sense)
is_a(carefully-1-sense,carefully.r.01)
has_sense(put-2,put-2-sense)
is_a(put-2-sense,put.v.01)
has_sense(slice-4,slice-4-sense)
is_a(slice-4-sense,piece.n.08)
has_sense(bread-6,bread-6-sense)
is_a(bread-6-sense,bread.n.01)
has_sense(bread-9,bread-9-sense)
is_a(bread-9-sense,bread.n.01)
has_sense(slot-10,slot-10-sense)
is_a(slot-10-sense,slot.n.02)
has_sense(toaster-13,toaster-13-sense)
is_a(toaster-13-sense,toaster.n.02)
has_sense(rack-15,rack-15-sense)
is_a(rack-15-sense,rack.n.01)
has_sense(toaster_oven-18,toaster_oven-18-sense)
is_a(toaster_oven-18-sense,toaster_oven.n.01)
advmod(put-2, carefully-1)
root(ROOT-0, put-2)
poss(slice-4, your-3)
dobj(put-2, slice-4)
prep_of(slice-4, bread-6)
det(slot-10, the-8)
nn(slot-10, bread-9)
prep_into(put-2, slot-10)
det(toaster-13, the-12)
prep_of(slot-10, toaster-13)
conj_or(toaster-13, rack-15)
det(toaster_oven-18, a-17)
prep_of(toaster-13, toaster_oven-18)
has_pos(carefully-1,RB)
has_pos(put-2,VB)
has_pos(your-3,PRP$)
has_pos(slice-4,NN)
has_pos(bread-6,NN)
has_pos(the-8,DT)
has_pos(bread-9,NN)
has_pos(slot-10,NN)
has_pos(the-12,DT)
has_pos(toaster-13,NN)
has_pos(rack-15,NN)
has_pos(a-17,DT)
has_pos(toaster_oven-18,NN)
has_sense(a-17, null)
has_sense(your-3, null)
has_sense(the-8, null)
has_sense(the-12, null)
---
// put whipped_cream on top .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(whipped_cream-2,whipped_cream-2-sense)
is_a(whipped_cream-2-sense,whipped_cream.n.01)
has_sense(top-4,top-4-sense)
is_a(top-4-sense,top.n.01)
root(ROOT-0, put-1)
dobj(put-1, whipped_cream-2)
prep_on(put-1, top-4)
has_pos(put-1,VB)
has_pos(whipped_cream-2,NN)
has_pos(top-4,NN)
---
// put in a type of dip or sauce at the bottom of it .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(type-4,type-4-sense)
is_a(type-4-sense,type.n.01)
has_sense(dip-6,dip-6-sense)
is_a(dip-6-sense,dip.n.04)
has_sense(sauce-8,sauce-8-sense)
is_a(sauce-8-sense,sauce.n.01)
has_sense(bottom-11,bottom-11-sense)
is_a(bottom-11-sense,bottom.n.02)
root(ROOT-0, put-1)
det(type-4, a-3)
prep_in(put-1, type-4)
prep_of(type-4, dip-6)
conj_or(dip-6, sauce-8)
det(bottom-11, the-10)
prep_at(put-1, bottom-11)
prep_of(bottom-11, it-13)
has_pos(put-1,VB)
has_pos(a-3,DT)
has_pos(type-4,NN)
has_pos(dip-6,NN)
has_pos(sauce-8,NN)
has_pos(the-10,DT)
has_pos(bottom-11,NN)
has_pos(it-13,PRP)
has_sense(it-13, null)
has_sense(a-3, null)
has_sense(the-10, null)
---
// put the mug in the microwave for two minutes .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(mug-3,mug-3-sense)
is_a(mug-3-sense,mug.n.04)
has_sense(microwave-6,microwave-6-sense)
is_a(microwave-6-sense,microwave.n.02)
root(ROOT-0, put-1)
det(mug-3, the-2)
dobj(put-1, mug-3)
det(microwave-6, the-5)
prep_in(put-1, microwave-6)
num(minutes-9, two-8)
prep_for(microwave-6, minutes-9)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(mug-3,NN)
has_pos(the-5,DT)
has_pos(microwave-6,NN)
has_pos(two-8,CD)
has_pos(minutes-9,NNS)
has_sense(the-5, null)
has_sense(minutes-9, null)
has_sense(the-2, null)
has_sense(two-8, null)
---
// put one spoon of the batter into the frying_pan to make a pancake .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(spoon-3,spoon-3-sense)
is_a(spoon-3-sense,spoon.n.01)
has_sense(batter-6,batter-6-sense)
is_a(batter-6-sense,batter.n.02)
has_sense(frying_pan-9,frying_pan-9-sense)
is_a(frying_pan-9-sense,frying_pan.n.01)
has_sense(pancake-13,pancake-13-sense)
is_a(pancake-13-sense,pancake.n.01)
root(ROOT-0, put-1)
num(spoon-3, one-2)
dobj(put-1, spoon-3)
det(batter-6, the-5)
prep_of(spoon-3, batter-6)
det(frying_pan-9, the-8)
prep_into(put-1, frying_pan-9)
aux(make-11, to-10)
infmod(frying_pan-9, make-11)
det(pancake-13, a-12)
dobj(make-11, pancake-13)
has_pos(put-1,VB)
has_pos(one-2,CD)
has_pos(spoon-3,NN)
has_pos(the-5,DT)
has_pos(batter-6,NN)
has_pos(the-8,DT)
has_pos(frying_pan-9,NN)
has_pos(to-10,TO)
has_pos(make-11,VB)
has_pos(a-12,DT)
has_pos(pancake-13,NN)
has_sense(the-5, null)
has_sense(a-12, null)
has_sense(one-2, null)
has_sense(the-8, null)
has_sense(to-10, null)
has_sense(make-11, null)
---
// put the seal container in the fridge for 2 to 24 hours , depend on the strength of the marinade .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(seal-3,seal-3-sense)
is_a(seal-3-sense,seal.v.01)
has_sense(container-4,container-4-sense)
is_a(container-4-sense,container.n.01)
has_sense(fridge-7,fridge-7-sense)
is_a(fridge-7-sense,electric_refrigerator.n.01)
has_sense(hours-12,hours-12-sense)
is_a(hours-12-sense,hours.n.01)
has_sense(depend-14,depend-14-sense)
is_a(depend-14-sense,depend.v.01)
has_sense(strength-17,strength-17-sense)
is_a(strength-17-sense,force.n.03)
has_sense(marinade-20,marinade-20-sense)
is_a(marinade-20-sense,marinade.n.01)
root(ROOT-0, put-1)
det(container-4, the-2)
nn(container-4, seal-3)
dobj(put-1, container-4)
det(fridge-7, the-6)
prep_in(put-1, fridge-7)
number(24-11, 2-9)
dep(24-11, to-10)
num(hours-12, 24-11)
prep_for(fridge-7, hours-12)
dep(put-1, depend-14)
det(strength-17, the-16)
prep_on(depend-14, strength-17)
det(marinade-20, the-19)
prep_of(strength-17, marinade-20)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(seal-3,NN)
has_pos(container-4,NN)
has_pos(the-6,DT)
has_pos(fridge-7,NN)
has_pos(2-9,CD)
has_pos(to-10,TO)
has_pos(24-11,CD)
has_pos(hours-12,NNS)
has_pos(depend-14,VB)
has_pos(the-16,DT)
has_pos(strength-17,NN)
has_pos(the-19,DT)
has_pos(marinade-20,NN)
has_sense(the-6, null)
has_sense(24-11, null)
has_sense(the-2, null)
has_sense(2-9, null)
has_sense(to-10, null)
has_sense(the-19, null)
has_sense(the-16, null)
---
// put 1\/4 cup frozen cherries into a small bowl .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(small-8,small-8-sense)
is_a(small-8-sense,small.a.01)
has_sense(bowl-9,bowl-9-sense)
is_a(bowl-9-sense,bowl.n.01)
root(ROOT-0, put-1)
num(cherries-5, 1\/4-2)
nn(cherries-5, cup-3)
amod(cherries-5, frozen-4)
dobj(put-1, cherries-5)
det(bowl-9, a-7)
amod(bowl-9, small-8)
prep_into(cherries-5, bowl-9)
has_pos(put-1,VB)
has_pos(1\/4-2,CD)
has_pos(cup-3,NN)
has_pos(frozen-4,VBN)
has_pos(cherries-5,NNS)
has_pos(a-7,DT)
has_pos(small-8,JJ)
has_pos(bowl-9,NN)
has_sense(frozen-4, null)
has_sense(cherries-5, null)
has_sense(cup-3, null)
has_sense(a-7, null)
has_sense(1\/4-2, null)
---
// put a chopped banana in a blender .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(chopped-3,chopped-3-sense)
is_a(chopped-3-sense,chopped.s.01)
has_sense(banana-4,banana-4-sense)
is_a(banana-4-sense,banana.n.02)
has_sense(blender-7,blender-7-sense)
is_a(blender-7-sense,blender.n.01)
root(ROOT-0, put-1)
det(banana-4, a-2)
amod(banana-4, chopped-3)
dobj(put-1, banana-4)
det(blender-7, a-6)
prep_in(put-1, blender-7)
has_pos(put-1,VB)
has_pos(a-2,DT)
has_pos(chopped-3,JJ)
has_pos(banana-4,NN)
has_pos(a-6,DT)
has_pos(blender-7,NN)
has_sense(a-2, null)
has_sense(a-6, null)
---
// put the ravioli together .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(ravioli-3,ravioli-3-sense)
is_a(ravioli-3-sense,ravioli.n.01)
root(ROOT-0, put-1)
det(ravioli-3, the-2)
dobj(put-1, ravioli-3)
advmod(put-1, together-4)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(ravioli-3,NN)
has_pos(together-4,RB)
has_sense(together-4, null)
has_sense(the-2, null)
---
// take the walnut meat out and put it on a small plate .
has_sense(take-1,take-1-sense)
is_a(take-1-sense,take.v.04)
has_sense(walnut-3,walnut-3-sense)
is_a(walnut-3-sense,walnut.n.01)
has_sense(meat-4,meat-4-sense)
is_a(meat-4-sense,meat.n.01)
has_sense(put-7,put-7-sense)
is_a(put-7-sense,put.v.01)
has_sense(small-11,small-11-sense)
is_a(small-11-sense,small.a.01)
has_sense(plate-12,plate-12-sense)
is_a(plate-12-sense,plate.n.04)
root(ROOT-0, take-1)
det(meat-4, the-2)
amod(meat-4, walnut-3)
dobj(take-1, meat-4)
prt(take-1, out-5)
conj_and(take-1, put-7)
dobj(put-7, it-8)
det(plate-12, a-10)
amod(plate-12, small-11)
prep_on(put-7, plate-12)
has_pos(take-1,VB)
has_pos(the-2,DT)
has_pos(walnut-3,JJ)
has_pos(meat-4,NN)
has_pos(out-5,RP)
has_pos(put-7,VB)
has_pos(it-8,PRP)
has_pos(a-10,DT)
has_pos(small-11,JJ)
has_pos(plate-12,NN)
has_sense(the-2, null)
has_sense(out-5, null)
has_sense(it-8, null)
has_sense(a-10, null)
---
// put the butter in a pan and begin heating .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(butter-3,butter-3-sense)
is_a(butter-3-sense,butter.n.01)
has_sense(pan-6,pan-6-sense)
is_a(pan-6-sense,pan.n.01)
has_sense(begin-8,begin-8-sense)
is_a(begin-8-sense,get_down.v.07)
has_sense(heating-9,heating-9-sense)
is_a(heating-9-sense,heating.n.01)
root(ROOT-0, put-1)
det(butter-3, the-2)
dobj(put-1, butter-3)
det(pan-6, a-5)
prep_in(butter-3, pan-6)
conj_and(put-1, begin-8)
dobj(begin-8, heating-9)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(butter-3,NN)
has_pos(a-5,DT)
has_pos(pan-6,NN)
has_pos(begin-8,VB)
has_pos(heating-9,NN)
has_sense(a-5, null)
has_sense(the-2, null)
---
// put spice on the steak .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(spice-2,spice-2-sense)
is_a(spice-2-sense,spice.n.02)
has_sense(steak-5,steak-5-sense)
is_a(steak-5-sense,steak.n.01)
root(ROOT-0, put-1)
dobj(put-1, spice-2)
det(steak-5, the-4)
prep_on(put-1, steak-5)
has_pos(put-1,VB)
has_pos(spice-2,NN)
has_pos(the-4,DT)
has_pos(steak-5,NN)
has_sense(the-4, null)
---
// put in 8-12 strawberries into the blender .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(blender-7,blender-7-sense)
is_a(blender-7-sense,blender.n.01)
root(ROOT-0, put-1)
num(strawberries-4, 8-12-3)
prep_in(put-1, strawberries-4)
det(blender-7, the-6)
prep_into(put-1, blender-7)
has_pos(put-1,VB)
has_pos(8-12-3,CD)
has_pos(strawberries-4,NNS)
has_pos(the-6,DT)
has_pos(blender-7,NN)
has_sense(the-6, null)
has_sense(8-12-3, null)
has_sense(strawberries-4, null)
---
// wrap it and put in the microwave for 3-4 minute .
has_sense(wrap-1,wrap-1-sense)
is_a(wrap-1-sense,envelop.v.01)
has_sense(put-4,put-4-sense)
is_a(put-4-sense,put.v.01)
has_sense(microwave-7,microwave-7-sense)
is_a(microwave-7-sense,microwave.n.02)
has_sense(minute-10,minute-10-sense)
is_a(minute-10-sense,minute.n.01)
root(ROOT-0, wrap-1)
dobj(wrap-1, it-2)
conj_and(wrap-1, put-4)
det(microwave-7, the-6)
prep_in(put-4, microwave-7)
num(minute-10, 3-4-9)
prep_for(microwave-7, minute-10)
has_pos(wrap-1,VB)
has_pos(it-2,PRP)
has_pos(put-4,VB)
has_pos(the-6,DT)
has_pos(microwave-7,NN)
has_pos(3-4-9,CD)
has_pos(minute-10,NN)
has_sense(the-6, null)
has_sense(3-4-9, null)
has_sense(it-2, null)
---
// put your ingredient in the bread pan and snap the bread pan into place .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(ingredient-3,ingredient-3-sense)
is_a(ingredient-3-sense,ingredient.n.03)
has_sense(bread-6,bread-6-sense)
is_a(bread-6-sense,bread.n.01)
has_sense(pan-7,pan-7-sense)
is_a(pan-7-sense,pan.n.01)
has_sense(snap-9,snap-9-sense)
is_a(snap-9-sense,snap.v.05)
has_sense(bread-11,bread-11-sense)
is_a(bread-11-sense,bread.n.01)
has_sense(pan-12,pan-12-sense)
is_a(pan-12-sense,pan.n.01)
has_sense(place-14,place-14-sense)
is_a(place-14-sense,topographic_point.n.01)
root(ROOT-0, put-1)
poss(ingredient-3, your-2)
dobj(put-1, ingredient-3)
det(pan-7, the-5)
nn(pan-7, bread-6)
prep_in(put-1, pan-7)
conj_and(put-1, snap-9)
det(pan-12, the-10)
nn(pan-12, bread-11)
dobj(snap-9, pan-12)
prep_into(snap-9, place-14)
has_pos(put-1,VB)
has_pos(your-2,PRP$)
has_pos(ingredient-3,NN)
has_pos(the-5,DT)
has_pos(bread-6,NN)
has_pos(pan-7,NN)
has_pos(snap-9,VBP)
has_pos(the-10,DT)
has_pos(bread-11,NN)
has_pos(pan-12,NN)
has_pos(place-14,NN)
has_sense(the-5, null)
has_sense(your-2, null)
has_sense(the-10, null)
---
// put the lid back on the smoker .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(lid-3,lid-3-sense)
is_a(lid-3-sense,lid.n.02)
has_sense(back-4,back-4-sense)
is_a(back-4-sense,back.r.01)
root(ROOT-0, put-1)
det(lid-3, the-2)
dobj(put-1, lid-3)
advmod(put-1, back-4)
det(smoker-7, the-6)
prep_on(put-1, smoker-7)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(lid-3,NN)
has_pos(back-4,RB)
has_pos(the-6,DT)
has_pos(smoker-7,NN)
has_sense(the-6, null)
has_sense(smoker-7, null)
has_sense(the-2, null)
---
// peel the banana and put the banana in an oval dish .
has_sense(peel-1,peel-1-sense)
is_a(peel-1-sense,skin.v.04)
has_sense(banana-3,banana-3-sense)
is_a(banana-3-sense,banana.n.02)
has_sense(put-5,put-5-sense)
is_a(put-5-sense,put.v.01)
has_sense(banana-7,banana-7-sense)
is_a(banana-7-sense,banana.n.02)
has_sense(oval-10,oval-10-sense)
is_a(oval-10-sense,egg-shaped.s.01)
has_sense(dish-11,dish-11-sense)
is_a(dish-11-sense,dish.n.01)
root(ROOT-0, peel-1)
det(banana-3, the-2)
dobj(peel-1, banana-3)
conj_and(peel-1, put-5)
det(banana-7, the-6)
dobj(put-5, banana-7)
det(dish-11, an-9)
amod(dish-11, oval-10)
prep_in(banana-7, dish-11)
has_pos(peel-1,VB)
has_pos(the-2,DT)
has_pos(banana-3,NN)
has_pos(put-5,VB)
has_pos(the-6,DT)
has_pos(banana-7,NN)
has_pos(an-9,DT)
has_pos(oval-10,JJ)
has_pos(dish-11,NN)
has_sense(the-6, null)
has_sense(an-9, null)
has_sense(the-2, null)
---
// put more vegetable .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(more-2,more-2-sense)
is_a(more-2-sense,more.a.01)
has_sense(vegetable-3,vegetable-3-sense)
is_a(vegetable-3-sense,vegetable.n.02)
root(ROOT-0, put-1)
amod(vegetable-3, more-2)
dobj(put-1, vegetable-3)
has_pos(put-1,VB)
has_pos(more-2,JJR)
has_pos(vegetable-3,NN)
---
// put some on the inside as well .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(inside-5,inside-5-sense)
is_a(inside-5-sense,inside.n.02)
has_sense(as-6,as-6-sense)
is_a(as-6-sense,equally.r.01)
root(ROOT-0, put-1)
dobj(put-1, some-2)
det(inside-5, the-4)
prep_on(some-2, inside-5)
advmod(well-7, as-6)
advmod(inside-5, well-7)
has_pos(put-1,VB)
has_pos(some-2,DT)
has_pos(the-4,DT)
has_pos(inside-5,NN)
has_pos(as-6,RB)
has_pos(well-7,RB)
has_sense(some-2, null)
has_sense(the-4, null)
has_sense(well-7, null)
---
// put the tomato into the boiling water for one minute .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(tomato-3,tomato-3-sense)
is_a(tomato-3-sense,tomato.n.01)
has_sense(boiling-6,boiling-6-sense)
is_a(boiling-6-sense,boiling.n.02)
has_sense(water-7,water-7-sense)
is_a(water-7-sense,water.n.06)
has_sense(minute-10,minute-10-sense)
is_a(minute-10-sense,minute.n.01)
root(ROOT-0, put-1)
det(tomato-3, the-2)
dobj(put-1, tomato-3)
det(water-7, the-5)
amod(water-7, boiling-6)
prep_into(put-1, water-7)
num(minute-10, one-9)
prep_for(water-7, minute-10)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(tomato-3,NN)
has_pos(the-5,DT)
has_pos(boiling-6,JJ)
has_pos(water-7,NN)
has_pos(one-9,CD)
has_pos(minute-10,NN)
has_sense(the-5, null)
has_sense(the-2, null)
has_sense(one-9, null)
---
// put the steak into the oven .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(steak-3,steak-3-sense)
is_a(steak-3-sense,steak.n.01)
has_sense(oven-6,oven-6-sense)
is_a(oven-6-sense,oven.n.01)
root(ROOT-0, put-1)
det(steak-3, the-2)
dobj(put-1, steak-3)
det(oven-6, the-5)
prep_into(put-1, oven-6)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(steak-3,NN)
has_pos(the-5,DT)
has_pos(oven-6,NN)
has_sense(the-5, null)
has_sense(the-2, null)
---
// put a paper_towel or a plate under the waffle_iron in case of leak batter .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(paper_towel-3,paper_towel-3-sense)
is_a(paper_towel-3-sense,paper_towel.n.01)
has_sense(plate-6,plate-6-sense)
is_a(plate-6-sense,plate.n.04)
has_sense(waffle_iron-9,waffle_iron-9-sense)
is_a(waffle_iron-9-sense,waffle_iron.n.01)
has_sense(case-11,case-11-sense)
is_a(case-11-sense,case.n.01)
has_sense(leak-13,leak-13-sense)
is_a(leak-13-sense,leak.v.03)
has_sense(batter-14,batter-14-sense)
is_a(batter-14-sense,batter.n.02)
root(ROOT-0, put-1)
det(paper_towel-3, a-2)
dobj(put-1, paper_towel-3)
det(plate-6, a-5)
conj_or(paper_towel-3, plate-6)
det(waffle_iron-9, the-8)
prep_under(put-1, waffle_iron-9)
nn(batter-14, leak-13)
prep_in_case_of(waffle_iron-9, batter-14)
has_pos(put-1,VB)
has_pos(a-2,DT)
has_pos(paper_towel-3,NN)
has_pos(a-5,DT)
has_pos(plate-6,NN)
has_pos(the-8,DT)
has_pos(waffle_iron-9,NN)
has_pos(leak-13,NN)
has_pos(batter-14,NN)
has_sense(the-8, null)
has_sense(a-2, null)
has_sense(a-5, null)
---
// put the burger on a plate and cover them with plastic_wrap .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(burger-3,burger-3-sense)
is_a(burger-3-sense,hamburger.n.01)
has_sense(plate-6,plate-6-sense)
is_a(plate-6-sense,plate.n.04)
has_sense(cover-8,cover-8-sense)
is_a(cover-8-sense,cover.v.01)
has_sense(plastic_wrap-11,plastic_wrap-11-sense)
is_a(plastic_wrap-11-sense,plastic_wrap.n.01)
root(ROOT-0, put-1)
det(burger-3, the-2)
dobj(put-1, burger-3)
det(plate-6, a-5)
prep_on(put-1, plate-6)
conj_and(put-1, cover-8)
dobj(cover-8, them-9)
prep_with(cover-8, plastic_wrap-11)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(burger-3,NN)
has_pos(a-5,DT)
has_pos(plate-6,NN)
has_pos(cover-8,VB)
has_pos(them-9,PRP)
has_pos(plastic_wrap-11,NN)
has_sense(them-9, null)
has_sense(the-2, null)
has_sense(a-5, null)
---
// put your tea_bag or tea leaves inside the microwavable mug or cup .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(tea_bag-3,tea_bag-3-sense)
is_a(tea_bag-3-sense,tea_bag.n.01)
has_sense(tea-5,tea-5-sense)
is_a(tea-5-sense,tea.n.05)
has_sense(mug-10,mug-10-sense)
is_a(mug-10-sense,mug.n.04)
has_sense(cup-12,cup-12-sense)
is_a(cup-12-sense,cup.n.01)
root(ROOT-0, put-1)
poss(tea_bag-3, your-2)
dobj(put-1, tea_bag-3)
nn(leaves-6, tea-5)
conj_or(tea_bag-3, leaves-6)
det(mug-10, the-8)
amod(mug-10, microwavable-9)
prep_inside(put-1, mug-10)
conj_or(mug-10, cup-12)
has_pos(put-1,VB)
has_pos(your-2,PRP$)
has_pos(tea_bag-3,NN)
has_pos(tea-5,NN)
has_pos(leaves-6,NNS)
has_pos(the-8,DT)
has_pos(microwavable-9,JJ)
has_pos(mug-10,NN)
has_pos(cup-12,NN)
has_sense(leaves-6, null)
has_sense(your-2, null)
has_sense(the-8, null)
has_sense(microwavable-9, null)
---
// put the slice of banana on one of the slice of bread .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(slice-3,slice-3-sense)
is_a(slice-3-sense,piece.n.08)
has_sense(banana-5,banana-5-sense)
is_a(banana-5-sense,banana.n.02)
has_sense(slice-10,slice-10-sense)
is_a(slice-10-sense,piece.n.08)
has_sense(bread-12,bread-12-sense)
is_a(bread-12-sense,bread.n.01)
root(ROOT-0, put-1)
det(slice-3, the-2)
dobj(put-1, slice-3)
prep_of(slice-3, banana-5)
prep_on(put-1, one-7)
det(slice-10, the-9)
prep_of(one-7, slice-10)
prep_of(slice-10, bread-12)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(slice-3,NN)
has_pos(banana-5,NN)
has_pos(one-7,CD)
has_pos(the-9,DT)
has_pos(slice-10,NN)
has_pos(bread-12,NN)
has_sense(the-2, null)
has_sense(one-7, null)
has_sense(the-9, null)
---
// put the salmon in a large bowl .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(salmon-3,salmon-3-sense)
is_a(salmon-3-sense,salmon.n.03)
has_sense(large-6,large-6-sense)
is_a(large-6-sense,large.a.01)
has_sense(bowl-7,bowl-7-sense)
is_a(bowl-7-sense,bowl.n.01)
root(ROOT-0, put-1)
det(salmon-3, the-2)
dobj(put-1, salmon-3)
det(bowl-7, a-5)
amod(bowl-7, large-6)
prep_in(salmon-3, bowl-7)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(salmon-3,NN)
has_pos(a-5,DT)
has_pos(large-6,JJ)
has_pos(bowl-7,NN)
has_sense(a-5, null)
has_sense(the-2, null)
---
// put in walnut .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(walnut-3,walnut-3-sense)
is_a(walnut-3-sense,walnut.n.01)
root(ROOT-0, put-1)
prep_in(put-1, walnut-3)
has_pos(put-1,VB)
has_pos(walnut-3,NN)
---
// put the three garlic_clove in with the onion .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(garlic_clove-4,garlic_clove-4-sense)
is_a(garlic_clove-4-sense,clove.n.03)
has_sense(onion-8,onion-8-sense)
is_a(onion-8-sense,onion.n.01)
root(ROOT-0, put-1)
det(garlic_clove-4, the-2)
num(garlic_clove-4, three-3)
dobj(put-1, garlic_clove-4)
prep(put-1, in-5)
pcomp(in-5, with-6)
det(onion-8, the-7)
pobj(with-6, onion-8)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(three-3,CD)
has_pos(garlic_clove-4,NN)
has_pos(in-5,IN)
has_pos(with-6,IN)
has_pos(the-7,DT)
has_pos(onion-8,NN)
has_sense(the-7, null)
has_sense(the-2, null)
has_sense(in-5, null)
has_sense(three-3, null)
has_sense(with-6, null)
---
// put the ham into a saucepan and cover with cold water .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(ham-3,ham-3-sense)
is_a(ham-3-sense,ham.n.01)
has_sense(saucepan-6,saucepan-6-sense)
is_a(saucepan-6-sense,saucepan.n.01)
has_sense(cover-8,cover-8-sense)
is_a(cover-8-sense,cover.v.01)
root(ROOT-0, put-1)
det(ham-3, the-2)
dobj(put-1, ham-3)
det(saucepan-6, a-5)
prep_into(put-1, saucepan-6)
conj_and(put-1, cover-8)
amod(water-11, cold-10)
prep_with(cover-8, water-11)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(ham-3,NN)
has_pos(a-5,DT)
has_pos(saucepan-6,NN)
has_pos(cover-8,VB)
has_pos(cold-10,JJ)
has_pos(water-11,NN)
has_sense(the-2, null)
has_sense(cold-10, null)
has_sense(water-11, null)
has_sense(a-5, null)
---
// take the chicken out of the bag , remove excess flour , and put them in the pan .
has_sense(take-1,take-1-sense)
is_a(take-1-sense,take.v.04)
has_sense(chicken-3,chicken-3-sense)
is_a(chicken-3-sense,chicken.n.01)
has_sense(bag-7,bag-7-sense)
is_a(bag-7-sense,bag.n.01)
has_sense(remove-9,remove-9-sense)
is_a(remove-9-sense,remove.v.01)
has_sense(excess-10,excess-10-sense)
is_a(excess-10-sense,excess.s.01)
has_sense(flour-11,flour-11-sense)
is_a(flour-11-sense,flour.n.01)
has_sense(put-14,put-14-sense)
is_a(put-14-sense,put.v.01)
has_sense(pan-18,pan-18-sense)
is_a(pan-18-sense,pan.n.01)
root(ROOT-0, take-1)
det(chicken-3, the-2)
dobj(take-1, chicken-3)
det(bag-7, the-6)
prep_out_of(take-1, bag-7)
conj_and(take-1, remove-9)
amod(flour-11, excess-10)
dobj(remove-9, flour-11)
conj_and(take-1, put-14)
dobj(put-14, them-15)
det(pan-18, the-17)
prep_in(put-14, pan-18)
has_pos(take-1,VB)
has_pos(the-2,DT)
has_pos(chicken-3,NN)
has_pos(the-6,DT)
has_pos(bag-7,NN)
has_pos(remove-9,VB)
has_pos(excess-10,JJ)
has_pos(flour-11,NN)
has_pos(put-14,VB)
has_pos(them-15,PRP)
has_pos(the-17,DT)
has_pos(pan-18,NN)
has_sense(the-6, null)
has_sense(the-2, null)
has_sense(them-15, null)
has_sense(the-17, null)
---
// put sausage and bacon on the top bun .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(sausage-2,sausage-2-sense)
is_a(sausage-2-sense,sausage.n.01)
has_sense(bacon-4,bacon-4-sense)
is_a(bacon-4-sense,bacon.n.01)
has_sense(top-7,top-7-sense)
is_a(top-7-sense,top.a.01)
has_sense(bun-8,bun-8-sense)
is_a(bun-8-sense,bun.n.01)
root(ROOT-0, put-1)
dobj(put-1, sausage-2)
conj_and(sausage-2, bacon-4)
det(bun-8, the-6)
amod(bun-8, top-7)
prep_on(put-1, bun-8)
has_pos(put-1,VB)
has_pos(sausage-2,NN)
has_pos(bacon-4,NN)
has_pos(the-6,DT)
has_pos(top-7,JJ)
has_pos(bun-8,NN)
has_sense(the-6, null)
---
// Crack the eggs and put them in the mug .
has_sense(eggs-3,eggs-3-sense)
is_a(eggs-3-sense,egg.n.02)
has_sense(put-5,put-5-sense)
is_a(put-5-sense,put.v.01)
has_sense(mug-9,mug-9-sense)
is_a(mug-9-sense,mug.n.04)
root(ROOT-0, Crack-1)
det(eggs-3, the-2)
dobj(Crack-1, eggs-3)
conj_and(Crack-1, put-5)
dobj(put-5, them-6)
det(mug-9, the-8)
prep_in(put-5, mug-9)
has_pos(Crack-1,VB)
has_pos(the-2,DT)
has_pos(eggs-3,NNS)
has_pos(put-5,VB)
has_pos(them-6,PRP)
has_pos(the-8,DT)
has_pos(mug-9,NN)
has_sense(Crack-1, null)
has_sense(them-6, null)
has_sense(the-8, null)
has_sense(the-2, null)
---
// If you have more batter , cook that up or cover and put in the fridge for tomorrow .
has_sense(have-3,have-3-sense)
is_a(have-3-sense,have.v.01)
has_sense(more-4,more-4-sense)
is_a(more-4-sense,more.a.02)
has_sense(batter-5,batter-5-sense)
is_a(batter-5-sense,batter.n.02)
has_sense(cook-7,cook-7-sense)
is_a(cook-7-sense,cook.v.02)
has_sense(cover-11,cover-11-sense)
is_a(cover-11-sense,cover.v.01)
has_sense(put-13,put-13-sense)
is_a(put-13-sense,put.v.01)
has_sense(fridge-16,fridge-16-sense)
is_a(fridge-16-sense,electric_refrigerator.n.01)
has_sense(tomorrow-18,tomorrow-18-sense)
is_a(tomorrow-18-sense,tomorrow.n.01)
mark(have-3, If-1)
nsubj(have-3, you-2)
advcl(cook-7, have-3)
amod(batter-5, more-4)
dobj(have-3, batter-5)
root(ROOT-0, cook-7)
dobj(cook-7, that-8)
prt(cook-7, up-9)
conj_or(cook-7, cover-11)
conj_and(cook-7, put-13)
det(fridge-16, the-15)
prep_in(put-13, fridge-16)
prep_for(fridge-16, tomorrow-18)
has_pos(If-1,IN)
has_pos(you-2,PRP)
has_pos(have-3,VBP)
has_pos(more-4,JJR)
has_pos(batter-5,NN)
has_pos(cook-7,VB)
has_pos(that-8,DT)
has_pos(up-9,RP)
has_pos(cover-11,VB)
has_pos(put-13,VB)
has_pos(the-15,DT)
has_pos(fridge-16,NN)
has_pos(tomorrow-18,NN)
has_sense(you-2, null)
has_sense(that-8, null)
has_sense(the-15, null)
has_sense(If-1, null)
has_sense(up-9, null)
---
// put 200g of shell macaroni in a dish and cover with water .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(macaroni-5,macaroni-5-sense)
is_a(macaroni-5-sense,macaroni.n.02)
has_sense(dish-8,dish-8-sense)
is_a(dish-8-sense,dish.n.01)
has_sense(water-12,water-12-sense)
is_a(water-12-sense,water.n.06)
root(ROOT-0, put-1)
dobj(put-1, 200g-2)
amod(macaroni-5, shell-4)
prep_of(200g-2, macaroni-5)
det(dish-8, a-7)
prep_in(put-1, dish-8)
conj_and(put-1, cover-10)
prep_with(cover-10, water-12)
has_pos(put-1,VB)
has_pos(200g-2,CD)
has_pos(shell-4,JJ)
has_pos(macaroni-5,NNS)
has_pos(a-7,DT)
has_pos(dish-8,NN)
has_pos(cover-10,VB)
has_pos(water-12,NN)
has_sense(cover-10, null)
has_sense(shell-4, null)
has_sense(200g-2, null)
has_sense(a-7, null)
---
// turn it over and stay with the 3 minutes and put on the plate !
has_sense(turn-1,turn-1-sense)
is_a(turn-1-sense,turn.v.04)
has_sense(stay-5,stay-5-sense)
is_a(stay-5-sense,stay.v.02)
has_sense(put-11,put-11-sense)
is_a(put-11-sense,put.v.01)
has_sense(plate-14,plate-14-sense)
is_a(plate-14-sense,plate.n.04)
root(ROOT-0, turn-1)
dobj(turn-1, it-2)
prt(turn-1, over-3)
conj_and(turn-1, stay-5)
det(minutes-9, the-7)
num(minutes-9, 3-8)
prep_with(stay-5, minutes-9)
conj_and(turn-1, put-11)
det(plate-14, the-13)
prep_on(put-11, plate-14)
has_pos(turn-1,VB)
has_pos(it-2,PRP)
has_pos(over-3,RP)
has_pos(stay-5,VB)
has_pos(the-7,DT)
has_pos(3-8,CD)
has_pos(minutes-9,NNS)
has_pos(put-11,VB)
has_pos(the-13,DT)
has_pos(plate-14,NN)
has_sense(over-3, null)
has_sense(the-7, null)
has_sense(minutes-9, null)
has_sense(3-8, null)
has_sense(it-2, null)
has_sense(the-13, null)
---
// put everything into the blender and process until thick .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(blender-5,blender-5-sense)
is_a(blender-5-sense,blender.n.01)
has_sense(process-7,process-7-sense)
is_a(process-7-sense,process.v.01)
has_sense(thick-9,thick-9-sense)
is_a(thick-9-sense,thick.a.01)
root(ROOT-0, put-1)
dobj(put-1, everything-2)
det(blender-5, the-4)
prep_into(put-1, blender-5)
conj_and(put-1, process-7)
prep_until(process-7, thick-9)
has_pos(put-1,VB)
has_pos(everything-2,NN)
has_pos(the-4,DT)
has_pos(blender-5,NN)
has_pos(process-7,VB)
has_pos(thick-9,JJ)
has_sense(the-4, null)
has_sense(everything-2, null)
---
// put more butter on the pan for the other side .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(more-2,more-2-sense)
is_a(more-2-sense,more.a.01)
has_sense(butter-3,butter-3-sense)
is_a(butter-3-sense,butter.n.01)
has_sense(pan-6,pan-6-sense)
is_a(pan-6-sense,pan.n.01)
has_sense(other-9,other-9-sense)
is_a(other-9-sense,other.a.01)
root(ROOT-0, put-1)
amod(butter-3, more-2)
dobj(put-1, butter-3)
det(pan-6, the-5)
prep_on(put-1, pan-6)
det(side-10, the-8)
amod(side-10, other-9)
prep_for(pan-6, side-10)
has_pos(put-1,VB)
has_pos(more-2,JJR)
has_pos(butter-3,NN)
has_pos(the-5,DT)
has_pos(pan-6,NN)
has_pos(the-8,DT)
has_pos(other-9,JJ)
has_pos(side-10,NN)
has_sense(the-5, null)
has_sense(the-8, null)
has_sense(side-10, null)
---
// put on some music if this help .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(music-4,music-4-sense)
is_a(music-4-sense,music.n.04)
has_sense(help-7,help-7-sense)
is_a(help-7-sense,help.v.02)
root(ROOT-0, put-1)
det(music-4, some-3)
prep_on(put-1, music-4)
mark(help-7, if-5)
nsubj(help-7, this-6)
advcl(put-1, help-7)
has_pos(put-1,VB)
has_pos(some-3,DT)
has_pos(music-4,NN)
has_pos(if-5,IN)
has_pos(this-6,DT)
has_pos(help-7,VBP)
has_sense(this-6, null)
has_sense(some-3, null)
has_sense(if-5, null)
---
// put about three scoop of vanilla ice_cream into a blender .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(scoop-4,scoop-4-sense)
is_a(scoop-4-sense,scoop.v.01)
has_sense(vanilla-6,vanilla-6-sense)
is_a(vanilla-6-sense,vanilla.n.02)
has_sense(ice_cream-7,ice_cream-7-sense)
is_a(ice_cream-7-sense,ice_cream.n.01)
has_sense(blender-10,blender-10-sense)
is_a(blender-10-sense,blender.n.01)
root(ROOT-0, put-1)
quantmod(scoop-4, about-2)
number(scoop-4, three-3)
dobj(put-1, scoop-4)
nn(ice_cream-7, vanilla-6)
prep_of(scoop-4, ice_cream-7)
det(blender-10, a-9)
prep_into(put-1, blender-10)
has_pos(put-1,VB)
has_pos(about-2,RB)
has_pos(three-3,CD)
has_pos(scoop-4,CD)
has_pos(vanilla-6,NN)
has_pos(ice_cream-7,NN)
has_pos(a-9,DT)
has_pos(blender-10,NN)
has_sense(three-3, null)
has_sense(a-9, null)
has_sense(about-2, null)
---
// put your skillet over medium heat for at least five minutes before you start .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(skillet-3,skillet-3-sense)
is_a(skillet-3-sense,frying_pan.n.01)
has_sense(medium-5,medium-5-sense)
is_a(medium-5-sense,medium.n.08)
has_sense(heat-6,heat-6-sense)
is_a(heat-6-sense,hotness.n.01)
has_sense(least-9,least-9-sense)
is_a(least-9-sense,least.a.01)
has_sense(start-14,start-14-sense)
is_a(start-14-sense,get_down.v.07)
root(ROOT-0, put-1)
poss(skillet-3, your-2)
dobj(put-1, skillet-3)
nn(heat-6, medium-5)
prep_over(put-1, heat-6)
quantmod(five-10, at-8)
mwe(at-8, least-9)
num(minutes-11, five-10)
prep_for(heat-6, minutes-11)
mark(start-14, before-12)
nsubj(start-14, you-13)
advcl(put-1, start-14)
has_pos(put-1,VB)
has_pos(your-2,PRP$)
has_pos(skillet-3,NN)
has_pos(medium-5,NN)
has_pos(heat-6,NN)
has_pos(at-8,IN)
has_pos(least-9,JJS)
has_pos(five-10,CD)
has_pos(minutes-11,NNS)
has_pos(before-12,IN)
has_pos(you-13,PRP)
has_pos(start-14,VBP)
has_sense(at-8, null)
has_sense(five-10, null)
has_sense(your-2, null)
has_sense(before-12, null)
has_sense(minutes-11, null)
has_sense(you-13, null)
---
// If it need a little longer , turn off the heat and put the lid on for 5 minutes .
has_sense(need-3,need-3-sense)
is_a(need-3-sense,want.v.02)
has_sense(little-5,little-5-sense)
is_a(little-5-sense,little.r.01)
has_sense(longer-6,longer-6-sense)
is_a(longer-6-sense,longer.r.01)
has_sense(turn-8,turn-8-sense)
is_a(turn-8-sense,turn.v.22)
has_sense(heat-11,heat-11-sense)
is_a(heat-11-sense,hotness.n.01)
has_sense(put-13,put-13-sense)
is_a(put-13-sense,put.v.01)
has_sense(lid-15,lid-15-sense)
is_a(lid-15-sense,lid.n.02)
mark(need-3, If-1)
nsubj(need-3, it-2)
advcl(turn-8, need-3)
det(little-5, a-4)
npadvmod(longer-6, little-5)
advmod(need-3, longer-6)
root(ROOT-0, turn-8)
prt(turn-8, off-9)
det(heat-11, the-10)
dobj(turn-8, heat-11)
conj_and(turn-8, put-13)
det(lid-15, the-14)
dobj(put-13, lid-15)
prep(put-13, on-16)
pcomp(on-16, for-17)
num(minutes-19, 5-18)
pobj(for-17, minutes-19)
has_pos(If-1,IN)
has_pos(it-2,PRP)
has_pos(need-3,VBP)
has_pos(a-4,DT)
has_pos(little-5,RB)
has_pos(longer-6,RBR)
has_pos(turn-8,VB)
has_pos(off-9,RP)
has_pos(the-10,DT)
has_pos(heat-11,NN)
has_pos(put-13,VB)
has_pos(the-14,DT)
has_pos(lid-15,NN)
has_pos(on-16,IN)
has_pos(for-17,IN)
has_pos(5-18,CD)
has_pos(minutes-19,NNS)
has_sense(on-16, null)
has_sense(5-18, null)
has_sense(minutes-19, null)
has_sense(off-9, null)
has_sense(it-2, null)
has_sense(for-17, null)
has_sense(If-1, null)
has_sense(the-14, null)
has_sense(a-4, null)
has_sense(the-10, null)
---
// put a coffee_filter in the filter basket .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(coffee_filter-3,coffee_filter-3-sense)
is_a(coffee_filter-3-sense,coffee_filter.n.01)
has_sense(filter-6,filter-6-sense)
is_a(filter-6-sense,filter.n.01)
has_sense(basket-7,basket-7-sense)
is_a(basket-7-sense,basket.n.01)
root(ROOT-0, put-1)
det(coffee_filter-3, a-2)
dobj(put-1, coffee_filter-3)
det(basket-7, the-5)
nn(basket-7, filter-6)
prep_in(coffee_filter-3, basket-7)
has_pos(put-1,VB)
has_pos(a-2,DT)
has_pos(coffee_filter-3,NN)
has_pos(the-5,DT)
has_pos(filter-6,NN)
has_pos(basket-7,NN)
has_sense(the-5, null)
has_sense(a-2, null)
---
// A minute later , put bacon cube into the stove .
has_sense(minute-2,minute-2-sense)
is_a(minute-2-sense,minute.n.01)
has_sense(later-3,later-3-sense)
is_a(later-3-sense,subsequently.r.01)
has_sense(put-5,put-5-sense)
is_a(put-5-sense,put.v.01)
has_sense(bacon-6,bacon-6-sense)
is_a(bacon-6-sense,bacon.n.01)
has_sense(cube-7,cube-7-sense)
is_a(cube-7-sense,cube.n.05)
has_sense(stove-10,stove-10-sense)
is_a(stove-10-sense,stove.n.01)
det(minute-2, A-1)
npadvmod(later-3, minute-2)
advmod(put-5, later-3)
root(ROOT-0, put-5)
nn(cube-7, bacon-6)
dobj(put-5, cube-7)
det(stove-10, the-9)
prep_into(put-5, stove-10)
has_pos(A-1,DT)
has_pos(minute-2,NN)
has_pos(later-3,RB)
has_pos(put-5,VB)
has_pos(bacon-6,NN)
has_pos(cube-7,NN)
has_pos(the-9,DT)
has_pos(stove-10,NN)
has_sense(A-1, null)
has_sense(the-9, null)
---
// put it on a plate and serve with a slice of tomato be you want .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(plate-5,plate-5-sense)
is_a(plate-5-sense,plate.n.04)
has_sense(serve-7,serve-7-sense)
is_a(serve-7-sense,serve.v.05)
has_sense(slice-10,slice-10-sense)
is_a(slice-10-sense,piece.n.08)
has_sense(tomato-12,tomato-12-sense)
is_a(tomato-12-sense,tomato.n.01)
has_sense(be-13,be-13-sense)
is_a(be-13-sense,be.v.01)
has_sense(want-15,want-15-sense)
is_a(want-15-sense,desire.v.01)
csubj(want-15, put-1)
dobj(put-1, it-2)
det(plate-5, a-4)
prep_on(put-1, plate-5)
conj_and(put-1, serve-7)
det(slice-10, a-9)
prep_with(serve-7, slice-10)
prep_of(slice-10, tomato-12)
cop(you-14, be-13)
ccomp(serve-7, you-14)
root(ROOT-0, want-15)
has_pos(put-1,VB)
has_pos(it-2,PRP)
has_pos(a-4,DT)
has_pos(plate-5,NN)
has_pos(serve-7,VB)
has_pos(a-9,DT)
has_pos(slice-10,NN)
has_pos(tomato-12,NN)
has_pos(be-13,VB)
has_pos(you-14,PRP)
has_pos(want-15,VBP)
has_sense(you-14, null)
has_sense(a-9, null)
has_sense(it-2, null)
has_sense(a-4, null)
---
// put some time into this .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(time-3,time-3-sense)
is_a(time-3-sense,time.n.02)
root(ROOT-0, put-1)
det(time-3, some-2)
dobj(put-1, time-3)
prep_into(put-1, this-5)
has_pos(put-1,VB)
has_pos(some-2,DT)
has_pos(time-3,NN)
has_pos(this-5,DT)
has_sense(this-5, null)
has_sense(some-2, null)
---
// put in 1 cup of ice put in 5 scoop vanilla ice_cream .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(cup-4,cup-4-sense)
is_a(cup-4-sense,cup.n.04)
has_sense(ice-6,ice-6-sense)
is_a(ice-6-sense,ice.n.01)
has_sense(put-7,put-7-sense)
is_a(put-7-sense,put.v.01)
has_sense(scoop-10,scoop-10-sense)
is_a(scoop-10-sense,scoop.n.01)
has_sense(vanilla-11,vanilla-11-sense)
is_a(vanilla-11-sense,vanilla.n.02)
has_sense(ice_cream-12,ice_cream-12-sense)
is_a(ice_cream-12-sense,ice_cream.n.01)
csubj(put-7, put-1)
num(cup-4, 1-3)
prep_in(put-1, cup-4)
prep_of(cup-4, ice-6)
root(ROOT-0, put-7)
number(vanilla-11, 5-9)
dep(vanilla-11, scoop-10)
amod(ice_cream-12, vanilla-11)
prep_in(put-7, ice_cream-12)
has_pos(put-1,VBN)
has_pos(1-3,CD)
has_pos(cup-4,NN)
has_pos(ice-6,NN)
has_pos(put-7,VBD)
has_pos(5-9,CD)
has_pos(scoop-10,NN)
has_pos(vanilla-11,NN)
has_pos(ice_cream-12,NN)
has_sense(1-3, null)
has_sense(5-9, null)
---
// put flour , cornstarch , sugar , and salt into a separate bowl .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(flour-2,flour-2-sense)
is_a(flour-2-sense,flour.n.01)
has_sense(cornstarch-4,cornstarch-4-sense)
is_a(cornstarch-4-sense,cornstarch.n.01)
has_sense(sugar-6,sugar-6-sense)
is_a(sugar-6-sense,sugar.n.01)
has_sense(salt-9,salt-9-sense)
is_a(salt-9-sense,salt.n.02)
has_sense(separate-12,separate-12-sense)
is_a(separate-12-sense,separate.a.01)
has_sense(bowl-13,bowl-13-sense)
is_a(bowl-13-sense,bowl.n.01)
root(ROOT-0, put-1)
nn(salt-9, flour-2)
conj_and(salt-9, cornstarch-4)
conj_and(salt-9, sugar-6)
dobj(put-1, salt-9)
det(bowl-13, a-11)
amod(bowl-13, separate-12)
prep_into(salt-9, bowl-13)
has_pos(put-1,VB)
has_pos(flour-2,NN)
has_pos(cornstarch-4,NN)
has_pos(sugar-6,NN)
has_pos(salt-9,NN)
has_pos(a-11,DT)
has_pos(separate-12,JJ)
has_pos(bowl-13,NN)
has_sense(a-11, null)
---
// This fill most the space up so when you put in your fruit it look great and does n't crush the low layer .
has_sense(fill-2,fill-2-sense)
is_a(fill-2-sense,fill.v.01)
has_sense(most-3,most-3-sense)
is_a(most-3-sense,about.r.07)
has_sense(space-5,space-5-sense)
is_a(space-5-sense,space.n.02)
has_sense(up-6,up-6-sense)
is_a(up-6-sense,up.r.01)
has_sense(so-7,so-7-sense)
is_a(so-7-sense,so.r.02)
has_sense(put-10,put-10-sense)
is_a(put-10-sense,put.v.01)
has_sense(fruit-13,fruit-13-sense)
is_a(fruit-13-sense,fruit.n.01)
has_sense(look-15,look-15-sense)
is_a(look-15-sense,look.v.02)
has_sense(great-16,great-16-sense)
is_a(great-16-sense,bang-up.s.01)
has_sense(low-22,low-22-sense)
is_a(low-22-sense,low.a.02)
has_sense(layer-23,layer-23-sense)
is_a(layer-23-sense,layer.n.01)
nsubj(fill-2, This-1)
root(ROOT-0, fill-2)
advmod(space-5, most-3)
det(space-5, the-4)
dobj(fill-2, space-5)
advmod(so-7, up-6)
advmod(fill-2, so-7)
advmod(put-10, when-8)
nsubj(put-10, you-9)
dep(so-7, put-10)
poss(fruit-13, your-12)
prep_in(look-15, fruit-13)
nsubj(look-15, it-14)
ccomp(put-10, look-15)
acomp(look-15, great-16)
aux(crush-20, does-18)
neg(crush-20, n't-19)
conj_and(look-15, crush-20)
det(layer-23, the-21)
amod(layer-23, low-22)
dobj(crush-20, layer-23)
has_pos(This-1,DT)
has_pos(fill-2,VBP)
has_pos(most-3,RB)
has_pos(the-4,DT)
has_pos(space-5,NN)
has_pos(up-6,RB)
has_pos(so-7,RB)
has_pos(when-8,WRB)
has_pos(you-9,PRP)
has_pos(put-10,VBD)
has_pos(your-12,PRP$)
has_pos(fruit-13,NN)
has_pos(it-14,PRP)
has_pos(look-15,VBP)
has_pos(great-16,JJ)
has_pos(does-18,VBZ)
has_pos(n't-19,RB)
has_pos(crush-20,VB)
has_pos(the-21,DT)
has_pos(low-22,JJ)
has_pos(layer-23,NN)
has_sense(when-8, null)
has_sense(it-14, null)
has_sense(the-4, null)
has_sense(does-18, null)
has_sense(This-1, null)
has_sense(you-9, null)
has_sense(crush-20, null)
has_sense(the-21, null)
has_sense(n't-19, null)
has_sense(your-12, null)
---
// put dry rice in the inner bowl .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(dry-2,dry-2-sense)
is_a(dry-2-sense,dry.a.01)
has_sense(rice-3,rice-3-sense)
is_a(rice-3-sense,rice.n.01)
has_sense(inner-6,inner-6-sense)
is_a(inner-6-sense,inner.a.02)
has_sense(bowl-7,bowl-7-sense)
is_a(bowl-7-sense,bowl.n.01)
root(ROOT-0, put-1)
amod(rice-3, dry-2)
dobj(put-1, rice-3)
det(bowl-7, the-5)
amod(bowl-7, inner-6)
prep_in(put-1, bowl-7)
has_pos(put-1,VB)
has_pos(dry-2,JJ)
has_pos(rice-3,NN)
has_pos(the-5,DT)
has_pos(inner-6,JJ)
has_pos(bowl-7,NN)
has_sense(the-5, null)
---
// put in 1 cup ice .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(cup-4,cup-4-sense)
is_a(cup-4-sense,cup.n.04)
has_sense(ice-5,ice-5-sense)
is_a(ice-5-sense,ice.n.01)
root(ROOT-0, put-1)
num(ice-5, 1-3)
nn(ice-5, cup-4)
prep_in(put-1, ice-5)
has_pos(put-1,VB)
has_pos(1-3,CD)
has_pos(cup-4,NN)
has_pos(ice-5,NN)
has_sense(1-3, null)
---
// After get the walnut meat out of the shell , put it together in a small bowl .
has_sense(get-2,get-2-sense)
is_a(get-2-sense,get.v.01)
has_sense(walnut-4,walnut-4-sense)
is_a(walnut-4-sense,walnut.n.01)
has_sense(meat-5,meat-5-sense)
is_a(meat-5-sense,kernel.n.01)
has_sense(shell-9,shell-9-sense)
is_a(shell-9-sense,shell.n.04)
has_sense(put-11,put-11-sense)
is_a(put-11-sense,put.v.01)
has_sense(together-13,together-13-sense)
is_a(together-13-sense,together.r.01)
has_sense(bowl-17,bowl-17-sense)
is_a(bowl-17-sense,bowl.n.01)
mark(get-2, After-1)
advcl(put-11, get-2)
det(meat-5, the-3)
amod(meat-5, walnut-4)
dobj(get-2, meat-5)
det(shell-9, the-8)
prep_out_of(get-2, shell-9)
root(ROOT-0, put-11)
dobj(put-11, it-12)
advmod(put-11, together-13)
det(bowl-17, a-15)
amod(bowl-17, small-16)
prep_in(put-11, bowl-17)
has_pos(After-1,IN)
has_pos(get-2,VBP)
has_pos(the-3,DT)
has_pos(walnut-4,JJ)
has_pos(meat-5,NN)
has_pos(the-8,DT)
has_pos(shell-9,NN)
has_pos(put-11,VB)
has_pos(it-12,PRP)
has_pos(together-13,RB)
has_pos(a-15,DT)
has_pos(small-16,JJ)
has_pos(bowl-17,NN)
has_sense(a-15, null)
has_sense(After-1, null)
has_sense(the-3, null)
has_sense(the-8, null)
has_sense(small-16, null)
has_sense(it-12, null)
---
// put some butter in the pan , and melt it .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(butter-3,butter-3-sense)
is_a(butter-3-sense,butter.n.01)
has_sense(pan-6,pan-6-sense)
is_a(pan-6-sense,pan.n.01)
has_sense(melt-9,melt-9-sense)
is_a(melt-9-sense,melt.v.01)
root(ROOT-0, put-1)
det(butter-3, some-2)
dobj(put-1, butter-3)
det(pan-6, the-5)
prep_in(butter-3, pan-6)
conj_and(put-1, melt-9)
dobj(melt-9, it-10)
has_pos(put-1,VB)
has_pos(some-2,DT)
has_pos(butter-3,NN)
has_pos(the-5,DT)
has_pos(pan-6,NN)
has_pos(melt-9,VB)
has_pos(it-10,PRP)
has_sense(the-5, null)
has_sense(it-10, null)
has_sense(some-2, null)
---
// fold the omelet in half and put it onto a plate .
has_sense(fold-1,fold-1-sense)
is_a(fold-1-sense,fold.v.01)
has_sense(omelet-3,omelet-3-sense)
is_a(omelet-3-sense,omelet.n.01)
has_sense(half-5,half-5-sense)
is_a(half-5-sense,one-half.n.01)
has_sense(put-7,put-7-sense)
is_a(put-7-sense,put.v.01)
has_sense(plate-11,plate-11-sense)
is_a(plate-11-sense,plate.n.04)
root(ROOT-0, fold-1)
det(omelet-3, the-2)
dobj(fold-1, omelet-3)
prep_in(omelet-3, half-5)
conj_and(fold-1, put-7)
dobj(put-7, it-8)
det(plate-11, a-10)
prep_onto(put-7, plate-11)
has_pos(fold-1,VB)
has_pos(the-2,DT)
has_pos(omelet-3,NN)
has_pos(half-5,NN)
has_pos(put-7,VB)
has_pos(it-8,PRP)
has_pos(a-10,DT)
has_pos(plate-11,NN)
has_sense(a-10, null)
has_sense(it-8, null)
has_sense(the-2, null)
---
// quarter the onion and put it all inside the turkey .
has_sense(quarter-1,quarter-1-sense)
is_a(quarter-1-sense,quarter.v.03)
has_sense(onion-3,onion-3-sense)
is_a(onion-3-sense,onion.n.01)
has_sense(put-5,put-5-sense)
is_a(put-5-sense,put.v.01)
has_sense(turkey-10,turkey-10-sense)
is_a(turkey-10-sense,turkey.n.04)
root(ROOT-0, quarter-1)
det(onion-3, the-2)
dep(quarter-1, onion-3)
conj_and(onion-3, put-5)
dep(onion-3, it-6)
dep(quarter-1, all-7)
det(turkey-10, the-9)
prep_inside(all-7, turkey-10)
has_pos(quarter-1,NN)
has_pos(the-2,DT)
has_pos(onion-3,NN)
has_pos(put-5,NN)
has_pos(it-6,PRP)
has_pos(all-7,DT)
has_pos(the-9,DT)
has_pos(turkey-10,NN)
has_sense(the-2, null)
has_sense(the-9, null)
has_sense(it-6, null)
has_sense(all-7, null)
---
// put peanut_butter on both slice of bread .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(peanut_butter-2,peanut_butter-2-sense)
is_a(peanut_butter-2-sense,peanut_butter.n.01)
has_sense(slice-5,slice-5-sense)
is_a(slice-5-sense,piece.n.08)
has_sense(bread-7,bread-7-sense)
is_a(bread-7-sense,bread.n.01)
root(ROOT-0, put-1)
dobj(put-1, peanut_butter-2)
det(slice-5, both-4)
prep_on(put-1, slice-5)
prep_of(slice-5, bread-7)
has_pos(put-1,VB)
has_pos(peanut_butter-2,NN)
has_pos(both-4,DT)
has_pos(slice-5,NN)
has_pos(bread-7,NN)
has_sense(both-4, null)
---
// put the liquid into the machine first .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(liquid-3,liquid-3-sense)
is_a(liquid-3-sense,liquid.n.01)
has_sense(machine-6,machine-6-sense)
is_a(machine-6-sense,machine.n.01)
has_sense(first-7,first-7-sense)
is_a(first-7-sense,first.a.01)
root(ROOT-0, put-1)
det(liquid-3, the-2)
dobj(put-1, liquid-3)
det(machine-6, the-5)
prep_into(put-1, machine-6)
amod(machine-6, first-7)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(liquid-3,NN)
has_pos(the-5,DT)
has_pos(machine-6,NN)
has_pos(first-7,JJ)
has_sense(the-5, null)
has_sense(the-2, null)
---
// put the dough on a plate and make a bottom .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(dough-3,dough-3-sense)
is_a(dough-3-sense,dough.n.01)
has_sense(plate-6,plate-6-sense)
is_a(plate-6-sense,plate.n.04)
has_sense(bottom-10,bottom-10-sense)
is_a(bottom-10-sense,bottom.n.02)
root(ROOT-0, put-1)
det(dough-3, the-2)
dobj(put-1, dough-3)
det(plate-6, a-5)
prep_on(put-1, plate-6)
conj_and(put-1, make-8)
det(bottom-10, a-9)
dobj(make-8, bottom-10)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(dough-3,NN)
has_pos(a-5,DT)
has_pos(plate-6,NN)
has_pos(make-8,VB)
has_pos(a-9,DT)
has_pos(bottom-10,NN)
has_sense(the-2, null)
has_sense(make-8, null)
has_sense(a-9, null)
has_sense(a-5, null)
---
// put the eggs very gently in an empty pot .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(eggs-3,eggs-3-sense)
is_a(eggs-3-sense,egg.n.02)
has_sense(very-4,very-4-sense)
is_a(very-4-sense,very.r.01)
has_sense(empty-8,empty-8-sense)
is_a(empty-8-sense,empty.a.01)
has_sense(pot-9,pot-9-sense)
is_a(pot-9-sense,pot.n.01)
root(ROOT-0, put-1)
det(eggs-3, the-2)
dobj(put-1, eggs-3)
advmod(gently-5, very-4)
advmod(put-1, gently-5)
det(pot-9, an-7)
amod(pot-9, empty-8)
prep_in(put-1, pot-9)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(eggs-3,NNS)
has_pos(very-4,RB)
has_pos(gently-5,RB)
has_pos(an-7,DT)
has_pos(empty-8,JJ)
has_pos(pot-9,NN)
has_sense(gently-5, null)
has_sense(the-2, null)
has_sense(an-7, null)
---
// put in 1\/4 cup of chocolate_syrup .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(chocolate_syrup-6,chocolate_syrup-6-sense)
is_a(chocolate_syrup-6-sense,chocolate_sauce.n.01)
root(ROOT-0, put-1)
num(cup-4, 1\/4-3)
prep_in(put-1, cup-4)
prep_of(cup-4, chocolate_syrup-6)
has_pos(put-1,VB)
has_pos(1\/4-3,CD)
has_pos(cup-4,NN)
has_pos(chocolate_syrup-6,NN)
has_sense(cup-4, null)
has_sense(1\/4-3, null)
---
// put in a spoonful of cold custard .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(spoonful-4,spoonful-4-sense)
is_a(spoonful-4-sense,spoon.n.02)
has_sense(cold-6,cold-6-sense)
is_a(cold-6-sense,cold.a.01)
has_sense(custard-7,custard-7-sense)
is_a(custard-7-sense,custard.n.01)
root(ROOT-0, put-1)
det(spoonful-4, a-3)
prep_in(put-1, spoonful-4)
amod(custard-7, cold-6)
prep_of(spoonful-4, custard-7)
has_pos(put-1,VB)
has_pos(a-3,DT)
has_pos(spoonful-4,NN)
has_pos(cold-6,JJ)
has_pos(custard-7,NN)
has_sense(a-3, null)
---
// put the skillet by a plug on a slightly tilted surface .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(skillet-3,skillet-3-sense)
is_a(skillet-3-sense,frying_pan.n.01)
has_sense(plug-6,plug-6-sense)
is_a(plug-6-sense,plug.n.05)
has_sense(slightly-9,slightly-9-sense)
is_a(slightly-9-sense,slightly.r.01)
has_sense(tilted-10,tilted-10-sense)
is_a(tilted-10-sense,atilt.s.01)
has_sense(surface-11,surface-11-sense)
is_a(surface-11-sense,surface.n.01)
root(ROOT-0, put-1)
det(skillet-3, the-2)
dobj(put-1, skillet-3)
det(plug-6, a-5)
prep_by(put-1, plug-6)
det(surface-11, a-8)
advmod(surface-11, slightly-9)
amod(surface-11, tilted-10)
prep_on(plug-6, surface-11)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(skillet-3,NN)
has_pos(a-5,DT)
has_pos(plug-6,NN)
has_pos(a-8,DT)
has_pos(slightly-9,RB)
has_pos(tilted-10,JJ)
has_pos(surface-11,NN)
has_sense(the-2, null)
has_sense(a-8, null)
has_sense(a-5, null)
---
// put a layer of baking paper across a baking_tray .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(layer-3,layer-3-sense)
is_a(layer-3-sense,layer.n.01)
has_sense(paper-6,paper-6-sense)
is_a(paper-6-sense,paper.n.01)
has_sense(baking_tray-9,baking_tray-9-sense)
is_a(baking_tray-9-sense,cookie_sheet.n.01)
root(ROOT-0, put-1)
det(layer-3, a-2)
dobj(put-1, layer-3)
amod(paper-6, baking-5)
prep_of(layer-3, paper-6)
det(baking_tray-9, a-8)
prep_across(put-1, baking_tray-9)
has_pos(put-1,VB)
has_pos(a-2,DT)
has_pos(layer-3,NN)
has_pos(baking-5,JJ)
has_pos(paper-6,NN)
has_pos(a-8,DT)
has_pos(baking_tray-9,NN)
has_sense(a-8, null)
has_sense(a-2, null)
has_sense(baking-5, null)
---
// put some butter on the bagel .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(butter-3,butter-3-sense)
is_a(butter-3-sense,butter.n.01)
has_sense(bagel-6,bagel-6-sense)
is_a(bagel-6-sense,bagel.n.01)
root(ROOT-0, put-1)
det(butter-3, some-2)
dobj(put-1, butter-3)
det(bagel-6, the-5)
prep_on(put-1, bagel-6)
has_pos(put-1,VB)
has_pos(some-2,DT)
has_pos(butter-3,NN)
has_pos(the-5,DT)
has_pos(bagel-6,NN)
has_sense(the-5, null)
has_sense(some-2, null)
---
// warm the pan on high until warm and put butter or cooking spray on it so the pancake wo n't stick .
has_sense(warm-1,warm-1-sense)
is_a(warm-1-sense,warm.v.02)
has_sense(pan-3,pan-3-sense)
is_a(pan-3-sense,pan.n.01)
has_sense(high-5,high-5-sense)
is_a(high-5-sense,high.a.01)
has_sense(warm-7,warm-7-sense)
is_a(warm-7-sense,warm.a.01)
has_sense(put-9,put-9-sense)
is_a(put-9-sense,put.v.01)
has_sense(butter-10,butter-10-sense)
is_a(butter-10-sense,butter.n.01)
has_sense(cooking-12,cooking-12-sense)
is_a(cooking-12-sense,cooking.n.01)
has_sense(spray-13,spray-13-sense)
is_a(spray-13-sense,atomizer.n.01)
has_sense(pancake-18,pancake-18-sense)
is_a(pancake-18-sense,pancake.n.01)
has_sense(stick-21,stick-21-sense)
is_a(stick-21-sense,stick.v.04)
root(ROOT-0, warm-1)
det(pan-3, the-2)
dobj(warm-1, pan-3)
prep_on(warm-1, high-5)
prep_until(high-5, warm-7)
conj_and(warm-1, put-9)
nn(spray-13, butter-10)
conj_or(butter-10, cooking-12)
dobj(put-9, spray-13)
prep_on(put-9, it-15)
mark(stick-21, so-16)
det(pancake-18, the-17)
nsubj(stick-21, pancake-18)
aux(stick-21, wo-19)
neg(stick-21, n't-20)
advcl(put-9, stick-21)
has_pos(warm-1,VB)
has_pos(the-2,DT)
has_pos(pan-3,NN)
has_pos(high-5,JJ)
has_pos(warm-7,JJ)
has_pos(put-9,VB)
has_pos(butter-10,NN)
has_pos(cooking-12,NN)
has_pos(spray-13,NN)
has_pos(it-15,PRP)
has_pos(so-16,IN)
has_pos(the-17,DT)
has_pos(pancake-18,NN)
has_pos(wo-19,MD)
has_pos(n't-20,RB)
has_pos(stick-21,VB)
has_sense(it-15, null)
has_sense(wo-19, null)
has_sense(the-2, null)
has_sense(so-16, null)
has_sense(n't-20, null)
has_sense(the-17, null)
---
// put a hand full of tea leaves in the pot .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(hand-3,hand-3-sense)
is_a(hand-3-sense,hand.n.01)
has_sense(full-4,full-4-sense)
is_a(full-4-sense,full.a.01)
has_sense(tea-6,tea-6-sense)
is_a(tea-6-sense,tea.n.05)
has_sense(pot-10,pot-10-sense)
is_a(pot-10-sense,pot.n.01)
root(ROOT-0, put-1)
det(hand-3, a-2)
dobj(put-1, hand-3)
dep(hand-3, full-4)
nn(leaves-7, tea-6)
prep_of(hand-3, leaves-7)
det(pot-10, the-9)
prep_in(leaves-7, pot-10)
has_pos(put-1,VB)
has_pos(a-2,DT)
has_pos(hand-3,NN)
has_pos(full-4,JJ)
has_pos(tea-6,NN)
has_pos(leaves-7,NNS)
has_pos(the-9,DT)
has_pos(pot-10,NN)
has_sense(leaves-7, null)
has_sense(the-9, null)
has_sense(a-2, null)
---
// The aim of this illusion be to put the fruit in so you do n't see the bowl behind it .
has_sense(illusion-5,illusion-5-sense)
is_a(illusion-5-sense,delusion.n.03)
has_sense(be-6,be-6-sense)
is_a(be-6-sense,be.v.01)
has_sense(put-8,put-8-sense)
is_a(put-8-sense,put.v.01)
has_sense(fruit-10,fruit-10-sense)
is_a(fruit-10-sense,fruit.n.01)
has_sense(see-16,see-16-sense)
is_a(see-16-sense,see.v.01)
has_sense(bowl-18,bowl-18-sense)
is_a(bowl-18-sense,bowl.n.01)
det(aim-2, The-1)
nsubj(be-6, aim-2)
det(illusion-5, this-4)
prep_of(aim-2, illusion-5)
root(ROOT-0, be-6)
aux(put-8, to-7)
xcomp(be-6, put-8)
det(fruit-10, the-9)
dobj(put-8, fruit-10)
mark(see-16, so-12)
nsubj(see-16, you-13)
aux(see-16, do-14)
neg(see-16, n't-15)
prepc_in(fruit-10, see-16)
det(bowl-18, the-17)
dobj(see-16, bowl-18)
prep_behind(see-16, it-20)
has_pos(The-1,DT)
has_pos(aim-2,NN)
has_pos(this-4,DT)
has_pos(illusion-5,NN)
has_pos(be-6,VB)
has_pos(to-7,TO)
has_pos(put-8,VB)
has_pos(the-9,DT)
has_pos(fruit-10,NN)
has_pos(so-12,IN)
has_pos(you-13,PRP)
has_pos(do-14,VBP)
has_pos(n't-15,RB)
has_pos(see-16,VB)
has_pos(the-17,DT)
has_pos(bowl-18,NN)
has_pos(it-20,PRP)
has_sense(so-12, null)
has_sense(do-14, null)
has_sense(The-1, null)
has_sense(this-4, null)
has_sense(aim-2, null)
has_sense(the-9, null)
has_sense(to-7, null)
has_sense(n't-15, null)
has_sense(it-20, null)
has_sense(the-17, null)
has_sense(you-13, null)
---
// put all of the ingredient in a blender .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(ingredient-5,ingredient-5-sense)
is_a(ingredient-5-sense,ingredient.n.03)
has_sense(blender-8,blender-8-sense)
is_a(blender-8-sense,blender.n.01)
root(ROOT-0, put-1)
dobj(put-1, all-2)
det(ingredient-5, the-4)
prep_of(all-2, ingredient-5)
det(blender-8, a-7)
prep_in(ingredient-5, blender-8)
has_pos(put-1,VB)
has_pos(all-2,DT)
has_pos(the-4,DT)
has_pos(ingredient-5,NN)
has_pos(a-7,DT)
has_pos(blender-8,NN)
has_sense(the-4, null)
has_sense(all-2, null)
has_sense(a-7, null)
---
// put the juice in a container .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(juice-3,juice-3-sense)
is_a(juice-3-sense,juice.n.01)
has_sense(container-6,container-6-sense)
is_a(container-6-sense,container.n.01)
root(ROOT-0, put-1)
det(juice-3, the-2)
dobj(put-1, juice-3)
det(container-6, a-5)
prep_in(juice-3, container-6)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(juice-3,NN)
has_pos(a-5,DT)
has_pos(container-6,NN)
has_sense(a-5, null)
has_sense(the-2, null)
---
// chop 4 Strawberries in half and put in blender .
has_sense(chop-1,chop-1-sense)
is_a(chop-1-sense,chop.v.01)
has_sense(half-5,half-5-sense)
is_a(half-5-sense,one-half.n.01)
has_sense(put-7,put-7-sense)
is_a(put-7-sense,put.v.01)
has_sense(blender-9,blender-9-sense)
is_a(blender-9-sense,blender.n.01)
root(ROOT-0, chop-1)
num(Strawberries-3, 4-2)
dobj(chop-1, Strawberries-3)
prep_in(Strawberries-3, half-5)
conj_and(chop-1, put-7)
prep_in(put-7, blender-9)
has_pos(chop-1,VB)
has_pos(4-2,CD)
has_pos(Strawberries-3,NNS)
has_pos(half-5,NN)
has_pos(put-7,VB)
has_pos(blender-9,NN)
has_sense(4-2, null)
has_sense(Strawberries-3, null)
---
// The truffle should be set after about one hour of be put aside .
has_sense(truffle-2,truffle-2-sense)
is_a(truffle-2-sense,truffle.n.02)
has_sense(be-4,be-4-sense)
is_a(be-4-sense,be.v.01)
has_sense(set-5,set-5-sense)
is_a(set-5-sense,jell.v.01)
has_sense(about-7,about-7-sense)
is_a(about-7-sense,approximately.r.01)
has_sense(hour-9,hour-9-sense)
is_a(hour-9-sense,hour.n.01)
has_sense(be-11,be-11-sense)
is_a(be-11-sense,be.v.01)
has_sense(put-12,put-12-sense)
is_a(put-12-sense,put.v.01)
has_sense(aside-13,aside-13-sense)
is_a(aside-13-sense,aside.r.01)
det(truffle-2, The-1)
nsubjpass(set-5, truffle-2)
aux(set-5, should-3)
auxpass(set-5, be-4)
root(ROOT-0, set-5)
quantmod(hour-9, about-7)
number(hour-9, one-8)
prep_after(set-5, hour-9)
prep(hour-9, of-10)
auxpass(put-12, be-11)
dep(of-10, put-12)
advmod(put-12, aside-13)
has_pos(The-1,DT)
has_pos(truffle-2,NN)
has_pos(should-3,MD)
has_pos(be-4,VB)
has_pos(set-5,VBN)
has_pos(about-7,RB)
has_pos(one-8,CD)
has_pos(hour-9,NN)
has_pos(of-10,IN)
has_pos(be-11,VB)
has_pos(put-12,VBN)
has_pos(aside-13,RB)
has_sense(The-1, null)
has_sense(one-8, null)
has_sense(of-10, null)
has_sense(should-3, null)
---
// pour omelette onto plate and put omelette back into fry pan on uncooked side .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(omelette-2,omelette-2-sense)
is_a(omelette-2-sense,omelet.n.01)
has_sense(plate-4,plate-4-sense)
is_a(plate-4-sense,plate.n.04)
has_sense(put-6,put-6-sense)
is_a(put-6-sense,put.v.01)
has_sense(omelette-7,omelette-7-sense)
is_a(omelette-7-sense,omelet.n.01)
has_sense(pan-11,pan-11-sense)
is_a(pan-11-sense,pan.n.01)
has_sense(uncooked-13,uncooked-13-sense)
is_a(uncooked-13-sense,uncooked.s.01)
root(ROOT-0, pour-1)
dobj(pour-1, omelette-2)
prep_onto(pour-1, plate-4)
conj_and(pour-1, put-6)
dobj(put-6, omelette-7)
prt(put-6, back-8)
nn(pan-11, fry-10)
prep_into(put-6, pan-11)
amod(side-14, uncooked-13)
prep_on(pan-11, side-14)
has_pos(pour-1,VB)
has_pos(omelette-2,NN)
has_pos(plate-4,NN)
has_pos(put-6,VB)
has_pos(omelette-7,NN)
has_pos(back-8,RP)
has_pos(fry-10,NN)
has_pos(pan-11,NNS)
has_pos(uncooked-13,JJ)
has_pos(side-14,NN)
has_sense(back-8, null)
has_sense(side-14, null)
has_sense(fry-10, null)
---
// put your favorite type of cheese in it .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(favorite-3,favorite-3-sense)
is_a(favorite-3-sense,favored.s.01)
has_sense(type-4,type-4-sense)
is_a(type-4-sense,type.n.01)
has_sense(cheese-6,cheese-6-sense)
is_a(cheese-6-sense,cheese.n.01)
root(ROOT-0, put-1)
poss(type-4, your-2)
amod(type-4, favorite-3)
dobj(put-1, type-4)
prep_of(type-4, cheese-6)
prep_in(cheese-6, it-8)
has_pos(put-1,VB)
has_pos(your-2,PRP$)
has_pos(favorite-3,JJ)
has_pos(type-4,NN)
has_pos(cheese-6,NN)
has_pos(it-8,PRP)
has_sense(it-8, null)
has_sense(your-2, null)
---
// peel the potato and shred them into small pieces and put them into a bowl .
has_sense(peel-1,peel-1-sense)
is_a(peel-1-sense,skin.v.04)
has_sense(potato-3,potato-3-sense)
is_a(potato-3-sense,potato.n.01)
has_sense(shred-5,shred-5-sense)
is_a(shred-5-sense,shred.v.01)
has_sense(small-8,small-8-sense)
is_a(small-8-sense,small.a.01)
has_sense(put-11,put-11-sense)
is_a(put-11-sense,put.v.01)
has_sense(bowl-15,bowl-15-sense)
is_a(bowl-15-sense,bowl.n.01)
root(ROOT-0, peel-1)
det(potato-3, the-2)
dobj(peel-1, potato-3)
conj_and(peel-1, shred-5)
dobj(shred-5, them-6)
amod(pieces-9, small-8)
prep_into(shred-5, pieces-9)
conj_and(peel-1, put-11)
dobj(put-11, them-12)
det(bowl-15, a-14)
prep_into(put-11, bowl-15)
has_pos(peel-1,VB)
has_pos(the-2,DT)
has_pos(potato-3,NN)
has_pos(shred-5,VB)
has_pos(them-6,PRP)
has_pos(small-8,JJ)
has_pos(pieces-9,NNS)
has_pos(put-11,VB)
has_pos(them-12,PRP)
has_pos(a-14,DT)
has_pos(bowl-15,NN)
has_sense(the-2, null)
has_sense(a-14, null)
has_sense(them-6, null)
has_sense(them-12, null)
has_sense(pieces-9, null)
---
// put the pan over medium-high heat add the scallop when the oil be heated .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(pan-3,pan-3-sense)
is_a(pan-3-sense,pan.n.01)
has_sense(heat-6,heat-6-sense)
is_a(heat-6-sense,hotness.n.01)
has_sense(add-7,add-7-sense)
is_a(add-7-sense,add.v.01)
has_sense(scallop-9,scallop-9-sense)
is_a(scallop-9-sense,scallop.n.02)
has_sense(oil-12,oil-12-sense)
is_a(oil-12-sense,vegetable_oil.n.01)
has_sense(be-13,be-13-sense)
is_a(be-13-sense,be.v.01)
has_sense(heated-14,heated-14-sense)
is_a(heated-14-sense,heated.s.01)
root(ROOT-0, put-1)
det(pan-3, the-2)
nsubj(add-7, pan-3)
amod(heat-6, medium-high-5)
prep_over(pan-3, heat-6)
ccomp(put-1, add-7)
det(scallop-9, the-8)
dobj(add-7, scallop-9)
advmod(heated-14, when-10)
det(oil-12, the-11)
nsubjpass(heated-14, oil-12)
auxpass(heated-14, be-13)
advcl(add-7, heated-14)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(pan-3,NN)
has_pos(medium-high-5,JJ)
has_pos(heat-6,NN)
has_pos(add-7,VB)
has_pos(the-8,DT)
has_pos(scallop-9,NN)
has_pos(when-10,WRB)
has_pos(the-11,DT)
has_pos(oil-12,NN)
has_pos(be-13,VB)
has_pos(heated-14,VBN)
has_sense(the-2, null)
has_sense(the-8, null)
has_sense(medium-high-5, null)
has_sense(when-10, null)
has_sense(the-11, null)
---
// put about 1\/8 of an inch of the extra virgin olive_oil in the bottom of the pan .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(about-2,about-2-sense)
is_a(about-2-sense,approximately.r.01)
has_sense(inch-6,inch-6-sense)
is_a(inch-6-sense,inch.n.01)
has_sense(extra-9,extra-9-sense)
is_a(extra-9-sense,excess.s.01)
has_sense(virgin-10,virgin-10-sense)
is_a(virgin-10-sense,virgin.s.01)
has_sense(olive_oil-11,olive_oil-11-sense)
is_a(olive_oil-11-sense,olive_oil.n.01)
has_sense(bottom-14,bottom-14-sense)
is_a(bottom-14-sense,bottom.n.02)
has_sense(pan-17,pan-17-sense)
is_a(pan-17-sense,pan.n.01)
root(ROOT-0, put-1)
quantmod(1\/8-3, about-2)
dobj(put-1, 1\/8-3)
det(inch-6, an-5)
prep_of(1\/8-3, inch-6)
det(olive_oil-11, the-8)
amod(olive_oil-11, extra-9)
amod(olive_oil-11, virgin-10)
prep_of(inch-6, olive_oil-11)
det(bottom-14, the-13)
prep_in(olive_oil-11, bottom-14)
det(pan-17, the-16)
prep_of(bottom-14, pan-17)
has_pos(put-1,VB)
has_pos(about-2,RB)
has_pos(1\/8-3,CD)
has_pos(an-5,DT)
has_pos(inch-6,NN)
has_pos(the-8,DT)
has_pos(extra-9,JJ)
has_pos(virgin-10,JJ)
has_pos(olive_oil-11,NN)
has_pos(the-13,DT)
has_pos(bottom-14,NN)
has_pos(the-16,DT)
has_pos(pan-17,NN)
has_sense(the-8, null)
has_sense(1\/8-3, null)
has_sense(the-16, null)
has_sense(an-5, null)
has_sense(the-13, null)
---
// put the lard back into the pan and slip the other side of the fish in the pan .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(lard-3,lard-3-sense)
is_a(lard-3-sense,lard.n.01)
has_sense(pan-7,pan-7-sense)
is_a(pan-7-sense,pan.n.01)
has_sense(slip-9,slip-9-sense)
is_a(slip-9-sense,slip.v.05)
has_sense(other-11,other-11-sense)
is_a(other-11-sense,other.a.01)
has_sense(side-12,side-12-sense)
is_a(side-12-sense,side.n.04)
has_sense(fish-15,fish-15-sense)
is_a(fish-15-sense,fish.n.02)
has_sense(pan-18,pan-18-sense)
is_a(pan-18-sense,pan.n.01)
root(ROOT-0, put-1)
det(lard-3, the-2)
dobj(put-1, lard-3)
prt(put-1, back-4)
det(pan-7, the-6)
prep_into(put-1, pan-7)
conj_and(put-1, slip-9)
det(side-12, the-10)
amod(side-12, other-11)
dobj(slip-9, side-12)
det(fish-15, the-14)
prep_of(side-12, fish-15)
det(pan-18, the-17)
prep_in(fish-15, pan-18)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(lard-3,NN)
has_pos(back-4,RP)
has_pos(the-6,DT)
has_pos(pan-7,NN)
has_pos(slip-9,VB)
has_pos(the-10,DT)
has_pos(other-11,JJ)
has_pos(side-12,NN)
has_pos(the-14,DT)
has_pos(fish-15,NN)
has_pos(the-17,DT)
has_pos(pan-18,NN)
has_sense(the-6, null)
has_sense(the-2, null)
has_sense(back-4, null)
has_sense(the-17, null)
has_sense(the-14, null)
has_sense(the-10, null)
---
// put some baking paper in a pie pan .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(paper-4,paper-4-sense)
is_a(paper-4-sense,paper.n.01)
has_sense(pie-7,pie-7-sense)
is_a(pie-7-sense,pie.n.01)
has_sense(pan-8,pan-8-sense)
is_a(pan-8-sense,pan.n.01)
root(ROOT-0, put-1)
det(paper-4, some-2)
amod(paper-4, baking-3)
dobj(put-1, paper-4)
det(pan-8, a-6)
nn(pan-8, pie-7)
prep_in(put-1, pan-8)
has_pos(put-1,VB)
has_pos(some-2,DT)
has_pos(baking-3,JJ)
has_pos(paper-4,NN)
has_pos(a-6,DT)
has_pos(pie-7,NN)
has_pos(pan-8,NN)
has_sense(baking-3, null)
has_sense(some-2, null)
has_sense(a-6, null)
---
// put 2 scoop of vanilla ice_cream on each side of the banana .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(scoop-3,scoop-3-sense)
is_a(scoop-3-sense,scoop.n.01)
has_sense(ice_cream-6,ice_cream-6-sense)
is_a(ice_cream-6-sense,ice_cream.n.01)
has_sense(banana-12,banana-12-sense)
is_a(banana-12-sense,banana.n.02)
root(ROOT-0, put-1)
num(scoop-3, 2-2)
dobj(put-1, scoop-3)
nn(ice_cream-6, vanilla-5)
prep_of(scoop-3, ice_cream-6)
det(side-9, each-8)
prep_on(put-1, side-9)
det(banana-12, the-11)
prep_of(side-9, banana-12)
has_pos(put-1,VB)
has_pos(2-2,CD)
has_pos(scoop-3,NNS)
has_pos(vanilla-5,NN)
has_pos(ice_cream-6,NN)
has_pos(each-8,DT)
has_pos(side-9,NN)
has_pos(the-11,DT)
has_pos(banana-12,NN)
has_sense(2-2, null)
has_sense(vanilla-5, null)
has_sense(side-9, null)
has_sense(the-11, null)
has_sense(each-8, null)
---
// Take the chicken out of the frying_pan and put it aside .
has_sense(chicken-3,chicken-3-sense)
is_a(chicken-3-sense,chicken.n.01)
has_sense(frying_pan-7,frying_pan-7-sense)
is_a(frying_pan-7-sense,frying_pan.n.01)
has_sense(put-9,put-9-sense)
is_a(put-9-sense,put.v.01)
has_sense(aside-11,aside-11-sense)
is_a(aside-11-sense,aside.r.01)
root(ROOT-0, Take-1)
det(chicken-3, the-2)
dobj(Take-1, chicken-3)
det(frying_pan-7, the-6)
prep_out_of(Take-1, frying_pan-7)
conj_and(Take-1, put-9)
dobj(put-9, it-10)
advmod(put-9, aside-11)
has_pos(Take-1,VB)
has_pos(the-2,DT)
has_pos(chicken-3,NN)
has_pos(the-6,DT)
has_pos(frying_pan-7,NN)
has_pos(put-9,VB)
has_pos(it-10,PRP)
has_pos(aside-11,RB)
has_sense(the-6, null)
has_sense(the-2, null)
has_sense(it-10, null)
has_sense(Take-1, null)
---
// put it on a plate , get a pair of fork and peel it while it be piping hot .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(plate-5,plate-5-sense)
is_a(plate-5-sense,plate.n.04)
has_sense(get-7,get-7-sense)
is_a(get-7-sense,get.v.01)
has_sense(pair-9,pair-9-sense)
is_a(pair-9-sense,couple.n.04)
has_sense(fork-11,fork-11-sense)
is_a(fork-11-sense,fork.n.01)
has_sense(peel-13,peel-13-sense)
is_a(peel-13-sense,skin.v.04)
has_sense(be-17,be-17-sense)
is_a(be-17-sense,be.v.01)
has_sense(hot-19,hot-19-sense)
is_a(hot-19-sense,hot.a.01)
root(ROOT-0, put-1)
dobj(put-1, it-2)
det(plate-5, a-4)
prep_on(put-1, plate-5)
conj_and(put-1, get-7)
det(pair-9, a-8)
dobj(get-7, pair-9)
prep_of(pair-9, fork-11)
conj_and(put-1, peel-13)
dobj(peel-13, it-14)
mark(piping-18, while-15)
nsubj(piping-18, it-16)
aux(piping-18, be-17)
advcl(peel-13, piping-18)
acomp(piping-18, hot-19)
has_pos(put-1,VB)
has_pos(it-2,PRP)
has_pos(a-4,DT)
has_pos(plate-5,NN)
has_pos(get-7,VB)
has_pos(a-8,DT)
has_pos(pair-9,NN)
has_pos(fork-11,NN)
has_pos(peel-13,VB)
has_pos(it-14,PRP)
has_pos(while-15,IN)
has_pos(it-16,PRP)
has_pos(be-17,VBP)
has_pos(piping-18,VBG)
has_pos(hot-19,JJ)
has_sense(it-16, null)
has_sense(it-14, null)
has_sense(piping-18, null)
has_sense(while-15, null)
has_sense(a-8, null)
has_sense(it-2, null)
has_sense(a-4, null)
---
// put the other slice of bread on top of your peanut_butter and banana pieces .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(other-3,other-3-sense)
is_a(other-3-sense,other.a.01)
has_sense(slice-4,slice-4-sense)
is_a(slice-4-sense,piece.n.08)
has_sense(bread-6,bread-6-sense)
is_a(bread-6-sense,bread.n.01)
has_sense(top-8,top-8-sense)
is_a(top-8-sense,top.n.02)
has_sense(peanut_butter-11,peanut_butter-11-sense)
is_a(peanut_butter-11-sense,peanut_butter.n.01)
has_sense(banana-13,banana-13-sense)
is_a(banana-13-sense,banana.n.02)
root(ROOT-0, put-1)
det(slice-4, the-2)
amod(slice-4, other-3)
dobj(put-1, slice-4)
prep_of(slice-4, bread-6)
poss(peanut_butter-11, your-10)
prep_on_top_of(put-1, peanut_butter-11)
nn(pieces-14, banana-13)
conj_and(peanut_butter-11, pieces-14)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(other-3,JJ)
has_pos(slice-4,NN)
has_pos(bread-6,NN)
has_pos(your-10,PRP$)
has_pos(peanut_butter-11,NN)
has_pos(banana-13,NN)
has_pos(pieces-14,NNS)
has_sense(pieces-14, null)
has_sense(the-2, null)
has_sense(your-10, null)
---
// The most common be to put Kraft Singles in it .
has_sense(most-2,most-2-sense)
is_a(most-2-sense,most.r.01)
has_sense(common-3,common-3-sense)
is_a(common-3-sense,common.s.04)
has_sense(be-4,be-4-sense)
is_a(be-4-sense,be.v.01)
has_sense(put-6,put-6-sense)
is_a(put-6-sense,put.v.01)
det(common-3, The-1)
advmod(common-3, most-2)
nsubj(be-4, common-3)
root(ROOT-0, be-4)
aux(put-6, to-5)
xcomp(be-4, put-6)
nn(Singles-8, Kraft-7)
dobj(put-6, Singles-8)
prep_in(Singles-8, it-10)
has_pos(The-1,DT)
has_pos(most-2,RBS)
has_pos(common-3,JJ)
has_pos(be-4,VB)
has_pos(to-5,TO)
has_pos(put-6,VB)
has_pos(Kraft-7,NNP)
has_pos(Singles-8,NNP)
has_pos(it-10,PRP)
has_sense(The-1, null)
has_sense(it-10, null)
has_sense(to-5, null)
has_sense(Singles-8, null)
has_sense(Kraft-7, null)
---
// put the cabbage shred in a glass or ceramic crock .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(cabbage-3,cabbage-3-sense)
is_a(cabbage-3-sense,cabbage.n.01)
has_sense(shred-4,shred-4-sense)
is_a(shred-4-sense,shred.n.01)
has_sense(ceramic-9,ceramic-9-sense)
is_a(ceramic-9-sense,ceramic.a.01)
has_sense(crock-10,crock-10-sense)
is_a(crock-10-sense,crock.n.03)
root(ROOT-0, put-1)
det(shred-4, the-2)
amod(shred-4, cabbage-3)
dobj(put-1, shred-4)
det(glass-7, a-6)
prep_in(put-1, glass-7)
amod(crock-10, ceramic-9)
conj_or(glass-7, crock-10)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(cabbage-3,JJ)
has_pos(shred-4,NN)
has_pos(a-6,DT)
has_pos(glass-7,NN)
has_pos(ceramic-9,JJ)
has_pos(crock-10,NN)
has_sense(glass-7, null)
has_sense(the-2, null)
has_sense(a-6, null)
---
// put on the lid with the feed tube to the left of the handle .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(lid-4,lid-4-sense)
is_a(lid-4-sense,lid.n.02)
has_sense(tube-8,tube-8-sense)
is_a(tube-8-sense,tube.n.01)
has_sense(left-11,left-11-sense)
is_a(left-11-sense,left.n.01)
has_sense(handle-14,handle-14-sense)
is_a(handle-14-sense,handle.n.01)
root(ROOT-0, put-1)
det(lid-4, the-3)
prep_on(put-1, lid-4)
det(tube-8, the-6)
nn(tube-8, feed-7)
prep_with(lid-4, tube-8)
det(left-11, the-10)
prep_to(put-1, left-11)
det(handle-14, the-13)
prep_of(left-11, handle-14)
has_pos(put-1,VB)
has_pos(the-3,DT)
has_pos(lid-4,NN)
has_pos(the-6,DT)
has_pos(feed-7,NN)
has_pos(tube-8,NN)
has_pos(the-10,DT)
has_pos(left-11,NN)
has_pos(the-13,DT)
has_pos(handle-14,NN)
has_sense(the-3, null)
has_sense(the-6, null)
has_sense(the-13, null)
has_sense(feed-7, null)
has_sense(the-10, null)
---
// then put it inside your blender .
has_sense(then-1,then-1-sense)
is_a(then-1-sense,then.r.01)
has_sense(put-2,put-2-sense)
is_a(put-2-sense,put.v.01)
has_sense(blender-6,blender-6-sense)
is_a(blender-6-sense,blender.n.01)
advmod(put-2, then-1)
root(ROOT-0, put-2)
dobj(put-2, it-3)
poss(blender-6, your-5)
prep_inside(put-2, blender-6)
has_pos(then-1,RB)
has_pos(put-2,VB)
has_pos(it-3,PRP)
has_pos(your-5,PRP$)
has_pos(blender-6,NN)
has_sense(your-5, null)
has_sense(it-3, null)
---
// If you like , put aside a little bit of one of the more aesthetically please ingredient as a garnish .
has_sense(like-3,like-3-sense)
is_a(like-3-sense,wish.v.02)
has_sense(put-5,put-5-sense)
is_a(put-5-sense,put.v.01)
has_sense(little-8,little-8-sense)
is_a(little-8-sense,small.a.01)
has_sense(bit-9,bit-9-sense)
is_a(bit-9-sense,spot.n.10)
has_sense(more-14,more-14-sense)
is_a(more-14-sense,more.a.01)
has_sense(aesthetically-15,aesthetically-15-sense)
is_a(aesthetically-15-sense,aesthetically.r.01)
has_sense(please-16,please-16-sense)
is_a(please-16-sense,please.v.01)
has_sense(ingredient-17,ingredient-17-sense)
is_a(ingredient-17-sense,ingredient.n.03)
has_sense(garnish-20,garnish-20-sense)
is_a(garnish-20-sense,garnish.n.01)
mark(like-3, If-1)
nsubj(like-3, you-2)
advcl(put-5, like-3)
root(ROOT-0, put-5)
prt(put-5, aside-6)
det(bit-9, a-7)
amod(bit-9, little-8)
dobj(put-5, bit-9)
prep_of(bit-9, one-11)
det(ingredient-17, the-13)
advmod(aesthetically-15, more-14)
amod(ingredient-17, aesthetically-15)
nn(ingredient-17, please-16)
prep_of(bit-9, ingredient-17)
det(garnish-20, a-19)
prep_as(ingredient-17, garnish-20)
has_pos(If-1,IN)
has_pos(you-2,PRP)
has_pos(like-3,VBP)
has_pos(put-5,VB)
has_pos(aside-6,RP)
has_pos(a-7,DT)
has_pos(little-8,JJ)
has_pos(bit-9,NN)
has_pos(one-11,CD)
has_pos(the-13,DT)
has_pos(more-14,RBR)
has_pos(aesthetically-15,JJ)
has_pos(please-16,NN)
has_pos(ingredient-17,NN)
has_pos(a-19,DT)
has_pos(garnish-20,NN)
has_sense(you-2, null)
has_sense(one-11, null)
has_sense(aside-6, null)
has_sense(a-19, null)
has_sense(If-1, null)
has_sense(the-13, null)
has_sense(a-7, null)
---
// grease a separate bowl with the oil and put the dough in it .
has_sense(grease-1,grease-1-sense)
is_a(grease-1-sense,grease.v.01)
has_sense(separate-3,separate-3-sense)
is_a(separate-3-sense,separate.a.01)
has_sense(bowl-4,bowl-4-sense)
is_a(bowl-4-sense,bowl.n.01)
has_sense(oil-7,oil-7-sense)
is_a(oil-7-sense,vegetable_oil.n.01)
has_sense(put-9,put-9-sense)
is_a(put-9-sense,put.v.01)
has_sense(dough-11,dough-11-sense)
is_a(dough-11-sense,dough.n.01)
root(ROOT-0, grease-1)
det(bowl-4, a-2)
amod(bowl-4, separate-3)
dobj(grease-1, bowl-4)
det(oil-7, the-6)
prep_with(grease-1, oil-7)
conj_and(grease-1, put-9)
det(dough-11, the-10)
dobj(put-9, dough-11)
prep_in(dough-11, it-13)
has_pos(grease-1,VB)
has_pos(a-2,DT)
has_pos(separate-3,JJ)
has_pos(bowl-4,NN)
has_pos(the-6,DT)
has_pos(oil-7,NN)
has_pos(put-9,VB)
has_pos(the-10,DT)
has_pos(dough-11,NN)
has_pos(it-13,PRP)
has_sense(the-6, null)
has_sense(it-13, null)
has_sense(a-2, null)
has_sense(the-10, null)
---
// clean up your mess and put away the things you use .
has_sense(clean-1,clean-1-sense)
is_a(clean-1-sense,clean.v.01)
has_sense(mess-4,mess-4-sense)
is_a(mess-4-sense,mess.n.01)
has_sense(put-6,put-6-sense)
is_a(put-6-sense,put.v.01)
has_sense(things-9,things-9-sense)
is_a(things-9-sense,things.n.01)
has_sense(use-11,use-11-sense)
is_a(use-11-sense,use.v.01)
root(ROOT-0, clean-1)
prt(clean-1, up-2)
poss(mess-4, your-3)
dobj(clean-1, mess-4)
conj_and(clean-1, put-6)
prt(put-6, away-7)
det(things-9, the-8)
dobj(put-6, things-9)
nsubj(use-11, you-10)
rcmod(things-9, use-11)
has_pos(clean-1,VB)
has_pos(up-2,RP)
has_pos(your-3,PRP$)
has_pos(mess-4,NN)
has_pos(put-6,VB)
has_pos(away-7,RP)
has_pos(the-8,DT)
has_pos(things-9,NNS)
has_pos(you-10,PRP)
has_pos(use-11,VBP)
has_sense(away-7, null)
has_sense(your-3, null)
has_sense(the-8, null)
has_sense(up-2, null)
has_sense(you-10, null)
---
// Or put on chocolate sprinkels .
has_sense(put-2,put-2-sense)
is_a(put-2-sense,put.v.01)
has_sense(chocolate-4,chocolate-4-sense)
is_a(chocolate-4-sense,chocolate.n.02)
dep(put-2, Or-1)
root(ROOT-0, put-2)
nn(sprinkels-5, chocolate-4)
prep_on(put-2, sprinkels-5)
has_pos(Or-1,CC)
has_pos(put-2,VB)
has_pos(chocolate-4,NN)
has_pos(sprinkels-5,NNS)
has_sense(sprinkels-5, null)
has_sense(Or-1, null)
---
// put 2-3 banana in a bowl .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(banana-3,banana-3-sense)
is_a(banana-3-sense,banana.n.02)
has_sense(bowl-6,bowl-6-sense)
is_a(bowl-6-sense,bowl.n.01)
root(ROOT-0, put-1)
num(banana-3, 2-3-2)
dobj(put-1, banana-3)
det(bowl-6, a-5)
prep_in(banana-3, bowl-6)
has_pos(put-1,VB)
has_pos(2-3-2,CD)
has_pos(banana-3,NN)
has_pos(a-5,DT)
has_pos(bowl-6,NN)
has_sense(a-5, null)
has_sense(2-3-2, null)
---
// put the recipe ingredient in the pan .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(recipe-3,recipe-3-sense)
is_a(recipe-3-sense,recipe.n.01)
has_sense(ingredient-4,ingredient-4-sense)
is_a(ingredient-4-sense,ingredient.n.03)
has_sense(pan-7,pan-7-sense)
is_a(pan-7-sense,pan.n.01)
root(ROOT-0, put-1)
det(ingredient-4, the-2)
nn(ingredient-4, recipe-3)
dobj(put-1, ingredient-4)
det(pan-7, the-6)
prep_in(put-1, pan-7)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(recipe-3,NN)
has_pos(ingredient-4,NN)
has_pos(the-6,DT)
has_pos(pan-7,NN)
has_sense(the-6, null)
has_sense(the-2, null)
---
// put a cup of water in the microwave to a boil .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(cup-3,cup-3-sense)
is_a(cup-3-sense,cup.n.02)
has_sense(water-5,water-5-sense)
is_a(water-5-sense,water.n.06)
has_sense(microwave-8,microwave-8-sense)
is_a(microwave-8-sense,microwave.n.02)
has_sense(boil-11,boil-11-sense)
is_a(boil-11-sense,boiling_point.n.01)
root(ROOT-0, put-1)
det(cup-3, a-2)
dobj(put-1, cup-3)
prep_of(cup-3, water-5)
det(microwave-8, the-7)
prep_in(water-5, microwave-8)
det(boil-11, a-10)
prep_to(put-1, boil-11)
has_pos(put-1,VB)
has_pos(a-2,DT)
has_pos(cup-3,NN)
has_pos(water-5,NN)
has_pos(the-7,DT)
has_pos(microwave-8,NN)
has_pos(a-10,DT)
has_pos(boil-11,NN)
has_sense(the-7, null)
has_sense(a-10, null)
has_sense(a-2, null)
---
// put the strawberries in the freezer .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(freezer-6,freezer-6-sense)
is_a(freezer-6-sense,deep-freeze.n.01)
root(ROOT-0, put-1)
det(strawberries-3, the-2)
dobj(put-1, strawberries-3)
det(freezer-6, the-5)
prep_in(put-1, freezer-6)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(strawberries-3,NNS)
has_pos(the-5,DT)
has_pos(freezer-6,NN)
has_sense(the-5, null)
has_sense(the-2, null)
has_sense(strawberries-3, null)
---
// The final step be to put barbecue_sauce over it and let it cool down .
has_sense(final-2,final-2-sense)
is_a(final-2-sense,final.s.02)
has_sense(step-3,step-3-sense)
is_a(step-3-sense,measure.n.01)
has_sense(be-4,be-4-sense)
is_a(be-4-sense,be.v.01)
has_sense(put-6,put-6-sense)
is_a(put-6-sense,put.v.01)
has_sense(barbecue_sauce-7,barbecue_sauce-7-sense)
is_a(barbecue_sauce-7-sense,barbecue_sauce.n.01)
has_sense(let-11,let-11-sense)
is_a(let-11-sense,let.v.01)
has_sense(cool-13,cool-13-sense)
is_a(cool-13-sense,cool.v.02)
det(step-3, The-1)
amod(step-3, final-2)
nsubj(be-4, step-3)
root(ROOT-0, be-4)
aux(put-6, to-5)
xcomp(be-4, put-6)
dobj(put-6, barbecue_sauce-7)
prep_over(put-6, it-9)
conj_and(be-4, let-11)
nsubj(cool-13, it-12)
ccomp(let-11, cool-13)
prt(cool-13, down-14)
has_pos(The-1,DT)
has_pos(final-2,JJ)
has_pos(step-3,NN)
has_pos(be-4,VB)
has_pos(to-5,TO)
has_pos(put-6,VB)
has_pos(barbecue_sauce-7,NN)
has_pos(it-9,PRP)
has_pos(let-11,VB)
has_pos(it-12,PRP)
has_pos(cool-13,VB)
has_pos(down-14,RP)
has_sense(it-12, null)
has_sense(The-1, null)
has_sense(to-5, null)
has_sense(down-14, null)
has_sense(it-9, null)
---
// put all the chicken in the bag of flour , and shake the bag again .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(chicken-4,chicken-4-sense)
is_a(chicken-4-sense,chicken.n.01)
has_sense(bag-7,bag-7-sense)
is_a(bag-7-sense,bag.n.01)
has_sense(flour-9,flour-9-sense)
is_a(flour-9-sense,flour.n.01)
has_sense(shake-12,shake-12-sense)
is_a(shake-12-sense,shake.v.01)
has_sense(bag-14,bag-14-sense)
is_a(bag-14-sense,bag.n.01)
has_sense(again-15,again-15-sense)
is_a(again-15-sense,again.r.01)
root(ROOT-0, put-1)
predet(chicken-4, all-2)
det(chicken-4, the-3)
dobj(put-1, chicken-4)
det(bag-7, the-6)
prep_in(put-1, bag-7)
prep_of(bag-7, flour-9)
conj_and(put-1, shake-12)
det(bag-14, the-13)
dobj(shake-12, bag-14)
advmod(shake-12, again-15)
has_pos(put-1,VB)
has_pos(all-2,PDT)
has_pos(the-3,DT)
has_pos(chicken-4,NN)
has_pos(the-6,DT)
has_pos(bag-7,NN)
has_pos(flour-9,NN)
has_pos(shake-12,VB)
has_pos(the-13,DT)
has_pos(bag-14,NN)
has_pos(again-15,RB)
has_sense(the-6, null)
has_sense(the-3, null)
has_sense(the-13, null)
has_sense(all-2, null)
---
// put all the juice powder in the blender .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(juice-4,juice-4-sense)
is_a(juice-4-sense,juice.n.01)
has_sense(powder-5,powder-5-sense)
is_a(powder-5-sense,powder.n.01)
has_sense(blender-8,blender-8-sense)
is_a(blender-8-sense,blender.n.01)
root(ROOT-0, put-1)
predet(powder-5, all-2)
det(powder-5, the-3)
nn(powder-5, juice-4)
dobj(put-1, powder-5)
det(blender-8, the-7)
prep_in(put-1, blender-8)
has_pos(put-1,VB)
has_pos(all-2,PDT)
has_pos(the-3,DT)
has_pos(juice-4,NN)
has_pos(powder-5,NN)
has_pos(the-7,DT)
has_pos(blender-8,NN)
has_sense(the-7, null)
has_sense(the-3, null)
has_sense(all-2, null)
---
// now put flour , baking_soda , cinnamon , and sugar in the large bowl .
has_sense(now-1,now-1-sense)
is_a(now-1-sense,now.r.01)
has_sense(put-2,put-2-sense)
is_a(put-2-sense,put.v.01)
has_sense(flour-3,flour-3-sense)
is_a(flour-3-sense,flour.n.01)
has_sense(baking_soda-5,baking_soda-5-sense)
is_a(baking_soda-5-sense,bicarbonate_of_soda.n.01)
has_sense(cinnamon-7,cinnamon-7-sense)
is_a(cinnamon-7-sense,cinnamon.n.03)
has_sense(sugar-10,sugar-10-sense)
is_a(sugar-10-sense,sugar.n.01)
has_sense(large-13,large-13-sense)
is_a(large-13-sense,large.a.01)
has_sense(bowl-14,bowl-14-sense)
is_a(bowl-14-sense,bowl.n.01)
advmod(put-2, now-1)
root(ROOT-0, put-2)
nn(sugar-10, flour-3)
conj_and(sugar-10, baking_soda-5)
conj_and(sugar-10, cinnamon-7)
dobj(put-2, sugar-10)
det(bowl-14, the-12)
amod(bowl-14, large-13)
prep_in(sugar-10, bowl-14)
has_pos(now-1,RB)
has_pos(put-2,VB)
has_pos(flour-3,NN)
has_pos(baking_soda-5,NN)
has_pos(cinnamon-7,NN)
has_pos(sugar-10,NN)
has_pos(the-12,DT)
has_pos(large-13,JJ)
has_pos(bowl-14,NN)
has_sense(the-12, null)
---
// put 1 cup milk into the mix .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(milk-4,milk-4-sense)
is_a(milk-4-sense,milk.n.01)
has_sense(mix-7,mix-7-sense)
is_a(mix-7-sense,mix.n.01)
root(ROOT-0, put-1)
num(milk-4, 1-2)
nn(milk-4, cup-3)
dobj(put-1, milk-4)
det(mix-7, the-6)
prep_into(put-1, mix-7)
has_pos(put-1,VB)
has_pos(1-2,CD)
has_pos(cup-3,NN)
has_pos(milk-4,NN)
has_pos(the-6,DT)
has_pos(mix-7,NN)
has_sense(the-6, null)
has_sense(1-2, null)
has_sense(cup-3, null)
---
// put in the oven and bake for 30-40 minutes .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(oven-4,oven-4-sense)
is_a(oven-4-sense,oven.n.01)
has_sense(bake-6,bake-6-sense)
is_a(bake-6-sense,bake.v.01)
root(ROOT-0, put-1)
det(oven-4, the-3)
prep_in(put-1, oven-4)
conj_and(put-1, bake-6)
num(minutes-9, 30-40-8)
prep_for(bake-6, minutes-9)
has_pos(put-1,VB)
has_pos(the-3,DT)
has_pos(oven-4,NN)
has_pos(bake-6,VB)
has_pos(30-40-8,CD)
has_pos(minutes-9,NNS)
has_sense(the-3, null)
has_sense(30-40-8, null)
has_sense(minutes-9, null)
---
// put in sliced banana .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(sliced-3,sliced-3-sense)
is_a(sliced-3-sense,chopped.s.01)
has_sense(banana-4,banana-4-sense)
is_a(banana-4-sense,banana.n.02)
root(ROOT-0, put-1)
amod(banana-4, sliced-3)
prep_in(put-1, banana-4)
has_pos(put-1,VB)
has_pos(sliced-3,JJ)
has_pos(banana-4,NN)
---
// put it on the grill .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(grill-5,grill-5-sense)
is_a(grill-5-sense,grill.n.02)
root(ROOT-0, put-1)
dobj(put-1, it-2)
det(grill-5, the-4)
prep_on(put-1, grill-5)
has_pos(put-1,VB)
has_pos(it-2,PRP)
has_pos(the-4,DT)
has_pos(grill-5,NN)
has_sense(the-4, null)
has_sense(it-2, null)
---
// put the buns together and then eat your sandwich .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(together-4,together-4-sense)
is_a(together-4-sense,together.r.01)
has_sense(then-6,then-6-sense)
is_a(then-6-sense,then.r.01)
has_sense(eat-7,eat-7-sense)
is_a(eat-7-sense,eat.v.01)
has_sense(sandwich-9,sandwich-9-sense)
is_a(sandwich-9-sense,sandwich.n.01)
root(ROOT-0, put-1)
det(buns-3, the-2)
dobj(put-1, buns-3)
advmod(put-1, together-4)
advmod(eat-7, then-6)
conj_and(put-1, eat-7)
poss(sandwich-9, your-8)
dobj(eat-7, sandwich-9)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(buns-3,NNS)
has_pos(together-4,RB)
has_pos(then-6,RB)
has_pos(eat-7,VB)
has_pos(your-8,PRP$)
has_pos(sandwich-9,NN)
has_sense(buns-3, null)
has_sense(your-8, null)
has_sense(the-2, null)
---
// put cold water into a saucepan and add 1 teaspoon of salt .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(saucepan-6,saucepan-6-sense)
is_a(saucepan-6-sense,saucepan.n.01)
has_sense(add-8,add-8-sense)
is_a(add-8-sense,add.v.01)
has_sense(teaspoon-10,teaspoon-10-sense)
is_a(teaspoon-10-sense,teaspoon.n.01)
has_sense(salt-12,salt-12-sense)
is_a(salt-12-sense,salt.n.02)
root(ROOT-0, put-1)
amod(water-3, cold-2)
dobj(put-1, water-3)
det(saucepan-6, a-5)
prep_into(put-1, saucepan-6)
conj_and(put-1, add-8)
num(teaspoon-10, 1-9)
dobj(add-8, teaspoon-10)
prep_of(teaspoon-10, salt-12)
has_pos(put-1,VB)
has_pos(cold-2,JJ)
has_pos(water-3,NN)
has_pos(a-5,DT)
has_pos(saucepan-6,NN)
has_pos(add-8,VB)
has_pos(1-9,CD)
has_pos(teaspoon-10,NN)
has_pos(salt-12,NN)
has_sense(1-9, null)
has_sense(water-3, null)
has_sense(cold-2, null)
has_sense(a-5, null)
---
// put in 1 cup of milk .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(milk-6,milk-6-sense)
is_a(milk-6-sense,milk.n.01)
root(ROOT-0, put-1)
num(cup-4, 1-3)
prep_in(put-1, cup-4)
prep_of(cup-4, milk-6)
has_pos(put-1,VB)
has_pos(1-3,CD)
has_pos(cup-4,NN)
has_pos(milk-6,NN)
has_sense(1-3, null)
has_sense(cup-4, null)