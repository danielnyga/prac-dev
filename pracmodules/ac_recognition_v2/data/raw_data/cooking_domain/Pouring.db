/* **************************************************************************** 
 * WIKIHOW.COM -- NATURAL-LANGUAGE INSTRUCTIONS
 * 
 * (C) 2011-2013 by Daniel Nyga (nyga@cs.uni-bremen.edu)
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 ******************************************************************************/

// pour the boiling water into the rice mixture .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(water-4,water-4-sense)
is_a(water-4-sense,water.n.06)
has_sense(rice-7,rice-7-sense)
is_a(rice-7-sense,rice.n.01)
has_sense(mixture-8,mixture-8-sense)
is_a(mixture-8-sense,concoction.n.01)
root(ROOT-0, pour-1)
det(water-4, the-2)
amod(water-4, boiling-3)
dobj(pour-1, water-4)
det(mixture-8, the-6)
nn(mixture-8, rice-7)
prep_into(pour-1, mixture-8)
has_pos(pour-1,VB)
has_pos(the-2,DT)
has_pos(boiling-3,JJ)
has_pos(water-4,NN)
has_pos(the-6,DT)
has_pos(rice-7,NN)
has_pos(mixture-8,NN)
has_sense(the-6, null)
has_sense(the-2, null)
has_sense(boiling-3, null)
---
// Get a tablespoon of olive_oil and pour around the pan .
has_sense(tablespoon-3,tablespoon-3-sense)
is_a(tablespoon-3-sense,tablespoon.n.01)
has_sense(olive_oil-5,olive_oil-5-sense)
is_a(olive_oil-5-sense,olive_oil.n.01)
has_sense(pour-7,pour-7-sense)
is_a(pour-7-sense,pour.v.01)
has_sense(pan-10,pan-10-sense)
is_a(pan-10-sense,pan.n.01)
root(ROOT-0, Get-1)
det(tablespoon-3, a-2)
dobj(Get-1, tablespoon-3)
prep_of(tablespoon-3, olive_oil-5)
conj_and(Get-1, pour-7)
prt(pour-7, around-8)
det(pan-10, the-9)
dobj(pour-7, pan-10)
has_pos(Get-1,VB)
has_pos(a-2,DT)
has_pos(tablespoon-3,NN)
has_pos(olive_oil-5,NN)
has_pos(pour-7,VB)
has_pos(around-8,RP)
has_pos(the-9,DT)
has_pos(pan-10,NN)
has_sense(the-9, null)
has_sense(Get-1, null)
has_sense(a-2, null)
has_sense(around-8, null)
---
// take your favorite fruit_juice and pour it into a glass .
has_sense(take-1,take-1-sense)
is_a(take-1-sense,take.v.04)
has_sense(favorite-3,favorite-3-sense)
is_a(favorite-3-sense,favored.s.01)
has_sense(fruit_juice-4,fruit_juice-4-sense)
is_a(fruit_juice-4-sense,fruit_juice.n.01)
has_sense(pour-6,pour-6-sense)
is_a(pour-6-sense,decant.v.01)
has_sense(glass-10,glass-10-sense)
is_a(glass-10-sense,glass.n.02)
root(ROOT-0, take-1)
poss(fruit_juice-4, your-2)
amod(fruit_juice-4, favorite-3)
dobj(take-1, fruit_juice-4)
conj_and(take-1, pour-6)
dobj(pour-6, it-7)
det(glass-10, a-9)
prep_into(pour-6, glass-10)
has_pos(take-1,VB)
has_pos(your-2,PRP$)
has_pos(favorite-3,JJ)
has_pos(fruit_juice-4,NN)
has_pos(pour-6,VB)
has_pos(it-7,PRP)
has_pos(a-9,DT)
has_pos(glass-10,NN)
has_sense(your-2, null)
has_sense(a-9, null)
has_sense(it-7, null)
---
// pour the liquid down the sink .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(liquid-3,liquid-3-sense)
is_a(liquid-3-sense,liquid.n.01)
has_sense(down-4,down-4-sense)
is_a(down-4-sense,down.r.01)
has_sense(sink-6,sink-6-sense)
is_a(sink-6-sense,sink.n.01)
root(ROOT-0, pour-1)
det(liquid-3, the-2)
dobj(pour-1, liquid-3)
advmod(pour-1, down-4)
det(sink-6, the-5)
pobj(down-4, sink-6)
has_pos(pour-1,VB)
has_pos(the-2,DT)
has_pos(liquid-3,NN)
has_pos(down-4,RB)
has_pos(the-5,DT)
has_pos(sink-6,NN)
has_sense(the-5, null)
has_sense(the-2, null)
---
// After the iron be properly heated , pour the batter into the iron .
has_sense(be-4,be-4-sense)
is_a(be-4-sense,be.v.01)
has_sense(properly-5,properly-5-sense)
is_a(properly-5-sense,properly.r.01)
has_sense(heated-6,heated-6-sense)
is_a(heated-6-sense,heated.s.01)
has_sense(pour-8,pour-8-sense)
is_a(pour-8-sense,pour.v.01)
has_sense(batter-10,batter-10-sense)
is_a(batter-10-sense,batter.n.02)
mark(heated-6, After-1)
det(iron-3, the-2)
nsubjpass(heated-6, iron-3)
auxpass(heated-6, be-4)
advmod(heated-6, properly-5)
advcl(pour-8, heated-6)
root(ROOT-0, pour-8)
det(batter-10, the-9)
dobj(pour-8, batter-10)
det(iron-13, the-12)
prep_into(pour-8, iron-13)
has_pos(After-1,IN)
has_pos(the-2,DT)
has_pos(iron-3,NN)
has_pos(be-4,VB)
has_pos(properly-5,RB)
has_pos(heated-6,VBN)
has_pos(pour-8,VB)
has_pos(the-9,DT)
has_pos(batter-10,NN)
has_pos(the-12,DT)
has_pos(iron-13,NN)
has_sense(After-1, null)
has_sense(iron-3, null)
has_sense(the-2, null)
has_sense(the-9, null)
has_sense(iron-13, null)
has_sense(the-12, null)
---
// pour approximately 2 tablespoon of extra virgin olive_oil into the bottom of the baking dish or roasting pan .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(approximately-2,approximately-2-sense)
is_a(approximately-2-sense,approximately.r.01)
has_sense(tablespoon-4,tablespoon-4-sense)
is_a(tablespoon-4-sense,tablespoon.n.01)
has_sense(virgin-7,virgin-7-sense)
is_a(virgin-7-sense,virgin.s.01)
has_sense(olive_oil-8,olive_oil-8-sense)
is_a(olive_oil-8-sense,olive_oil.n.01)
has_sense(bottom-11,bottom-11-sense)
is_a(bottom-11-sense,bottom.n.02)
has_sense(dish-15,dish-15-sense)
is_a(dish-15-sense,dish.n.01)
has_sense(pan-18,pan-18-sense)
is_a(pan-18-sense,pan.n.01)
root(ROOT-0, pour-1)
quantmod(2-3, approximately-2)
num(tablespoon-4, 2-3)
dobj(pour-1, tablespoon-4)
amod(olive_oil-8, extra-6)
amod(olive_oil-8, virgin-7)
prep_of(tablespoon-4, olive_oil-8)
det(bottom-11, the-10)
prep_into(pour-1, bottom-11)
det(dish-15, the-13)
amod(dish-15, baking-14)
prep_of(bottom-11, dish-15)
nn(pan-18, roasting-17)
conj_or(dish-15, pan-18)
has_pos(pour-1,VB)
has_pos(approximately-2,RB)
has_pos(2-3,CD)
has_pos(tablespoon-4,NN)
has_pos(extra-6,JJ)
has_pos(virgin-7,JJ)
has_pos(olive_oil-8,NN)
has_pos(the-10,DT)
has_pos(bottom-11,NN)
has_pos(the-13,DT)
has_pos(baking-14,JJ)
has_pos(dish-15,NN)
has_pos(roasting-17,NN)
has_pos(pan-18,NN)
has_sense(2-3, null)
has_sense(roasting-17, null)
has_sense(baking-14, null)
has_sense(extra-6, null)
has_sense(the-13, null)
has_sense(the-10, null)
---
// pour into greased and flour loaf pan .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(greased-3,greased-3-sense)
is_a(greased-3-sense,lubricated.a.01)
has_sense(flour-5,flour-5-sense)
is_a(flour-5-sense,flour.v.01)
has_sense(pan-7,pan-7-sense)
is_a(pan-7-sense,pan.n.01)
root(ROOT-0, pour-1)
amod(pan-7, greased-3)
conj_and(greased-3, flour-5)
nn(pan-7, loaf-6)
prep_into(pour-1, pan-7)
has_pos(pour-1,VB)
has_pos(greased-3,JJ)
has_pos(flour-5,JJ)
has_pos(loaf-6,NN)
has_pos(pan-7,NNS)
has_sense(loaf-6, null)
---
// Pour batter into greased and flour round cake pan , 1 color per pan .
has_sense(batter-2,batter-2-sense)
is_a(batter-2-sense,batter.n.02)
has_sense(flour-6,flour-6-sense)
is_a(flour-6-sense,flour.v.01)
has_sense(cake-8,cake-8-sense)
is_a(cake-8-sense,cake.n.03)
has_sense(pan-9,pan-9-sense)
is_a(pan-9-sense,pan.n.01)
has_sense(color-12,color-12-sense)
is_a(color-12-sense,color.n.01)
has_sense(pan-14,pan-14-sense)
is_a(pan-14-sense,pan.n.01)
nsubj(batter-2, Pour-1)
root(ROOT-0, batter-2)
amod(pan-9, greased-4)
conj_and(greased-4, flour-6)
amod(pan-9, round-7)
nn(pan-9, cake-8)
prep_into(batter-2, pan-9)
num(color-12, 1-11)
dep(pan-14, color-12)
nn(pan-14, per-13)
advmod(batter-2, pan-14)
has_pos(Pour-1,NNP)
has_pos(batter-2,VBD)
has_pos(greased-4,JJ)
has_pos(flour-6,JJ)
has_pos(round-7,JJ)
has_pos(cake-8,NN)
has_pos(pan-9,NNS)
has_pos(1-11,CD)
has_pos(color-12,NN)
has_pos(per-13,FW)
has_pos(pan-14,FW)
has_sense(Pour-1, null)
has_sense(1-11, null)
has_sense(per-13, null)
has_sense(greased-4, null)
has_sense(round-7, null)
---
// grab a small bowl and pour the natural yoghurt into it .
has_sense(grab-1,grab-1-sense)
is_a(grab-1-sense,snap_up.v.01)
has_sense(small-3,small-3-sense)
is_a(small-3-sense,small.a.01)
has_sense(bowl-4,bowl-4-sense)
is_a(bowl-4-sense,bowl.n.01)
has_sense(pour-6,pour-6-sense)
is_a(pour-6-sense,decant.v.01)
has_sense(natural-8,natural-8-sense)
is_a(natural-8-sense,natural.a.02)
has_sense(yoghurt-9,yoghurt-9-sense)
is_a(yoghurt-9-sense,yogurt.n.01)
root(ROOT-0, grab-1)
det(bowl-4, a-2)
amod(bowl-4, small-3)
dobj(grab-1, bowl-4)
conj_and(grab-1, pour-6)
det(yoghurt-9, the-7)
amod(yoghurt-9, natural-8)
dobj(pour-6, yoghurt-9)
prep_into(pour-6, it-11)
has_pos(grab-1,VB)
has_pos(a-2,DT)
has_pos(small-3,JJ)
has_pos(bowl-4,NN)
has_pos(pour-6,VB)
has_pos(the-7,DT)
has_pos(natural-8,JJ)
has_pos(yoghurt-9,NN)
has_pos(it-11,PRP)
has_sense(the-7, null)
has_sense(it-11, null)
has_sense(a-2, null)
---
// then pour the milk and butter in .
has_sense(then-1,then-1-sense)
is_a(then-1-sense,then.r.01)
has_sense(pour-2,pour-2-sense)
is_a(pour-2-sense,decant.v.01)
has_sense(milk-4,milk-4-sense)
is_a(milk-4-sense,milk.n.01)
has_sense(butter-6,butter-6-sense)
is_a(butter-6-sense,butter.n.01)
advmod(pour-2, then-1)
root(ROOT-0, pour-2)
det(milk-4, the-3)
dobj(pour-2, milk-4)
conj_and(milk-4, butter-6)
prep(pour-2, in-7)
has_pos(then-1,RB)
has_pos(pour-2,VB)
has_pos(the-3,DT)
has_pos(milk-4,NN)
has_pos(butter-6,NN)
has_pos(in-7,IN)
has_sense(the-3, null)
has_sense(in-7, null)
---
// pour the sauce over the pasta in a mixing_bowl .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(sauce-3,sauce-3-sense)
is_a(sauce-3-sense,sauce.n.01)
has_sense(pasta-6,pasta-6-sense)
is_a(pasta-6-sense,pasta.n.02)
has_sense(mixing_bowl-9,mixing_bowl-9-sense)
is_a(mixing_bowl-9-sense,mixing_bowl.n.01)
root(ROOT-0, pour-1)
det(sauce-3, the-2)
dobj(pour-1, sauce-3)
det(pasta-6, the-5)
prep_over(pour-1, pasta-6)
det(mixing_bowl-9, a-8)
prep_in(pasta-6, mixing_bowl-9)
has_pos(pour-1,VB)
has_pos(the-2,DT)
has_pos(sauce-3,NN)
has_pos(the-5,DT)
has_pos(pasta-6,NN)
has_pos(a-8,DT)
has_pos(mixing_bowl-9,NN)
has_sense(the-5, null)
has_sense(a-8, null)
has_sense(the-2, null)
---
// egg separator , such as this one , hang onto the yolk while you pour off the white .
has_sense(egg-1,egg-1-sense)
is_a(egg-1-sense,egg.n.02)
has_sense(separator-2,separator-2-sense)
is_a(separator-2-sense,centrifuge.n.01)
has_sense(one-7,one-7-sense)
is_a(one-7-sense,one.n.02)
has_sense(yolk-12,yolk-12-sense)
is_a(yolk-12-sense,egg_yolk.n.01)
has_sense(pour-15,pour-15-sense)
is_a(pour-15-sense,pour.v.01)
nn(separator-2, egg-1)
nsubj(hang-9, separator-2)
det(one-7, this-6)
prep_such_as(separator-2, one-7)
root(ROOT-0, hang-9)
det(yolk-12, the-11)
prep_onto(hang-9, yolk-12)
mark(pour-15, while-13)
nsubj(pour-15, you-14)
advcl(hang-9, pour-15)
prt(pour-15, off-16)
det(white-18, the-17)
dobj(pour-15, white-18)
has_pos(egg-1,NN)
has_pos(separator-2,NN)
has_pos(this-6,DT)
has_pos(one-7,NN)
has_pos(hang-9,VBP)
has_pos(the-11,DT)
has_pos(yolk-12,NN)
has_pos(while-13,IN)
has_pos(you-14,PRP)
has_pos(pour-15,VBP)
has_pos(off-16,RP)
has_pos(the-17,DT)
has_pos(white-18,JJ)
has_sense(hang-9, null)
has_sense(this-6, null)
has_sense(off-16, null)
has_sense(white-18, null)
has_sense(the-17, null)
has_sense(while-13, null)
has_sense(you-14, null)
has_sense(the-11, null)
---
// take the shaker and pour the Bacardi rum into it .
has_sense(take-1,take-1-sense)
is_a(take-1-sense,take.v.04)
has_sense(shaker-3,shaker-3-sense)
is_a(shaker-3-sense,shaker.n.03)
has_sense(pour-5,pour-5-sense)
is_a(pour-5-sense,decant.v.01)
has_sense(rum-8,rum-8-sense)
is_a(rum-8-sense,rum.n.01)
root(ROOT-0, take-1)
det(shaker-3, the-2)
dobj(take-1, shaker-3)
conj_and(take-1, pour-5)
det(rum-8, the-6)
nn(rum-8, Bacardi-7)
dobj(pour-5, rum-8)
prep_into(pour-5, it-10)
has_pos(take-1,VB)
has_pos(the-2,DT)
has_pos(shaker-3,NN)
has_pos(pour-5,VB)
has_pos(the-6,DT)
has_pos(Bacardi-7,NNP)
has_pos(rum-8,NN)
has_pos(it-10,PRP)
has_sense(the-6, null)
has_sense(the-2, null)
has_sense(it-10, null)
has_sense(Bacardi-7, null)
---
// pour the contents of the medium bowl into the large bowl then mix them together with the whisk .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(bowl-7,bowl-7-sense)
is_a(bowl-7-sense,bowl.n.01)
has_sense(large-10,large-10-sense)
is_a(large-10-sense,large.a.01)
has_sense(bowl-11,bowl-11-sense)
is_a(bowl-11-sense,bowl.n.01)
has_sense(then-12,then-12-sense)
is_a(then-12-sense,then.r.01)
has_sense(mix-13,mix-13-sense)
is_a(mix-13-sense,blend.v.03)
has_sense(whisk-18,whisk-18-sense)
is_a(whisk-18-sense,whisk.n.01)
root(ROOT-0, pour-1)
det(contents-3, the-2)
dobj(pour-1, contents-3)
det(bowl-7, the-5)
nn(bowl-7, medium-6)
prep_of(contents-3, bowl-7)
det(bowl-11, the-9)
amod(bowl-11, large-10)
prep_into(pour-1, bowl-11)
advmod(pour-1, then-12)
dep(pour-1, mix-13)
dobj(mix-13, them-14)
det(whisk-18, the-17)
prep_together_with(mix-13, whisk-18)
has_pos(pour-1,VB)
has_pos(the-2,DT)
has_pos(contents-3,NNS)
has_pos(the-5,DT)
has_pos(medium-6,NN)
has_pos(bowl-7,NN)
has_pos(the-9,DT)
has_pos(large-10,JJ)
has_pos(bowl-11,NN)
has_pos(then-12,RB)
has_pos(mix-13,VB)
has_pos(them-14,PRP)
has_pos(the-17,DT)
has_pos(whisk-18,NN)
has_sense(the-5, null)
has_sense(the-2, null)
has_sense(the-9, null)
has_sense(the-17, null)
has_sense(them-14, null)
has_sense(medium-6, null)
has_sense(contents-3, null)
---
// pour the chicken_stock into a large pan over a medium-high heat .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(chicken_stock-3,chicken_stock-3-sense)
is_a(chicken_stock-3-sense,chicken_broth.n.01)
has_sense(large-6,large-6-sense)
is_a(large-6-sense,large.a.01)
has_sense(pan-7,pan-7-sense)
is_a(pan-7-sense,pan.n.01)
has_sense(heat-11,heat-11-sense)
is_a(heat-11-sense,heat.n.01)
root(ROOT-0, pour-1)
det(chicken_stock-3, the-2)
dobj(pour-1, chicken_stock-3)
det(pan-7, a-5)
amod(pan-7, large-6)
prep_into(pour-1, pan-7)
det(heat-11, a-9)
amod(heat-11, medium-high-10)
prep_over(pan-7, heat-11)
has_pos(pour-1,VB)
has_pos(the-2,DT)
has_pos(chicken_stock-3,NN)
has_pos(a-5,DT)
has_pos(large-6,JJ)
has_pos(pan-7,NN)
has_pos(a-9,DT)
has_pos(medium-high-10,JJ)
has_pos(heat-11,NN)
has_sense(the-2, null)
has_sense(medium-high-10, null)
has_sense(a-9, null)
has_sense(a-5, null)
---
// place them in a large bowl and pour in just enough oil to cover each wedge .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(large-5,large-5-sense)
is_a(large-5-sense,large.a.01)
has_sense(bowl-6,bowl-6-sense)
is_a(bowl-6-sense,bowl.n.01)
has_sense(pour-8,pour-8-sense)
is_a(pour-8-sense,pour.v.01)
has_sense(just-10,just-10-sense)
is_a(just-10-sense,merely.r.01)
has_sense(enough-11,enough-11-sense)
is_a(enough-11-sense,adequate.s.02)
has_sense(oil-12,oil-12-sense)
is_a(oil-12-sense,vegetable_oil.n.01)
has_sense(wedge-16,wedge-16-sense)
is_a(wedge-16-sense,wedge.n.01)
root(ROOT-0, place-1)
dobj(place-1, them-2)
det(bowl-6, a-4)
amod(bowl-6, large-5)
prep_in(place-1, bowl-6)
conj_and(place-1, pour-8)
advmod(oil-12, just-10)
amod(oil-12, enough-11)
prep_in(pour-8, oil-12)
aux(cover-14, to-13)
xcomp(pour-8, cover-14)
det(wedge-16, each-15)
dobj(cover-14, wedge-16)
has_pos(place-1,VB)
has_pos(them-2,PRP)
has_pos(a-4,DT)
has_pos(large-5,JJ)
has_pos(bowl-6,NN)
has_pos(pour-8,VB)
has_pos(just-10,RB)
has_pos(enough-11,JJ)
has_pos(oil-12,NN)
has_pos(to-13,TO)
has_pos(cover-14,VB)
has_pos(each-15,DT)
has_pos(wedge-16,NN)
has_sense(cover-14, null)
has_sense(them-2, null)
has_sense(to-13, null)
has_sense(each-15, null)
has_sense(a-4, null)
---
// pour batter into your loaf pan .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(batter-2,batter-2-sense)
is_a(batter-2-sense,batter.n.02)
has_sense(loaf-5,loaf-5-sense)
is_a(loaf-5-sense,loaf_of_bread.n.01)
has_sense(pan-6,pan-6-sense)
is_a(pan-6-sense,pan.n.01)
root(ROOT-0, pour-1)
dobj(pour-1, batter-2)
poss(pan-6, your-4)
nn(pan-6, loaf-5)
prep_into(pour-1, pan-6)
has_pos(pour-1,VB)
has_pos(batter-2,NN)
has_pos(your-4,PRP$)
has_pos(loaf-5,NN)
has_pos(pan-6,NN)
has_sense(your-4, null)
---
// pour hot water mixture over noodle .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(mixture-4,mixture-4-sense)
is_a(mixture-4-sense,concoction.n.01)
has_sense(noodle-6,noodle-6-sense)
is_a(noodle-6-sense,noodle.n.01)
root(ROOT-0, pour-1)
amod(mixture-4, hot-2)
nn(mixture-4, water-3)
dobj(pour-1, mixture-4)
prep_over(pour-1, noodle-6)
has_pos(pour-1,VB)
has_pos(hot-2,JJ)
has_pos(water-3,NN)
has_pos(mixture-4,NN)
has_pos(noodle-6,NN)
has_sense(water-3, null)
has_sense(hot-2, null)
---
// pour some salt in the boiling water .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,decant.v.01)
has_sense(salt-3,salt-3-sense)
is_a(salt-3-sense,salt.n.02)
has_sense(water-7,water-7-sense)
is_a(water-7-sense,water.n.06)
root(ROOT-0, pour-1)
det(salt-3, some-2)
dobj(pour-1, salt-3)
det(water-7, the-5)
amod(water-7, boiling-6)
prep_in(salt-3, water-7)
has_pos(pour-1,VB)
has_pos(some-2,DT)
has_pos(salt-3,NN)
has_pos(the-5,DT)
has_pos(boiling-6,JJ)
has_pos(water-7,NN)
has_sense(the-5, null)
has_sense(some-2, null)
has_sense(boiling-6, null)
---
// As you pour the batter , twirl the pan around .
has_sense(pour-3,pour-3-sense)
is_a(pour-3-sense,pour.v.01)
has_sense(batter-5,batter-5-sense)
is_a(batter-5-sense,batter.n.02)
has_sense(twirl-7,twirl-7-sense)
is_a(twirl-7-sense,twirl.v.01)
has_sense(pan-9,pan-9-sense)
is_a(pan-9-sense,pan.n.01)
has_sense(around-10,around-10-sense)
is_a(around-10-sense,around.r.04)
mark(pour-3, As-1)
nsubj(pour-3, you-2)
advcl(twirl-7, pour-3)
det(batter-5, the-4)
dobj(pour-3, batter-5)
root(ROOT-0, twirl-7)
det(pan-9, the-8)
dobj(twirl-7, pan-9)
advmod(twirl-7, around-10)
has_pos(As-1,IN)
has_pos(you-2,PRP)
has_pos(pour-3,VBP)
has_pos(the-4,DT)
has_pos(batter-5,NN)
has_pos(twirl-7,VB)
has_pos(the-8,DT)
has_pos(pan-9,NN)
has_pos(around-10,RB)
has_sense(As-1, null)
has_sense(the-4, null)
has_sense(you-2, null)
has_sense(the-8, null)
---
// pour wine and heavy_cream into pan , stir , and cook until boiling .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,decant.v.01)
has_sense(wine-2,wine-2-sense)
is_a(wine-2-sense,wine.n.01)
has_sense(heavy_cream-4,heavy_cream-4-sense)
is_a(heavy_cream-4-sense,heavy_cream.n.01)
has_sense(pan-6,pan-6-sense)
is_a(pan-6-sense,pan.n.01)
has_sense(stir-8,stir-8-sense)
is_a(stir-8-sense,stir.v.01)
has_sense(cook-11,cook-11-sense)
is_a(cook-11-sense,cook.v.02)
root(ROOT-0, pour-1)
dobj(pour-1, wine-2)
conj_and(wine-2, heavy_cream-4)
prep_into(pour-1, pan-6)
conj_and(pour-1, stir-8)
conj_and(pour-1, cook-11)
prepc_until(cook-11, boiling-13)
has_pos(pour-1,VB)
has_pos(wine-2,NN)
has_pos(heavy_cream-4,NN)
has_pos(pan-6,NNP)
has_pos(stir-8,VB)
has_pos(cook-11,VB)
has_pos(boiling-13,VBG)
has_sense(boiling-13, null)
---
// just before serve , pour honey orange sauce over the fruit .
has_sense(just-1,just-1-sense)
is_a(just-1-sense,barely.r.01)
has_sense(serve-3,serve-3-sense)
is_a(serve-3-sense,serve.v.05)
has_sense(pour-5,pour-5-sense)
is_a(pour-5-sense,pour.v.01)
has_sense(honey-6,honey-6-sense)
is_a(honey-6-sense,honey.n.01)
has_sense(orange-7,orange-7-sense)
is_a(orange-7-sense,orange.n.01)
has_sense(sauce-8,sauce-8-sense)
is_a(sauce-8-sense,sauce.n.01)
has_sense(fruit-11,fruit-11-sense)
is_a(fruit-11-sense,fruit.n.01)
advmod(serve-3, just-1)
dep(serve-3, before-2)
advcl(pour-5, serve-3)
root(ROOT-0, pour-5)
nn(sauce-8, honey-6)
nn(sauce-8, orange-7)
dobj(pour-5, sauce-8)
det(fruit-11, the-10)
prep_over(sauce-8, fruit-11)
has_pos(just-1,RB)
has_pos(before-2,IN)
has_pos(serve-3,VBP)
has_pos(pour-5,VB)
has_pos(honey-6,NN)
has_pos(orange-7,NN)
has_pos(sauce-8,NN)
has_pos(the-10,DT)
has_pos(fruit-11,NN)
has_sense(before-2, null)
has_sense(the-10, null)
---
// carefully pour in the port_wine and remove from the heat after another minute .
has_sense(carefully-1,carefully-1-sense)
is_a(carefully-1-sense,carefully.r.01)
has_sense(pour-2,pour-2-sense)
is_a(pour-2-sense,pour.v.01)
has_sense(port_wine-5,port_wine-5-sense)
is_a(port_wine-5-sense,port.n.02)
has_sense(remove-7,remove-7-sense)
is_a(remove-7-sense,remove.v.01)
has_sense(heat-10,heat-10-sense)
is_a(heat-10-sense,hotness.n.01)
has_sense(minute-13,minute-13-sense)
is_a(minute-13-sense,minute.n.01)
advmod(pour-2, carefully-1)
root(ROOT-0, pour-2)
det(port_wine-5, the-4)
prep_in(pour-2, port_wine-5)
conj_and(pour-2, remove-7)
det(heat-10, the-9)
prep_from(remove-7, heat-10)
det(minute-13, another-12)
prep_after(remove-7, minute-13)
has_pos(carefully-1,RB)
has_pos(pour-2,VB)
has_pos(the-4,DT)
has_pos(port_wine-5,NN)
has_pos(remove-7,VB)
has_pos(the-9,DT)
has_pos(heat-10,NN)
has_pos(another-12,DT)
has_pos(minute-13,NN)
has_sense(the-4, null)
has_sense(the-9, null)
has_sense(another-12, null)
---
// pour dark brown_sugar into container .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(dark-2,dark-2-sense)
is_a(dark-2-sense,dark.a.02)
has_sense(brown_sugar-3,brown_sugar-3-sense)
is_a(brown_sugar-3-sense,brown_sugar.n.01)
has_sense(container-5,container-5-sense)
is_a(container-5-sense,container.n.01)
root(ROOT-0, pour-1)
amod(brown_sugar-3, dark-2)
dobj(pour-1, brown_sugar-3)
prep_into(pour-1, container-5)
has_pos(pour-1,VB)
has_pos(dark-2,JJ)
has_pos(brown_sugar-3,NN)
has_pos(container-5,NN)
---
// pour the sauce into the pot of pasta .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,decant.v.01)
has_sense(sauce-3,sauce-3-sense)
is_a(sauce-3-sense,sauce.n.01)
has_sense(pot-6,pot-6-sense)
is_a(pot-6-sense,pot.n.01)
has_sense(pasta-8,pasta-8-sense)
is_a(pasta-8-sense,pasta.n.01)
root(ROOT-0, pour-1)
det(sauce-3, the-2)
dobj(pour-1, sauce-3)
det(pot-6, the-5)
prep_into(pour-1, pot-6)
prep_of(pot-6, pasta-8)
has_pos(pour-1,VB)
has_pos(the-2,DT)
has_pos(sauce-3,NN)
has_pos(the-5,DT)
has_pos(pot-6,NN)
has_pos(pasta-8,NN)
has_sense(the-5, null)
has_sense(the-2, null)
---
// Break one egg into a jug , then pour the egg into one of the egg rings .
has_sense(egg-3,egg-3-sense)
is_a(egg-3-sense,egg.n.01)
has_sense(jug-6,jug-6-sense)
is_a(jug-6-sense,jug.n.01)
has_sense(then-8,then-8-sense)
is_a(then-8-sense,then.r.01)
has_sense(pour-9,pour-9-sense)
is_a(pour-9-sense,pour.v.01)
has_sense(egg-11,egg-11-sense)
is_a(egg-11-sense,egg.n.02)
has_sense(egg-16,egg-16-sense)
is_a(egg-16-sense,egg.n.02)
root(ROOT-0, Break-1)
num(egg-3, one-2)
dobj(Break-1, egg-3)
det(jug-6, a-5)
prep_into(Break-1, jug-6)
advmod(Break-1, then-8)
dep(Break-1, pour-9)
det(egg-11, the-10)
dobj(pour-9, egg-11)
prep_into(pour-9, one-13)
det(rings-17, the-15)
nn(rings-17, egg-16)
prep_of(one-13, rings-17)
has_pos(Break-1,VB)
has_pos(one-2,CD)
has_pos(egg-3,NN)
has_pos(a-5,DT)
has_pos(jug-6,NN)
has_pos(then-8,RB)
has_pos(pour-9,VB)
has_pos(the-10,DT)
has_pos(egg-11,NN)
has_pos(one-13,CD)
has_pos(the-15,DT)
has_pos(egg-16,NN)
has_pos(rings-17,NNS)
has_sense(Break-1, null)
has_sense(rings-17, null)
has_sense(one-13, null)
has_sense(one-2, null)
has_sense(the-15, null)
has_sense(a-5, null)
has_sense(the-10, null)
---
// When the potato be cooked , pour them into the sieve to drain .
has_sense(potato-3,potato-3-sense)
is_a(potato-3-sense,potato.n.01)
has_sense(be-4,be-4-sense)
is_a(be-4-sense,be.v.01)
has_sense(pour-7,pour-7-sense)
is_a(pour-7-sense,pour.v.01)
has_sense(sieve-11,sieve-11-sense)
is_a(sieve-11-sense,sieve.n.01)
has_sense(drain-13,drain-13-sense)
is_a(drain-13-sense,drain.v.03)
advmod(cooked-5, When-1)
det(potato-3, the-2)
nsubjpass(cooked-5, potato-3)
auxpass(cooked-5, be-4)
advcl(pour-7, cooked-5)
root(ROOT-0, pour-7)
dobj(pour-7, them-8)
det(sieve-11, the-10)
prep_into(pour-7, sieve-11)
aux(drain-13, to-12)
infmod(sieve-11, drain-13)
has_pos(When-1,WRB)
has_pos(the-2,DT)
has_pos(potato-3,NN)
has_pos(be-4,VB)
has_pos(cooked-5,VBN)
has_pos(pour-7,VB)
has_pos(them-8,PRP)
has_pos(the-10,DT)
has_pos(sieve-11,NN)
has_pos(to-12,TO)
has_pos(drain-13,VB)
has_sense(them-8, null)
has_sense(the-2, null)
has_sense(When-1, null)
has_sense(to-12, null)
has_sense(the-10, null)
has_sense(cooked-5, null)
---
// pour the macaroni in .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(macaroni-3,macaroni-3-sense)
is_a(macaroni-3-sense,macaroni.n.02)
root(ROOT-0, pour-1)
det(macaroni-3, the-2)
dobj(pour-1, macaroni-3)
prep(pour-1, in-4)
has_pos(pour-1,VB)
has_pos(the-2,DT)
has_pos(macaroni-3,NN)
has_pos(in-4,IN)
has_sense(the-2, null)
has_sense(in-4, null)
---
// pour 1\/2 to 1 cup of batter onto the bottom plate , depend on your waffle_iron .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(cup-5,cup-5-sense)
is_a(cup-5-sense,cup.n.02)
has_sense(batter-7,batter-7-sense)
is_a(batter-7-sense,batter.n.02)
has_sense(bottom-10,bottom-10-sense)
is_a(bottom-10-sense,bottom.a.01)
has_sense(depend-13,depend-13-sense)
is_a(depend-13-sense,depend.v.01)
has_sense(waffle_iron-16,waffle_iron-16-sense)
is_a(waffle_iron-16-sense,waffle_iron.n.01)
root(ROOT-0, pour-1)
number(1-4, 1\/2-2)
dep(1-4, to-3)
num(cup-5, 1-4)
dobj(pour-1, cup-5)
prep_of(cup-5, batter-7)
det(plate-11, the-9)
amod(plate-11, bottom-10)
prep_onto(pour-1, plate-11)
dep(pour-1, depend-13)
poss(waffle_iron-16, your-15)
prep_on(depend-13, waffle_iron-16)
has_pos(pour-1,VB)
has_pos(1\/2-2,CD)
has_pos(to-3,TO)
has_pos(1-4,CD)
has_pos(cup-5,NN)
has_pos(batter-7,NN)
has_pos(the-9,DT)
has_pos(bottom-10,JJ)
has_pos(plate-11,NN)
has_pos(depend-13,VB)
has_pos(your-15,PRP$)
has_pos(waffle_iron-16,NN)
has_sense(1\/2-2, null)
has_sense(to-3, null)
has_sense(1-4, null)
has_sense(the-9, null)
has_sense(plate-11, null)
has_sense(your-15, null)
---
// carefully pour the marinade .
has_sense(carefully-1,carefully-1-sense)
is_a(carefully-1-sense,carefully.r.01)
has_sense(pour-2,pour-2-sense)
is_a(pour-2-sense,pour.v.01)
has_sense(marinade-4,marinade-4-sense)
is_a(marinade-4-sense,marinade.n.01)
advmod(pour-2, carefully-1)
root(ROOT-0, pour-2)
det(marinade-4, the-3)
dobj(pour-2, marinade-4)
has_pos(carefully-1,RB)
has_pos(pour-2,VB)
has_pos(the-3,DT)
has_pos(marinade-4,NN)
has_sense(the-3, null)
---
// pour the noodle into a bowl and spoon some of the topping over it .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(noodle-3,noodle-3-sense)
is_a(noodle-3-sense,noodle.n.01)
has_sense(bowl-6,bowl-6-sense)
is_a(bowl-6-sense,bowl.n.01)
has_sense(spoon-8,spoon-8-sense)
is_a(spoon-8-sense,spoon.v.01)
has_sense(topping-12,topping-12-sense)
is_a(topping-12-sense,topping.n.01)
root(ROOT-0, pour-1)
det(noodle-3, the-2)
dobj(pour-1, noodle-3)
det(bowl-6, a-5)
prep_into(pour-1, bowl-6)
conj_and(pour-1, spoon-8)
dobj(spoon-8, some-9)
det(topping-12, the-11)
prep_of(some-9, topping-12)
prep_over(topping-12, it-14)
has_pos(pour-1,VB)
has_pos(the-2,DT)
has_pos(noodle-3,NN)
has_pos(a-5,DT)
has_pos(bowl-6,NN)
has_pos(spoon-8,VB)
has_pos(some-9,DT)
has_pos(the-11,DT)
has_pos(topping-12,NN)
has_pos(it-14,PRP)
has_sense(some-9, null)
has_sense(it-14, null)
has_sense(the-2, null)
has_sense(the-11, null)
has_sense(a-5, null)
---
// Once all ingredient be add and the batter be fully mixed , pour it evenly into your prepared pan .
has_sense(ingredient-3,ingredient-3-sense)
is_a(ingredient-3-sense,ingredient.n.03)
has_sense(be-4,be-4-sense)
is_a(be-4-sense,be.v.01)
has_sense(add-5,add-5-sense)
is_a(add-5-sense,add.v.01)
has_sense(batter-8,batter-8-sense)
is_a(batter-8-sense,batter.n.02)
has_sense(be-9,be-9-sense)
is_a(be-9-sense,be.v.01)
has_sense(fully-10,fully-10-sense)
is_a(fully-10-sense,fully.r.01)
has_sense(pour-13,pour-13-sense)
is_a(pour-13-sense,pour.v.01)
has_sense(evenly-15,evenly-15-sense)
is_a(evenly-15-sense,evenly.r.02)
has_sense(prepared-18,prepared-18-sense)
is_a(prepared-18-sense,prepared.a.01)
has_sense(pan-19,pan-19-sense)
is_a(pan-19-sense,pan.n.01)
mark(be-4, Once-1)
det(ingredient-3, all-2)
nsubj(be-4, ingredient-3)
advcl(pour-13, be-4)
ccomp(be-4, add-5)
det(batter-8, the-7)
nsubj(mixed-11, batter-8)
cop(mixed-11, be-9)
advmod(mixed-11, fully-10)
conj_and(be-4, mixed-11)
root(ROOT-0, pour-13)
dobj(pour-13, it-14)
advmod(pour-13, evenly-15)
poss(pan-19, your-17)
amod(pan-19, prepared-18)
prep_into(pour-13, pan-19)
has_pos(Once-1,IN)
has_pos(all-2,DT)
has_pos(ingredient-3,NN)
has_pos(be-4,VB)
has_pos(add-5,VB)
has_pos(the-7,DT)
has_pos(batter-8,NN)
has_pos(be-9,VB)
has_pos(fully-10,RB)
has_pos(mixed-11,JJ)
has_pos(pour-13,VB)
has_pos(it-14,PRP)
has_pos(evenly-15,RB)
has_pos(your-17,PRP$)
has_pos(prepared-18,JJ)
has_pos(pan-19,NN)
has_sense(the-7, null)
has_sense(it-14, null)
has_sense(Once-1, null)
has_sense(mixed-11, null)
has_sense(your-17, null)
has_sense(all-2, null)
---
// Quarter pineapple , and pour pineapple with pineapple_juice into container .
has_sense(pineapple-2,pineapple-2-sense)
is_a(pineapple-2-sense,pineapple.n.02)
has_sense(pineapple-6,pineapple-6-sense)
is_a(pineapple-6-sense,pineapple.n.02)
has_sense(pineapple_juice-8,pineapple_juice-8-sense)
is_a(pineapple_juice-8-sense,pineapple_juice.n.01)
has_sense(container-10,container-10-sense)
is_a(container-10-sense,container.n.01)
nsubj(pineapple-2, Quarter-1)
root(ROOT-0, pineapple-2)
conj_and(pineapple-2, pour-5)
dobj(pour-5, pineapple-6)
prep_with(pour-5, pineapple_juice-8)
prep_into(pour-5, container-10)
has_pos(Quarter-1,NN)
has_pos(pineapple-2,VBZ)
has_pos(pour-5,VBP)
has_pos(pineapple-6,NN)
has_pos(pineapple_juice-8,NN)
has_pos(container-10,NN)
has_sense(Quarter-1, null)
has_sense(pour-5, null)
---
// wait about 30 second to a minute and then pour to serve .
has_sense(wait-1,wait-1-sense)
is_a(wait-1-sense,wait.v.02)
has_sense(about-2,about-2-sense)
is_a(about-2-sense,approximately.r.01)
has_sense(second-4,second-4-sense)
is_a(second-4-sense,second.n.01)
has_sense(minute-7,minute-7-sense)
is_a(minute-7-sense,minute.n.01)
has_sense(then-9,then-9-sense)
is_a(then-9-sense,then.r.01)
has_sense(pour-10,pour-10-sense)
is_a(pour-10-sense,pour.v.01)
has_sense(serve-12,serve-12-sense)
is_a(serve-12-sense,serve.v.05)
root(ROOT-0, wait-1)
quantmod(30-3, about-2)
num(second-4, 30-3)
dobj(wait-1, second-4)
det(minute-7, a-6)
prep_to(wait-1, minute-7)
advmod(pour-10, then-9)
conj_and(wait-1, pour-10)
aux(serve-12, to-11)
xcomp(pour-10, serve-12)
has_pos(wait-1,VB)
has_pos(about-2,RB)
has_pos(30-3,CD)
has_pos(second-4,JJ)
has_pos(a-6,DT)
has_pos(minute-7,NN)
has_pos(then-9,RB)
has_pos(pour-10,VB)
has_pos(to-11,TO)
has_pos(serve-12,VB)
has_sense(to-11, null)
has_sense(30-3, null)
has_sense(a-6, null)
---
// measure and pour the dry ingredient into the mug .
has_sense(measure-1,measure-1-sense)
is_a(measure-1-sense,measure.v.01)
has_sense(pour-3,pour-3-sense)
is_a(pour-3-sense,decant.v.01)
has_sense(dry-5,dry-5-sense)
is_a(dry-5-sense,dry.a.01)
has_sense(ingredient-6,ingredient-6-sense)
is_a(ingredient-6-sense,ingredient.n.03)
has_sense(mug-9,mug-9-sense)
is_a(mug-9-sense,mug.n.04)
root(ROOT-0, measure-1)
conj_and(measure-1, pour-3)
det(ingredient-6, the-4)
amod(ingredient-6, dry-5)
dobj(measure-1, ingredient-6)
det(mug-9, the-8)
prep_into(measure-1, mug-9)
has_pos(measure-1,VB)
has_pos(pour-3,VB)
has_pos(the-4,DT)
has_pos(dry-5,JJ)
has_pos(ingredient-6,NN)
has_pos(the-8,DT)
has_pos(mug-9,NN)
has_sense(the-4, null)
has_sense(the-8, null)
---
// pour cake batter into a 9 by 13 inch glass baking dish .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(cake-2,cake-2-sense)
is_a(cake-2-sense,cake.n.03)
has_sense(batter-3,batter-3-sense)
is_a(batter-3-sense,batter.n.02)
has_sense(inch-9,inch-9-sense)
is_a(inch-9-sense,inch.n.01)
has_sense(dish-12,dish-12-sense)
is_a(dish-12-sense,dish.n.01)
root(ROOT-0, pour-1)
nn(batter-3, cake-2)
dobj(pour-1, batter-3)
det(9-6, a-5)
prep_into(pour-1, 9-6)
num(glass-10, 13-8)
nn(glass-10, inch-9)
prep_by(pour-1, glass-10)
partmod(glass-10, baking-11)
dobj(baking-11, dish-12)
has_pos(pour-1,VB)
has_pos(cake-2,NN)
has_pos(batter-3,NN)
has_pos(a-5,DT)
has_pos(9-6,CD)
has_pos(13-8,CD)
has_pos(inch-9,NN)
has_pos(glass-10,NN)
has_pos(baking-11,VBG)
has_pos(dish-12,NN)
has_sense(9-6, null)
has_sense(baking-11, null)
has_sense(13-8, null)
has_sense(a-5, null)
has_sense(glass-10, null)
---
// pour the mustard into a dish and mix with liquid until it be thick .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,decant.v.01)
has_sense(mustard-3,mustard-3-sense)
is_a(mustard-3-sense,mustard.n.02)
has_sense(dish-6,dish-6-sense)
is_a(dish-6-sense,dish.n.01)
has_sense(mix-8,mix-8-sense)
is_a(mix-8-sense,blend.v.03)
has_sense(liquid-10,liquid-10-sense)
is_a(liquid-10-sense,liquid.n.01)
has_sense(be-13,be-13-sense)
is_a(be-13-sense,be.v.01)
has_sense(thick-14,thick-14-sense)
is_a(thick-14-sense,thick.a.03)
root(ROOT-0, pour-1)
det(mustard-3, the-2)
dobj(pour-1, mustard-3)
det(dish-6, a-5)
prep_into(pour-1, dish-6)
conj_and(pour-1, mix-8)
prep_with(mix-8, liquid-10)
mark(thick-14, until-11)
nsubj(thick-14, it-12)
cop(thick-14, be-13)
advcl(mix-8, thick-14)
has_pos(pour-1,VB)
has_pos(the-2,DT)
has_pos(mustard-3,NN)
has_pos(a-5,DT)
has_pos(dish-6,NN)
has_pos(mix-8,VB)
has_pos(liquid-10,NN)
has_pos(until-11,IN)
has_pos(it-12,PRP)
has_pos(be-13,VB)
has_pos(thick-14,JJ)
has_sense(until-11, null)
has_sense(it-12, null)
has_sense(the-2, null)
has_sense(a-5, null)
---
// Steep tea and then pour into your favorite cup .
has_sense(tea-2,tea-2-sense)
is_a(tea-2-sense,tea.n.01)
has_sense(then-4,then-4-sense)
is_a(then-4-sense,then.r.01)
has_sense(pour-5,pour-5-sense)
is_a(pour-5-sense,pour.v.01)
has_sense(favorite-8,favorite-8-sense)
is_a(favorite-8-sense,favored.s.01)
has_sense(cup-9,cup-9-sense)
is_a(cup-9-sense,cup.n.01)
nn(tea-2, Steep-1)
nsubj(pour-5, tea-2)
conj_and(tea-2, then-4)
root(ROOT-0, pour-5)
poss(cup-9, your-7)
amod(cup-9, favorite-8)
prep_into(pour-5, cup-9)
has_pos(Steep-1,NNP)
has_pos(tea-2,NN)
has_pos(then-4,RB)
has_pos(pour-5,VBP)
has_pos(your-7,PRP$)
has_pos(favorite-8,JJ)
has_pos(cup-9,NN)
has_sense(your-7, null)
has_sense(Steep-1, null)
---
// pour the batter into the baking pan .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,decant.v.01)
has_sense(batter-3,batter-3-sense)
is_a(batter-3-sense,batter.n.02)
has_sense(pan-7,pan-7-sense)
is_a(pan-7-sense,pan.n.01)
root(ROOT-0, pour-1)
det(batter-3, the-2)
dobj(pour-1, batter-3)
det(pan-7, the-5)
amod(pan-7, baking-6)
prep_into(pour-1, pan-7)
has_pos(pour-1,VB)
has_pos(the-2,DT)
has_pos(batter-3,NN)
has_pos(the-5,DT)
has_pos(baking-6,JJ)
has_pos(pan-7,NN)
has_sense(the-5, null)
has_sense(baking-6, null)
has_sense(the-2, null)
---
// pour blueberry mixture into prepared pie_crust .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(blueberry-2,blueberry-2-sense)
is_a(blueberry-2-sense,blueberry.n.02)
has_sense(mixture-3,mixture-3-sense)
is_a(mixture-3-sense,concoction.n.01)
has_sense(prepared-5,prepared-5-sense)
is_a(prepared-5-sense,prepared.a.01)
has_sense(pie_crust-6,pie_crust-6-sense)
is_a(pie_crust-6-sense,pie_crust.n.01)
root(ROOT-0, pour-1)
amod(mixture-3, blueberry-2)
dobj(pour-1, mixture-3)
amod(pie_crust-6, prepared-5)
prep_into(pour-1, pie_crust-6)
has_pos(pour-1,VB)
has_pos(blueberry-2,JJ)
has_pos(mixture-3,NN)
has_pos(prepared-5,JJ)
has_pos(pie_crust-6,NN)
---
// pour brine over to cover .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(cover-5,cover-5-sense)
is_a(cover-5-sense,cover.v.01)
root(ROOT-0, pour-1)
acomp(pour-1, brine-2)
dep(brine-2, over-3)
aux(cover-5, to-4)
xcomp(brine-2, cover-5)
has_pos(pour-1,VB)
has_pos(brine-2,JJR)
has_pos(over-3,RP)
has_pos(to-4,TO)
has_pos(cover-5,VB)
has_sense(brine-2, null)
has_sense(over-3, null)
has_sense(to-4, null)
---
// pour the yeast mixture into the bowl and stir with a large spoon until a dough forms .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(yeast-3,yeast-3-sense)
is_a(yeast-3-sense,yeast.n.01)
has_sense(mixture-4,mixture-4-sense)
is_a(mixture-4-sense,concoction.n.01)
has_sense(bowl-7,bowl-7-sense)
is_a(bowl-7-sense,bowl.n.01)
has_sense(stir-9,stir-9-sense)
is_a(stir-9-sense,stir.v.01)
has_sense(large-12,large-12-sense)
is_a(large-12-sense,large.a.01)
has_sense(spoon-13,spoon-13-sense)
is_a(spoon-13-sense,spoon.n.01)
has_sense(dough-16,dough-16-sense)
is_a(dough-16-sense,dough.n.01)
root(ROOT-0, pour-1)
det(mixture-4, the-2)
nn(mixture-4, yeast-3)
dobj(pour-1, mixture-4)
det(bowl-7, the-6)
prep_into(pour-1, bowl-7)
conj_and(pour-1, stir-9)
det(spoon-13, a-11)
amod(spoon-13, large-12)
prep_with(stir-9, spoon-13)
det(forms-17, a-15)
amod(forms-17, dough-16)
prep_until(stir-9, forms-17)
has_pos(pour-1,VB)
has_pos(the-2,DT)
has_pos(yeast-3,NN)
has_pos(mixture-4,NN)
has_pos(the-6,DT)
has_pos(bowl-7,NN)
has_pos(stir-9,VB)
has_pos(a-11,DT)
has_pos(large-12,JJ)
has_pos(spoon-13,NN)
has_pos(a-15,DT)
has_pos(dough-16,JJ)
has_pos(forms-17,NNS)
has_sense(a-15, null)
has_sense(the-6, null)
has_sense(a-11, null)
has_sense(the-2, null)
has_sense(forms-17, null)
---
// pour the entire batch of sticky sauce over your chicken evenly .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(entire-3,entire-3-sense)
is_a(entire-3-sense,entire.s.01)
has_sense(sticky-6,sticky-6-sense)
is_a(sticky-6-sense,gluey.s.01)
has_sense(sauce-7,sauce-7-sense)
is_a(sauce-7-sense,sauce.n.01)
has_sense(chicken-10,chicken-10-sense)
is_a(chicken-10-sense,chicken.n.01)
has_sense(evenly-11,evenly-11-sense)
is_a(evenly-11-sense,evenly.r.01)
root(ROOT-0, pour-1)
det(batch-4, the-2)
amod(batch-4, entire-3)
dobj(pour-1, batch-4)
amod(sauce-7, sticky-6)
prep_of(batch-4, sauce-7)
poss(chicken-10, your-9)
prep_over(sauce-7, chicken-10)
advmod(sauce-7, evenly-11)
has_pos(pour-1,VB)
has_pos(the-2,DT)
has_pos(entire-3,JJ)
has_pos(batch-4,NN)
has_pos(sticky-6,JJ)
has_pos(sauce-7,NN)
has_pos(your-9,PRP$)
has_pos(chicken-10,NN)
has_pos(evenly-11,RB)
has_sense(the-2, null)
has_sense(batch-4, null)
has_sense(your-9, null)
---
// The amount you pour will decide the final size of your pancake .
has_sense(amount-2,amount-2-sense)
is_a(amount-2-sense,measure.n.02)
has_sense(pour-4,pour-4-sense)
is_a(pour-4-sense,decant.v.01)
has_sense(decide-6,decide-6-sense)
is_a(decide-6-sense,decide.v.04)
has_sense(final-8,final-8-sense)
is_a(final-8-sense,final.s.02)
has_sense(size-9,size-9-sense)
is_a(size-9-sense,size.n.01)
has_sense(pancake-12,pancake-12-sense)
is_a(pancake-12-sense,pancake.n.01)
det(amount-2, The-1)
nsubj(decide-6, amount-2)
nsubj(pour-4, you-3)
rcmod(amount-2, pour-4)
aux(decide-6, will-5)
root(ROOT-0, decide-6)
det(size-9, the-7)
amod(size-9, final-8)
dobj(decide-6, size-9)
poss(pancake-12, your-11)
prep_of(size-9, pancake-12)
has_pos(The-1,DT)
has_pos(amount-2,NN)
has_pos(you-3,PRP)
has_pos(pour-4,VBP)
has_pos(will-5,MD)
has_pos(decide-6,VB)
has_pos(the-7,DT)
has_pos(final-8,JJ)
has_pos(size-9,NN)
has_pos(your-11,PRP$)
has_pos(pancake-12,NN)
has_sense(will-5, null)
has_sense(the-7, null)
has_sense(you-3, null)
has_sense(The-1, null)
has_sense(your-11, null)
---
// carefully pour out the hot water and replace it slowly with warm water .
has_sense(carefully-1,carefully-1-sense)
is_a(carefully-1-sense,carefully.r.01)
has_sense(pour-2,pour-2-sense)
is_a(pour-2-sense,decant.v.01)
has_sense(slowly-10,slowly-10-sense)
is_a(slowly-10-sense,slowly.r.01)
has_sense(warm-12,warm-12-sense)
is_a(warm-12-sense,warm.a.01)
has_sense(water-13,water-13-sense)
is_a(water-13-sense,water.n.06)
advmod(pour-2, carefully-1)
root(ROOT-0, pour-2)
prt(pour-2, out-3)
det(water-6, the-4)
amod(water-6, hot-5)
dobj(pour-2, water-6)
conj_and(pour-2, replace-8)
dobj(replace-8, it-9)
advmod(replace-8, slowly-10)
amod(water-13, warm-12)
prep_with(replace-8, water-13)
has_pos(carefully-1,RB)
has_pos(pour-2,VB)
has_pos(out-3,RP)
has_pos(the-4,DT)
has_pos(hot-5,JJ)
has_pos(water-6,NN)
has_pos(replace-8,VB)
has_pos(it-9,PRP)
has_pos(slowly-10,RB)
has_pos(warm-12,JJ)
has_pos(water-13,NN)
has_sense(the-4, null)
has_sense(water-6, null)
has_sense(hot-5, null)
has_sense(replace-8, null)
has_sense(it-9, null)
has_sense(out-3, null)
---
// Pour about two cups of water in a large pot .
has_sense(about-2,about-2-sense)
is_a(about-2-sense,approximately.r.01)
has_sense(water-6,water-6-sense)
is_a(water-6-sense,water.n.06)
has_sense(large-9,large-9-sense)
is_a(large-9-sense,large.a.01)
has_sense(pot-10,pot-10-sense)
is_a(pot-10-sense,pot.n.01)
root(ROOT-0, Pour-1)
num(cups-4, two-3)
prep_about(Pour-1, cups-4)
prep_of(cups-4, water-6)
det(pot-10, a-8)
amod(pot-10, large-9)
prep_in(Pour-1, pot-10)
has_pos(Pour-1,NNP)
has_pos(two-3,CD)
has_pos(cups-4,NNS)
has_pos(water-6,NN)
has_pos(a-8,DT)
has_pos(large-9,JJ)
has_pos(pot-10,NN)
has_sense(cups-4, null)
has_sense(two-3, null)
has_sense(Pour-1, null)
has_sense(a-8, null)
---
// pour in some pre-made sauce , cover with lid and set it to boil .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(sauce-5,sauce-5-sense)
is_a(sauce-5-sense,sauce.n.01)
has_sense(cover-7,cover-7-sense)
is_a(cover-7-sense,cover.v.01)
has_sense(lid-9,lid-9-sense)
is_a(lid-9-sense,lid.n.02)
has_sense(set-11,set-11-sense)
is_a(set-11-sense,set.v.05)
has_sense(boil-14,boil-14-sense)
is_a(boil-14-sense,boiling_point.n.01)
root(ROOT-0, pour-1)
det(sauce-5, some-3)
amod(sauce-5, pre-made-4)
prep_in(pour-1, sauce-5)
conj_and(pour-1, cover-7)
prep_with(cover-7, lid-9)
conj_and(pour-1, set-11)
dobj(set-11, it-12)
prep_to(set-11, boil-14)
has_pos(pour-1,VB)
has_pos(some-3,DT)
has_pos(pre-made-4,JJ)
has_pos(sauce-5,NN)
has_pos(cover-7,VB)
has_pos(lid-9,NN)
has_pos(set-11,VB)
has_pos(it-12,PRP)
has_pos(boil-14,NN)
has_sense(it-12, null)
has_sense(some-3, null)
has_sense(pre-made-4, null)
---
// pour batter into the Bundt pan and bake as direct .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(batter-2,batter-2-sense)
is_a(batter-2-sense,batter.n.02)
has_sense(pan-6,pan-6-sense)
is_a(pan-6-sense,pan.n.01)
has_sense(bake-8,bake-8-sense)
is_a(bake-8-sense,bake.v.01)
has_sense(direct-10,direct-10-sense)
is_a(direct-10-sense,direct.v.01)
root(ROOT-0, pour-1)
dobj(pour-1, batter-2)
det(pan-6, the-4)
nn(pan-6, Bundt-5)
prep_into(pour-1, pan-6)
conj_and(pour-1, bake-8)
advmod(direct-10, as-9)
acomp(bake-8, direct-10)
has_pos(pour-1,VB)
has_pos(batter-2,NN)
has_pos(the-4,DT)
has_pos(Bundt-5,NNP)
has_pos(pan-6,NNP)
has_pos(bake-8,VB)
has_pos(as-9,RB)
has_pos(direct-10,JJ)
has_sense(the-4, null)
has_sense(Bundt-5, null)
has_sense(as-9, null)
---
// pour about a bowlful of pasta , any pasta will do , into the pan .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,decant.v.01)
has_sense(bowlful-4,bowlful-4-sense)
is_a(bowlful-4-sense,bowl.n.04)
has_sense(pasta-6,pasta-6-sense)
is_a(pasta-6-sense,pasta.n.02)
has_sense(pasta-9,pasta-9-sense)
is_a(pasta-9-sense,pasta.n.02)
has_sense(do-11,do-11-sense)
is_a(do-11-sense,suffice.v.01)
has_sense(pan-15,pan-15-sense)
is_a(pan-15-sense,pan.n.01)
ccomp(do-11, pour-1)
det(bowlful-4, a-3)
prep_about(pour-1, bowlful-4)
prep_of(bowlful-4, pasta-6)
det(pasta-9, any-8)
nsubj(do-11, pasta-9)
aux(do-11, will-10)
root(ROOT-0, do-11)
det(pan-15, the-14)
prep_into(do-11, pan-15)
has_pos(pour-1,VB)
has_pos(a-3,DT)
has_pos(bowlful-4,NN)
has_pos(pasta-6,NN)
has_pos(any-8,DT)
has_pos(pasta-9,NN)
has_pos(will-10,MD)
has_pos(do-11,VB)
has_pos(the-14,DT)
has_pos(pan-15,NN)
has_sense(will-10, null)
has_sense(any-8, null)
has_sense(a-3, null)
has_sense(the-14, null)
---
// put the mixture into a slightly oiled bowl and pour a teaspoon or so of oil onto the dough .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(mixture-3,mixture-3-sense)
is_a(mixture-3-sense,concoction.n.01)
has_sense(slightly-6,slightly-6-sense)
is_a(slightly-6-sense,slightly.r.01)
has_sense(oiled-7,oiled-7-sense)
is_a(oiled-7-sense,oiled.a.01)
has_sense(bowl-8,bowl-8-sense)
is_a(bowl-8-sense,bowl.n.01)
has_sense(pour-10,pour-10-sense)
is_a(pour-10-sense,pour.v.01)
has_sense(teaspoon-12,teaspoon-12-sense)
is_a(teaspoon-12-sense,teaspoon.n.01)
has_sense(oil-16,oil-16-sense)
is_a(oil-16-sense,vegetable_oil.n.01)
has_sense(dough-19,dough-19-sense)
is_a(dough-19-sense,dough.n.01)
root(ROOT-0, put-1)
det(mixture-3, the-2)
dobj(put-1, mixture-3)
det(bowl-8, a-5)
advmod(oiled-7, slightly-6)
amod(bowl-8, oiled-7)
prep_into(put-1, bowl-8)
conj_and(put-1, pour-10)
det(teaspoon-12, a-11)
dobj(pour-10, teaspoon-12)
cc(so-14, or-13)
advmod(teaspoon-12, so-14)
prep_of(teaspoon-12, oil-16)
det(dough-19, the-18)
prep_onto(pour-10, dough-19)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(mixture-3,NN)
has_pos(a-5,DT)
has_pos(slightly-6,RB)
has_pos(oiled-7,JJ)
has_pos(bowl-8,NN)
has_pos(pour-10,VB)
has_pos(a-11,DT)
has_pos(teaspoon-12,NN)
has_pos(or-13,CC)
has_pos(so-14,RB)
has_pos(oil-16,NN)
has_pos(the-18,DT)
has_pos(dough-19,NN)
has_sense(a-11, null)
has_sense(the-2, null)
has_sense(or-13, null)
has_sense(the-18, null)
has_sense(a-5, null)
has_sense(so-14, null)
---
// pour the bread mix into the pan .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(bread-3,bread-3-sense)
is_a(bread-3-sense,bread.n.01)
has_sense(mix-4,mix-4-sense)
is_a(mix-4-sense,mix.n.03)
has_sense(pan-7,pan-7-sense)
is_a(pan-7-sense,pan.n.01)
root(ROOT-0, pour-1)
det(mix-4, the-2)
nn(mix-4, bread-3)
dobj(pour-1, mix-4)
det(pan-7, the-6)
prep_into(pour-1, pan-7)
has_pos(pour-1,VB)
has_pos(the-2,DT)
has_pos(bread-3,NN)
has_pos(mix-4,NN)
has_pos(the-6,DT)
has_pos(pan-7,NN)
has_sense(the-6, null)
has_sense(the-2, null)
---
// put water in your cooking vessel , pour in rice , stir once .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(water-2,water-2-sense)
is_a(water-2-sense,water.n.01)
has_sense(vessel-6,vessel-6-sense)
is_a(vessel-6-sense,vessel.n.03)
has_sense(pour-8,pour-8-sense)
is_a(pour-8-sense,pour.v.01)
has_sense(rice-10,rice-10-sense)
is_a(rice-10-sense,rice.n.01)
has_sense(stir-12,stir-12-sense)
is_a(stir-12-sense,stir.v.01)
has_sense(once-13,once-13-sense)
is_a(once-13-sense,once.r.01)
root(ROOT-0, put-1)
dobj(put-1, water-2)
poss(vessel-6, your-4)
amod(vessel-6, cooking-5)
prep_in(put-1, vessel-6)
dep(put-1, pour-8)
prep_in(pour-8, rice-10)
dep(put-1, stir-12)
advmod(stir-12, once-13)
has_pos(put-1,VB)
has_pos(water-2,NN)
has_pos(your-4,PRP$)
has_pos(cooking-5,JJ)
has_pos(vessel-6,NN)
has_pos(pour-8,VB)
has_pos(rice-10,NN)
has_pos(stir-12,VB)
has_pos(once-13,RB)
has_sense(your-4, null)
has_sense(cooking-5, null)
---
// pour into the prepared pie_crust .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(prepared-4,prepared-4-sense)
is_a(prepared-4-sense,prepared.a.01)
has_sense(pie_crust-5,pie_crust-5-sense)
is_a(pie_crust-5-sense,pie_crust.n.01)
root(ROOT-0, pour-1)
det(pie_crust-5, the-3)
amod(pie_crust-5, prepared-4)
prep_into(pour-1, pie_crust-5)
has_pos(pour-1,VB)
has_pos(the-3,DT)
has_pos(prepared-4,JJ)
has_pos(pie_crust-5,NN)
has_sense(the-3, null)
---
// pour the batter into the pan then bake for 25 minutes , check periodically to ensure even baking .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(batter-3,batter-3-sense)
is_a(batter-3-sense,batter.n.02)
has_sense(pan-6,pan-6-sense)
is_a(pan-6-sense,pan.n.01)
has_sense(then-7,then-7-sense)
is_a(then-7-sense,then.r.01)
has_sense(bake-8,bake-8-sense)
is_a(bake-8-sense,bake.v.01)
has_sense(check-13,check-13-sense)
is_a(check-13-sense,check.v.01)
has_sense(periodically-14,periodically-14-sense)
is_a(periodically-14-sense,sporadically.r.01)
has_sense(ensure-16,ensure-16-sense)
is_a(ensure-16-sense,guarantee.v.02)
root(ROOT-0, pour-1)
det(batter-3, the-2)
dobj(pour-1, batter-3)
det(bake-8, the-5)
amod(bake-8, pan-6)
amod(bake-8, then-7)
prep_into(pour-1, bake-8)
num(minutes-11, 25-10)
prep_for(bake-8, minutes-11)
dep(pour-1, check-13)
advmod(check-13, periodically-14)
aux(ensure-16, to-15)
xcomp(check-13, ensure-16)
advmod(baking-18, even-17)
dobj(ensure-16, baking-18)
has_pos(pour-1,VB)
has_pos(the-2,DT)
has_pos(batter-3,NN)
has_pos(the-5,DT)
has_pos(pan-6,JJ)
has_pos(then-7,JJ)
has_pos(bake-8,NN)
has_pos(25-10,CD)
has_pos(minutes-11,NNS)
has_pos(check-13,VB)
has_pos(periodically-14,RB)
has_pos(to-15,TO)
has_pos(ensure-16,VB)
has_pos(even-17,RB)
has_pos(baking-18,JJ)
has_sense(baking-18, null)
has_sense(the-5, null)
has_sense(the-2, null)
has_sense(even-17, null)
has_sense(25-10, null)
has_sense(minutes-11, null)
has_sense(to-15, null)
---
// pour about 3 tablespoon to 1\/4 cup batter from the tip of a large spoon .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(about-2,about-2-sense)
is_a(about-2-sense,approximately.r.01)
has_sense(tablespoon-4,tablespoon-4-sense)
is_a(tablespoon-4-sense,tablespoon.n.01)
has_sense(cup-7,cup-7-sense)
is_a(cup-7-sense,cup.n.04)
has_sense(batter-8,batter-8-sense)
is_a(batter-8-sense,batter.n.02)
has_sense(tip-11,tip-11-sense)
is_a(tip-11-sense,tip.n.01)
has_sense(large-14,large-14-sense)
is_a(large-14-sense,large.a.01)
has_sense(spoon-15,spoon-15-sense)
is_a(spoon-15-sense,spoon.n.01)
root(ROOT-0, pour-1)
quantmod(3-3, about-2)
num(tablespoon-4, 3-3)
dobj(pour-1, tablespoon-4)
num(batter-8, 1\/4-6)
nn(batter-8, cup-7)
prep_to(pour-1, batter-8)
det(tip-11, the-10)
prep_from(pour-1, tip-11)
det(spoon-15, a-13)
amod(spoon-15, large-14)
prep_of(tip-11, spoon-15)
has_pos(pour-1,VB)
has_pos(about-2,RB)
has_pos(3-3,CD)
has_pos(tablespoon-4,NNS)
has_pos(1\/4-6,CD)
has_pos(cup-7,NN)
has_pos(batter-8,NN)
has_pos(the-10,DT)
has_pos(tip-11,NN)
has_pos(a-13,DT)
has_pos(large-14,JJ)
has_pos(spoon-15,NN)
has_sense(1\/4-6, null)
has_sense(a-13, null)
has_sense(3-3, null)
has_sense(the-10, null)
---
// pour into a pitcher or jug for storage .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(pitcher-4,pitcher-4-sense)
is_a(pitcher-4-sense,pitcher.n.02)
has_sense(jug-6,jug-6-sense)
is_a(jug-6-sense,jug.n.01)
has_sense(storage-8,storage-8-sense)
is_a(storage-8-sense,storage.n.01)
root(ROOT-0, pour-1)
det(pitcher-4, a-3)
prep_into(pour-1, pitcher-4)
conj_or(pitcher-4, jug-6)
prep_for(pitcher-4, storage-8)
has_pos(pour-1,VB)
has_pos(a-3,DT)
has_pos(pitcher-4,NN)
has_pos(jug-6,NN)
has_pos(storage-8,NN)
has_sense(a-3, null)
---
// Pour into greased and flour pan or fancy cake tin .
has_sense(greased-3,greased-3-sense)
is_a(greased-3-sense,lubricated.a.01)
has_sense(flour-5,flour-5-sense)
is_a(flour-5-sense,flour.v.01)
has_sense(pan-6,pan-6-sense)
is_a(pan-6-sense,pan.n.01)
has_sense(fancy-8,fancy-8-sense)
is_a(fancy-8-sense,fancy.a.01)
has_sense(cake-9,cake-9-sense)
is_a(cake-9-sense,cake.n.03)
has_sense(tin-10,tin-10-sense)
is_a(tin-10-sense,tin.n.02)
root(ROOT-0, Pour-1)
nn(pan-6, greased-3)
conj_and(greased-3, flour-5)
prep_into(Pour-1, pan-6)
amod(tin-10, fancy-8)
nn(tin-10, cake-9)
conj_or(pan-6, tin-10)
has_pos(Pour-1,VB)
has_pos(greased-3,NN)
has_pos(flour-5,NN)
has_pos(pan-6,NNS)
has_pos(fancy-8,JJ)
has_pos(cake-9,NN)
has_pos(tin-10,NN)
has_sense(Pour-1, null)
---
// just before serve , pour in the lime_juice .
has_sense(just-1,just-1-sense)
is_a(just-1-sense,barely.r.01)
has_sense(serve-3,serve-3-sense)
is_a(serve-3-sense,serve.v.05)
has_sense(pour-5,pour-5-sense)
is_a(pour-5-sense,pour.v.01)
has_sense(lime_juice-8,lime_juice-8-sense)
is_a(lime_juice-8-sense,lime_juice.n.01)
advmod(serve-3, just-1)
dep(serve-3, before-2)
advcl(pour-5, serve-3)
root(ROOT-0, pour-5)
det(lime_juice-8, the-7)
prep_in(pour-5, lime_juice-8)
has_pos(just-1,RB)
has_pos(before-2,IN)
has_pos(serve-3,VBP)
has_pos(pour-5,VB)
has_pos(the-7,DT)
has_pos(lime_juice-8,NN)
has_sense(before-2, null)
has_sense(the-7, null)
---
// pour half of the egg_white mixture into another mixing_bowl .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(half-2,half-2-sense)
is_a(half-2-sense,one-half.n.01)
has_sense(egg_white-5,egg_white-5-sense)
is_a(egg_white-5-sense,egg_white.n.01)
has_sense(mixture-6,mixture-6-sense)
is_a(mixture-6-sense,concoction.n.01)
has_sense(mixing_bowl-9,mixing_bowl-9-sense)
is_a(mixing_bowl-9-sense,mixing_bowl.n.01)
root(ROOT-0, pour-1)
dobj(pour-1, half-2)
det(mixture-6, the-4)
amod(mixture-6, egg_white-5)
prep_of(half-2, mixture-6)
det(mixing_bowl-9, another-8)
prep_into(pour-1, mixing_bowl-9)
has_pos(pour-1,VB)
has_pos(half-2,NN)
has_pos(the-4,DT)
has_pos(egg_white-5,JJ)
has_pos(mixture-6,NN)
has_pos(another-8,DT)
has_pos(mixing_bowl-9,NN)
has_sense(another-8, null)
has_sense(the-4, null)
---
// pour the oil in the deep fryer .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(oil-3,oil-3-sense)
is_a(oil-3-sense,vegetable_oil.n.01)
has_sense(deep-6,deep-6-sense)
is_a(deep-6-sense,deep.a.03)
root(ROOT-0, pour-1)
det(oil-3, the-2)
dobj(pour-1, oil-3)
det(fryer-7, the-5)
amod(fryer-7, deep-6)
prep_in(oil-3, fryer-7)
has_pos(pour-1,VB)
has_pos(the-2,DT)
has_pos(oil-3,NN)
has_pos(the-5,DT)
has_pos(deep-6,JJ)
has_pos(fryer-7,NN)
has_sense(the-5, null)
has_sense(the-2, null)
has_sense(fryer-7, null)
---
// pour the milk into a clean container or container .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(milk-3,milk-3-sense)
is_a(milk-3-sense,milk.n.01)
has_sense(clean-6,clean-6-sense)
is_a(clean-6-sense,clean.a.01)
has_sense(container-7,container-7-sense)
is_a(container-7-sense,container.n.01)
has_sense(container-9,container-9-sense)
is_a(container-9-sense,container.n.01)
root(ROOT-0, pour-1)
det(milk-3, the-2)
dobj(pour-1, milk-3)
det(clean-6, a-5)
prep_into(pour-1, clean-6)
dep(clean-6, container-7)
conj_or(container-7, container-9)
has_pos(pour-1,VB)
has_pos(the-2,DT)
has_pos(milk-3,NN)
has_pos(a-5,DT)
has_pos(clean-6,JJ)
has_pos(container-7,NN)
has_pos(container-9,NN)
has_sense(a-5, null)
has_sense(the-2, null)
---
// pour water to about halfway in a pan .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(water-2,water-2-sense)
is_a(water-2-sense,water.n.06)
has_sense(about-4,about-4-sense)
is_a(about-4-sense,approximately.r.01)
has_sense(pan-8,pan-8-sense)
is_a(pan-8-sense,pan.n.01)
root(ROOT-0, pour-1)
dobj(pour-1, water-2)
quantmod(halfway-5, about-4)
prep_to(pour-1, halfway-5)
det(pan-8, a-7)
prep_in(pour-1, pan-8)
has_pos(pour-1,VB)
has_pos(water-2,NN)
has_pos(about-4,RB)
has_pos(halfway-5,CD)
has_pos(a-7,DT)
has_pos(pan-8,NN)
has_sense(halfway-5, null)
has_sense(a-7, null)
---
// pour can pineapple and juice over the top .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(can-2,can-2-sense)
is_a(can-2-sense,can.v.01)
has_sense(pineapple-3,pineapple-3-sense)
is_a(pineapple-3-sense,pineapple.n.02)
has_sense(juice-5,juice-5-sense)
is_a(juice-5-sense,juice.n.01)
has_sense(top-8,top-8-sense)
is_a(top-8-sense,top.n.02)
nsubj(pineapple-3, pour-1)
aux(pineapple-3, can-2)
root(ROOT-0, pineapple-3)
conj_and(pineapple-3, juice-5)
prt(juice-5, over-6)
det(top-8, the-7)
dobj(juice-5, top-8)
has_pos(pour-1,NNP)
has_pos(can-2,MD)
has_pos(pineapple-3,VB)
has_pos(juice-5,NN)
has_pos(over-6,RP)
has_pos(the-7,DT)
has_pos(top-8,NN)
has_sense(the-7, null)
has_sense(over-6, null)
---
// alternatively , pour direct into glasses for immediate serving .
has_sense(alternatively-1,alternatively-1-sense)
is_a(alternatively-1-sense,alternatively.r.01)
has_sense(pour-3,pour-3-sense)
is_a(pour-3-sense,decant.v.01)
has_sense(immediate-8,immediate-8-sense)
is_a(immediate-8-sense,immediate.s.05)
advmod(pour-3, alternatively-1)
root(ROOT-0, pour-3)
acomp(pour-3, direct-4)
prep_into(direct-4, glasses-6)
amod(serving-9, immediate-8)
prep_for(glasses-6, serving-9)
has_pos(alternatively-1,RB)
has_pos(pour-3,VB)
has_pos(direct-4,JJ)
has_pos(glasses-6,NNS)
has_pos(immediate-8,JJ)
has_pos(serving-9,NNS)
has_sense(glasses-6, null)
has_sense(serving-9, null)
has_sense(direct-4, null)
---
// pour over chicken .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(chicken-3,chicken-3-sense)
is_a(chicken-3-sense,chicken.n.01)
root(ROOT-0, pour-1)
prt(pour-1, over-2)
dobj(pour-1, chicken-3)
has_pos(pour-1,VB)
has_pos(over-2,RP)
has_pos(chicken-3,NN)
has_sense(over-2, null)
---
// pour a quarter cup of popcorn kernel into a paper_bag .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(quarter-3,quarter-3-sense)
is_a(quarter-3-sense,one-fourth.n.01)
has_sense(cup-4,cup-4-sense)
is_a(cup-4-sense,cup.n.02)
has_sense(popcorn-6,popcorn-6-sense)
is_a(popcorn-6-sense,popcorn.n.02)
has_sense(kernel-7,kernel-7-sense)
is_a(kernel-7-sense,kernel.n.02)
has_sense(paper_bag-10,paper_bag-10-sense)
is_a(paper_bag-10-sense,sack.n.01)
root(ROOT-0, pour-1)
det(cup-4, a-2)
nn(cup-4, quarter-3)
dobj(pour-1, cup-4)
nn(kernel-7, popcorn-6)
prep_of(cup-4, kernel-7)
det(paper_bag-10, a-9)
prep_into(pour-1, paper_bag-10)
has_pos(pour-1,VB)
has_pos(a-2,DT)
has_pos(quarter-3,NN)
has_pos(cup-4,NN)
has_pos(popcorn-6,NN)
has_pos(kernel-7,NN)
has_pos(a-9,DT)
has_pos(paper_bag-10,NN)
has_sense(a-9, null)
has_sense(a-2, null)
---
// pour the mix into the frying_pan .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(mix-3,mix-3-sense)
is_a(mix-3-sense,mix.n.01)
has_sense(frying_pan-6,frying_pan-6-sense)
is_a(frying_pan-6-sense,frying_pan.n.01)
root(ROOT-0, pour-1)
det(mix-3, the-2)
dobj(pour-1, mix-3)
det(frying_pan-6, the-5)
prep_into(pour-1, frying_pan-6)
has_pos(pour-1,VB)
has_pos(the-2,DT)
has_pos(mix-3,NN)
has_pos(the-5,DT)
has_pos(frying_pan-6,NN)
has_sense(the-5, null)
has_sense(the-2, null)
---
// Pour two cup of water into the pot .
has_sense(cup-3,cup-3-sense)
is_a(cup-3-sense,cup.n.02)
has_sense(water-5,water-5-sense)
is_a(water-5-sense,water.n.06)
has_sense(pot-8,pot-8-sense)
is_a(pot-8-sense,pot.n.01)
root(ROOT-0, Pour-1)
num(cup-3, two-2)
dobj(Pour-1, cup-3)
prep_of(cup-3, water-5)
det(pot-8, the-7)
prep_into(Pour-1, pot-8)
has_pos(Pour-1,VB)
has_pos(two-2,CD)
has_pos(cup-3,NN)
has_pos(water-5,NN)
has_pos(the-7,DT)
has_pos(pot-8,NN)
has_sense(the-7, null)
has_sense(two-2, null)
has_sense(Pour-1, null)
---
// pour in three quarters of the stock and stir .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(stock-7,stock-7-sense)
is_a(stock-7-sense,broth.n.01)
has_sense(stir-9,stir-9-sense)
is_a(stir-9-sense,stir.v.01)
root(ROOT-0, pour-1)
num(quarters-4, three-3)
prep_in(pour-1, quarters-4)
det(stock-7, the-6)
prep_of(quarters-4, stock-7)
conj_and(pour-1, stir-9)
has_pos(pour-1,VB)
has_pos(three-3,CD)
has_pos(quarters-4,NNS)
has_pos(the-6,DT)
has_pos(stock-7,NN)
has_pos(stir-9,VB)
has_sense(the-6, null)
has_sense(three-3, null)
has_sense(quarters-4, null)
---
// pour batter into prepared cake pan .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,decant.v.01)
has_sense(batter-2,batter-2-sense)
is_a(batter-2-sense,batter.n.02)
has_sense(prepared-4,prepared-4-sense)
is_a(prepared-4-sense,prepared.a.01)
has_sense(cake-5,cake-5-sense)
is_a(cake-5-sense,cake.n.03)
has_sense(pan-6,pan-6-sense)
is_a(pan-6-sense,pan.n.01)
root(ROOT-0, pour-1)
dobj(pour-1, batter-2)
amod(pan-6, prepared-4)
nn(pan-6, cake-5)
prep_into(pour-1, pan-6)
has_pos(pour-1,VB)
has_pos(batter-2,NN)
has_pos(prepared-4,JJ)
has_pos(cake-5,NN)
has_pos(pan-6,NNS)
---
// pour the water into the pot .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(water-3,water-3-sense)
is_a(water-3-sense,water.n.06)
has_sense(pot-6,pot-6-sense)
is_a(pot-6-sense,pot.n.01)
root(ROOT-0, pour-1)
det(water-3, the-2)
dobj(pour-1, water-3)
det(pot-6, the-5)
prep_into(pour-1, pot-6)
has_pos(pour-1,VB)
has_pos(the-2,DT)
has_pos(water-3,NN)
has_pos(the-5,DT)
has_pos(pot-6,NN)
has_sense(the-5, null)
has_sense(the-2, null)
---
// pour the mix into a 9x13 pan .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(pan-7,pan-7-sense)
is_a(pan-7-sense,pan.n.01)
root(ROOT-0, pour-1)
det(mix-3, the-2)
dobj(pour-1, mix-3)
det(pan-7, a-5)
amod(pan-7, 9x13-6)
prep_into(pour-1, pan-7)
has_pos(pour-1,VB)
has_pos(the-2,DT)
has_pos(mix-3,NN)
has_pos(a-5,DT)
has_pos(9x13-6,JJ)
has_pos(pan-7,NN)
has_sense(the-2, null)
has_sense(mix-3, null)
has_sense(9x13-6, null)
has_sense(a-5, null)
---
// make a well in the dry ingredient and pour in the egg_yolk mixture .
has_sense(make-1,make-1-sense)
is_a(make-1-sense,make.v.03)
has_sense(well-3,well-3-sense)
is_a(well-3-sense,well.n.02)
has_sense(dry-6,dry-6-sense)
is_a(dry-6-sense,dry.a.01)
has_sense(ingredient-7,ingredient-7-sense)
is_a(ingredient-7-sense,ingredient.n.03)
has_sense(pour-9,pour-9-sense)
is_a(pour-9-sense,pour.v.01)
has_sense(egg_yolk-12,egg_yolk-12-sense)
is_a(egg_yolk-12-sense,egg_yolk.n.01)
has_sense(mixture-13,mixture-13-sense)
is_a(mixture-13-sense,concoction.n.01)
root(ROOT-0, make-1)
det(well-3, a-2)
dobj(make-1, well-3)
det(ingredient-7, the-5)
amod(ingredient-7, dry-6)
prep_in(well-3, ingredient-7)
conj_and(make-1, pour-9)
det(mixture-13, the-11)
nn(mixture-13, egg_yolk-12)
prep_in(pour-9, mixture-13)
has_pos(make-1,VB)
has_pos(a-2,DT)
has_pos(well-3,NN)
has_pos(the-5,DT)
has_pos(dry-6,JJ)
has_pos(ingredient-7,NN)
has_pos(pour-9,VB)
has_pos(the-11,DT)
has_pos(egg_yolk-12,NN)
has_pos(mixture-13,NN)
has_sense(the-5, null)
has_sense(a-2, null)
has_sense(the-11, null)
---
// place the stir-fry back on the heat and pour over the sauce .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(pour-9,pour-9-sense)
is_a(pour-9-sense,pour.v.01)
has_sense(sauce-12,sauce-12-sense)
is_a(sauce-12-sense,sauce.n.01)
root(ROOT-0, place-1)
det(back-4, the-2)
amod(back-4, stir-fry-3)
dobj(place-1, back-4)
det(heat-7, the-6)
prep_on(place-1, heat-7)
conj_and(place-1, pour-9)
prt(pour-9, over-10)
det(sauce-12, the-11)
dobj(pour-9, sauce-12)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(stir-fry-3,JJ)
has_pos(back-4,NN)
has_pos(the-6,DT)
has_pos(heat-7,NN)
has_pos(pour-9,VB)
has_pos(over-10,RP)
has_pos(the-11,DT)
has_pos(sauce-12,NN)
has_sense(the-6, null)
has_sense(the-2, null)
has_sense(back-4, null)
has_sense(stir-fry-3, null)
has_sense(over-10, null)
has_sense(heat-7, null)
has_sense(the-11, null)
---
// After about 2 minutes , you may pour in the eggs and the rice .
has_sense(about-2,about-2-sense)
is_a(about-2-sense,approximately.r.01)
has_sense(pour-8,pour-8-sense)
is_a(pour-8-sense,pour.v.01)
has_sense(eggs-11,eggs-11-sense)
is_a(eggs-11-sense,egg.n.02)
has_sense(rice-14,rice-14-sense)
is_a(rice-14-sense,rice.n.01)
quantmod(2-3, about-2)
num(minutes-4, 2-3)
prep_after(pour-8, minutes-4)
nsubj(pour-8, you-6)
aux(pour-8, may-7)
root(ROOT-0, pour-8)
det(eggs-11, the-10)
prep_in(pour-8, eggs-11)
det(rice-14, the-13)
conj_and(eggs-11, rice-14)
has_pos(about-2,RB)
has_pos(2-3,CD)
has_pos(minutes-4,NNS)
has_pos(you-6,PRP)
has_pos(may-7,MD)
has_pos(pour-8,VB)
has_pos(the-10,DT)
has_pos(eggs-11,NNS)
has_pos(the-13,DT)
has_pos(rice-14,NN)
has_sense(2-3, null)
has_sense(you-6, null)
has_sense(minutes-4, null)
has_sense(may-7, null)
has_sense(the-13, null)
has_sense(the-10, null)
---
// pour the cooked cream over the cooked pasta .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(cooked-3,cooked-3-sense)
is_a(cooked-3-sense,cooked.a.01)
has_sense(cream-4,cream-4-sense)
is_a(cream-4-sense,cream.n.02)
has_sense(cooked-7,cooked-7-sense)
is_a(cooked-7-sense,cooked.a.01)
has_sense(pasta-8,pasta-8-sense)
is_a(pasta-8-sense,pasta.n.02)
root(ROOT-0, pour-1)
det(cream-4, the-2)
amod(cream-4, cooked-3)
dobj(pour-1, cream-4)
det(pasta-8, the-6)
amod(pasta-8, cooked-7)
prep_over(pour-1, pasta-8)
has_pos(pour-1,VB)
has_pos(the-2,DT)
has_pos(cooked-3,JJ)
has_pos(cream-4,NN)
has_pos(the-6,DT)
has_pos(cooked-7,JJ)
has_pos(pasta-8,NN)
has_sense(the-6, null)
has_sense(the-2, null)
---
// mix well and pour into prepared crust .
has_sense(mix-1,mix-1-sense)
is_a(mix-1-sense,blend.v.03)
has_sense(well-2,well-2-sense)
is_a(well-2-sense,well.r.02)
has_sense(pour-4,pour-4-sense)
is_a(pour-4-sense,decant.v.01)
has_sense(prepared-6,prepared-6-sense)
is_a(prepared-6-sense,prepared.a.01)
root(ROOT-0, mix-1)
advmod(mix-1, well-2)
conj_and(mix-1, pour-4)
amod(crust-7, prepared-6)
prep_into(pour-4, crust-7)
has_pos(mix-1,VB)
has_pos(well-2,RB)
has_pos(pour-4,VB)
has_pos(prepared-6,JJ)
has_pos(crust-7,NN)
has_sense(crust-7, null)
---
// Pour batter into two grease and flour 9-inch round cake pan .
has_sense(batter-2,batter-2-sense)
is_a(batter-2-sense,batter.n.02)
has_sense(grease-5,grease-5-sense)
is_a(grease-5-sense,grease.v.01)
has_sense(flour-7,flour-7-sense)
is_a(flour-7-sense,flour.v.01)
has_sense(cake-10,cake-10-sense)
is_a(cake-10-sense,cake.n.03)
has_sense(pan-11,pan-11-sense)
is_a(pan-11-sense,pan.n.01)
nsubj(batter-2, Pour-1)
root(ROOT-0, batter-2)
num(grease-5, two-4)
prep_into(batter-2, grease-5)
nn(pan-11, flour-7)
amod(pan-11, 9-inch-8)
nn(pan-11, round-9)
nn(pan-11, cake-10)
conj_and(grease-5, pan-11)
has_pos(Pour-1,NNP)
has_pos(batter-2,VB)
has_pos(two-4,CD)
has_pos(grease-5,NN)
has_pos(flour-7,NN)
has_pos(9-inch-8,JJ)
has_pos(round-9,NN)
has_pos(cake-10,NN)
has_pos(pan-11,NNS)
has_sense(9-inch-8, null)
has_sense(two-4, null)
has_sense(Pour-1, null)
has_sense(round-9, null)
---
// pour the cornmeal slowly into the water .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(cornmeal-3,cornmeal-3-sense)
is_a(cornmeal-3-sense,cornmeal.n.01)
has_sense(slowly-4,slowly-4-sense)
is_a(slowly-4-sense,slowly.r.01)
has_sense(water-7,water-7-sense)
is_a(water-7-sense,water.n.06)
root(ROOT-0, pour-1)
det(cornmeal-3, the-2)
dobj(pour-1, cornmeal-3)
advmod(pour-1, slowly-4)
det(water-7, the-6)
prep_into(pour-1, water-7)
has_pos(pour-1,VB)
has_pos(the-2,DT)
has_pos(cornmeal-3,NN)
has_pos(slowly-4,RB)
has_pos(the-6,DT)
has_pos(water-7,NN)
has_sense(the-6, null)
has_sense(the-2, null)
---
// pour soy_sauce into container .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(soy_sauce-2,soy_sauce-2-sense)
is_a(soy_sauce-2-sense,soy_sauce.n.01)
has_sense(container-4,container-4-sense)
is_a(container-4-sense,container.n.01)
root(ROOT-0, pour-1)
dobj(pour-1, soy_sauce-2)
prep_into(pour-1, container-4)
has_pos(pour-1,VB)
has_pos(soy_sauce-2,NN)
has_pos(container-4,NN)
---
// You can pour it off or stir it in before eat your yogurt .
has_sense(pour-3,pour-3-sense)
is_a(pour-3-sense,decant.v.01)
has_sense(stir-7,stir-7-sense)
is_a(stir-7-sense,stir.v.01)
has_sense(before-10,before-10-sense)
is_a(before-10-sense,earlier.r.01)
has_sense(eat-11,eat-11-sense)
is_a(eat-11-sense,eat.v.01)
has_sense(yogurt-13,yogurt-13-sense)
is_a(yogurt-13-sense,yogurt.n.01)
nsubj(pour-3, You-1)
aux(pour-3, can-2)
root(ROOT-0, pour-3)
dobj(pour-3, it-4)
prt(pour-3, off-5)
conj_or(pour-3, stir-7)
dobj(stir-7, it-8)
mark(eat-11, before-10)
prepc_in(stir-7, eat-11)
poss(yogurt-13, your-12)
dobj(eat-11, yogurt-13)
has_pos(You-1,PRP)
has_pos(can-2,MD)
has_pos(pour-3,VB)
has_pos(it-4,PRP)
has_pos(off-5,RP)
has_pos(stir-7,VB)
has_pos(it-8,PRP)
has_pos(before-10,IN)
has_pos(eat-11,VBP)
has_pos(your-12,PRP$)
has_pos(yogurt-13,NN)
has_sense(You-1, null)
has_sense(your-12, null)
has_sense(it-4, null)
has_sense(off-5, null)
has_sense(can-2, null)
has_sense(it-8, null)
---
// pour batter into the prepared pan .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(batter-2,batter-2-sense)
is_a(batter-2-sense,batter.n.02)
has_sense(prepared-5,prepared-5-sense)
is_a(prepared-5-sense,prepared.a.01)
has_sense(pan-6,pan-6-sense)
is_a(pan-6-sense,pan.n.01)
root(ROOT-0, pour-1)
dobj(pour-1, batter-2)
det(pan-6, the-4)
amod(pan-6, prepared-5)
prep_into(pour-1, pan-6)
has_pos(pour-1,VB)
has_pos(batter-2,NN)
has_pos(the-4,DT)
has_pos(prepared-5,JJ)
has_pos(pan-6,NN)
has_sense(the-4, null)
---
// pour in the wine and stir until the wine evaporate .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,decant.v.01)
has_sense(wine-4,wine-4-sense)
is_a(wine-4-sense,wine.n.01)
has_sense(stir-6,stir-6-sense)
is_a(stir-6-sense,stir.v.01)
has_sense(wine-9,wine-9-sense)
is_a(wine-9-sense,wine.n.01)
has_sense(evaporate-10,evaporate-10-sense)
is_a(evaporate-10-sense,evaporate.v.01)
root(ROOT-0, pour-1)
det(wine-4, the-3)
prep_in(pour-1, wine-4)
conj_and(pour-1, stir-6)
mark(evaporate-10, until-7)
det(wine-9, the-8)
nsubj(evaporate-10, wine-9)
advcl(stir-6, evaporate-10)
has_pos(pour-1,VB)
has_pos(the-3,DT)
has_pos(wine-4,NN)
has_pos(stir-6,VB)
has_pos(until-7,IN)
has_pos(the-8,DT)
has_pos(wine-9,NN)
has_pos(evaporate-10,VB)
has_sense(the-3, null)
has_sense(the-8, null)
has_sense(until-7, null)
---
// open the can of coconut_milk and pour it into the pot .
has_sense(open-1,open-1-sense)
is_a(open-1-sense,open.v.01)
has_sense(can-3,can-3-sense)
is_a(can-3-sense,can.n.01)
has_sense(coconut_milk-5,coconut_milk-5-sense)
is_a(coconut_milk-5-sense,coconut_milk.n.01)
has_sense(pot-11,pot-11-sense)
is_a(pot-11-sense,pot.n.01)
root(ROOT-0, open-1)
det(can-3, the-2)
dobj(open-1, can-3)
prep_of(can-3, coconut_milk-5)
conj_and(open-1, pour-7)
dobj(pour-7, it-8)
det(pot-11, the-10)
prep_into(pour-7, pot-11)
has_pos(open-1,VB)
has_pos(the-2,DT)
has_pos(can-3,NN)
has_pos(coconut_milk-5,NN)
has_pos(pour-7,VB)
has_pos(it-8,PRP)
has_pos(the-10,DT)
has_pos(pot-11,NN)
has_sense(the-2, null)
has_sense(pour-7, null)
has_sense(the-10, null)
has_sense(it-8, null)
---
// Form a well in the center ; pour in yeast mixture and remain warm water .
has_sense(well-3,well-3-sense)
is_a(well-3-sense,well.n.02)
has_sense(center-6,center-6-sense)
is_a(center-6-sense,center.n.01)
has_sense(pour-8,pour-8-sense)
is_a(pour-8-sense,pour.v.01)
has_sense(yeast-10,yeast-10-sense)
is_a(yeast-10-sense,yeast.n.01)
has_sense(mixture-11,mixture-11-sense)
is_a(mixture-11-sense,concoction.n.01)
has_sense(remain-13,remain-13-sense)
is_a(remain-13-sense,remain.v.03)
has_sense(warm-14,warm-14-sense)
is_a(warm-14-sense,warm.a.01)
has_sense(water-15,water-15-sense)
is_a(water-15-sense,water.n.06)
det(well-3, a-2)
prep_form(pour-8, well-3)
det(center-6, the-5)
prep_in(well-3, center-6)
root(ROOT-0, pour-8)
nn(mixture-11, yeast-10)
prep_in(pour-8, mixture-11)
cop(water-15, remain-13)
amod(water-15, warm-14)
conj_and(pour-8, water-15)
has_pos(a-2,DT)
has_pos(well-3,NN)
has_pos(the-5,DT)
has_pos(center-6,NN)
has_pos(pour-8,VB)
has_pos(yeast-10,NN)
has_pos(mixture-11,NN)
has_pos(remain-13,VB)
has_pos(warm-14,JJ)
has_pos(water-15,NN)
has_sense(the-5, null)
has_sense(a-2, null)
---
// meanwhile pour some olive_oil in a medium saucepan and add 3 clove of garlic unpeeled .
has_sense(meanwhile-1,meanwhile-1-sense)
is_a(meanwhile-1-sense,meanwhile.r.02)
has_sense(pour-2,pour-2-sense)
is_a(pour-2-sense,pour.v.01)
has_sense(olive_oil-4,olive_oil-4-sense)
is_a(olive_oil-4-sense,olive_oil.n.01)
has_sense(saucepan-8,saucepan-8-sense)
is_a(saucepan-8-sense,saucepan.n.01)
has_sense(add-10,add-10-sense)
is_a(add-10-sense,add.v.01)
has_sense(clove-12,clove-12-sense)
is_a(clove-12-sense,clove.n.03)
has_sense(garlic-14,garlic-14-sense)
is_a(garlic-14-sense,garlic.n.02)
advmod(pour-2, meanwhile-1)
root(ROOT-0, pour-2)
det(olive_oil-4, some-3)
dobj(pour-2, olive_oil-4)
det(saucepan-8, a-6)
nn(saucepan-8, medium-7)
prep_in(olive_oil-4, saucepan-8)
conj_and(pour-2, add-10)
num(clove-12, 3-11)
dobj(add-10, clove-12)
amod(unpeeled-15, garlic-14)
prep_of(clove-12, unpeeled-15)
has_pos(meanwhile-1,RB)
has_pos(pour-2,VB)
has_pos(some-3,DT)
has_pos(olive_oil-4,NN)
has_pos(a-6,DT)
has_pos(medium-7,NN)
has_pos(saucepan-8,NN)
has_pos(add-10,VB)
has_pos(3-11,CD)
has_pos(clove-12,NN)
has_pos(garlic-14,JJ)
has_pos(unpeeled-15,NN)
has_sense(unpeeled-15, null)
has_sense(some-3, null)
has_sense(3-11, null)
has_sense(medium-7, null)
has_sense(a-6, null)
---
// pour the mixture into a large jug or bowl through a sieve to catch the seed .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(mixture-3,mixture-3-sense)
is_a(mixture-3-sense,concoction.n.01)
has_sense(large-6,large-6-sense)
is_a(large-6-sense,large.a.01)
has_sense(jug-7,jug-7-sense)
is_a(jug-7-sense,jug.n.01)
has_sense(sieve-12,sieve-12-sense)
is_a(sieve-12-sense,sieve.n.01)
has_sense(catch-14,catch-14-sense)
is_a(catch-14-sense,catch.v.25)
has_sense(seed-16,seed-16-sense)
is_a(seed-16-sense,seed.n.02)
root(ROOT-0, pour-1)
det(mixture-3, the-2)
dobj(pour-1, mixture-3)
det(jug-7, a-5)
amod(jug-7, large-6)
prep_into(pour-1, jug-7)
conj_or(pour-1, bowl-9)
det(sieve-12, a-11)
prep_through(bowl-9, sieve-12)
aux(catch-14, to-13)
infmod(sieve-12, catch-14)
det(seed-16, the-15)
dobj(catch-14, seed-16)
has_pos(pour-1,VB)
has_pos(the-2,DT)
has_pos(mixture-3,NN)
has_pos(a-5,DT)
has_pos(large-6,JJ)
has_pos(jug-7,NN)
has_pos(bowl-9,VBP)
has_pos(a-11,DT)
has_pos(sieve-12,NN)
has_pos(to-13,TO)
has_pos(catch-14,VB)
has_pos(the-15,DT)
has_pos(seed-16,NN)
has_sense(bowl-9, null)
has_sense(a-11, null)
has_sense(the-2, null)
has_sense(to-13, null)
has_sense(the-15, null)
has_sense(a-5, null)
---
// measure and pour the juice and honey into a blender .
has_sense(measure-1,measure-1-sense)
is_a(measure-1-sense,measure.v.01)
has_sense(pour-3,pour-3-sense)
is_a(pour-3-sense,pour.v.01)
has_sense(juice-5,juice-5-sense)
is_a(juice-5-sense,juice.n.01)
has_sense(honey-7,honey-7-sense)
is_a(honey-7-sense,honey.n.01)
has_sense(blender-10,blender-10-sense)
is_a(blender-10-sense,blender.n.01)
root(ROOT-0, measure-1)
conj_and(measure-1, pour-3)
det(juice-5, the-4)
dobj(measure-1, juice-5)
conj_and(juice-5, honey-7)
det(blender-10, a-9)
prep_into(measure-1, blender-10)
has_pos(measure-1,VB)
has_pos(pour-3,VB)
has_pos(the-4,DT)
has_pos(juice-5,NN)
has_pos(honey-7,NN)
has_pos(a-9,DT)
has_pos(blender-10,NN)
has_sense(the-4, null)
has_sense(a-9, null)
---
// crack each egg and pour contents into the pan .
has_sense(crack-1,crack-1-sense)
is_a(crack-1-sense,crack.v.01)
has_sense(egg-3,egg-3-sense)
is_a(egg-3-sense,egg.n.02)
has_sense(pour-5,pour-5-sense)
is_a(pour-5-sense,pour.v.01)
has_sense(pan-9,pan-9-sense)
is_a(pan-9-sense,pan.n.01)
root(ROOT-0, crack-1)
det(egg-3, each-2)
dobj(crack-1, egg-3)
conj_and(crack-1, pour-5)
dobj(pour-5, contents-6)
det(pan-9, the-8)
prep_into(pour-5, pan-9)
has_pos(crack-1,VB)
has_pos(each-2,DT)
has_pos(egg-3,NN)
has_pos(pour-5,VB)
has_pos(contents-6,NNS)
has_pos(the-8,DT)
has_pos(pan-9,NN)
has_sense(each-2, null)
has_sense(the-8, null)
has_sense(contents-6, null)
---
// pour the batter into your desired pan for your cake .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(batter-3,batter-3-sense)
is_a(batter-3-sense,batter.n.02)
has_sense(pan-7,pan-7-sense)
is_a(pan-7-sense,pan.n.01)
has_sense(cake-10,cake-10-sense)
is_a(cake-10-sense,cake.n.03)
root(ROOT-0, pour-1)
det(batter-3, the-2)
dobj(pour-1, batter-3)
poss(pan-7, your-5)
amod(pan-7, desired-6)
prep_into(pour-1, pan-7)
poss(cake-10, your-9)
prep_for(pan-7, cake-10)
has_pos(pour-1,VB)
has_pos(the-2,DT)
has_pos(batter-3,NN)
has_pos(your-5,PRP$)
has_pos(desired-6,VBN)
has_pos(pan-7,NN)
has_pos(your-9,PRP$)
has_pos(cake-10,NN)
has_sense(your-5, null)
has_sense(the-2, null)
has_sense(your-9, null)
has_sense(desired-6, null)
---
// When everything be cooked , carefully pour the sake into the skillet .
has_sense(be-3,be-3-sense)
is_a(be-3-sense,be.v.01)
has_sense(carefully-6,carefully-6-sense)
is_a(carefully-6-sense,carefully.r.01)
has_sense(pour-7,pour-7-sense)
is_a(pour-7-sense,pour.v.01)
has_sense(sake-9,sake-9-sense)
is_a(sake-9-sense,sake.n.02)
has_sense(skillet-12,skillet-12-sense)
is_a(skillet-12-sense,frying_pan.n.01)
advmod(cooked-4, When-1)
nsubjpass(cooked-4, everything-2)
auxpass(cooked-4, be-3)
advcl(pour-7, cooked-4)
advmod(pour-7, carefully-6)
root(ROOT-0, pour-7)
det(sake-9, the-8)
dobj(pour-7, sake-9)
det(skillet-12, the-11)
prep_into(pour-7, skillet-12)
has_pos(When-1,WRB)
has_pos(everything-2,NN)
has_pos(be-3,VB)
has_pos(cooked-4,VBN)
has_pos(carefully-6,RB)
has_pos(pour-7,VB)
has_pos(the-8,DT)
has_pos(sake-9,NN)
has_pos(the-11,DT)
has_pos(skillet-12,NN)
has_sense(cooked-4, null)
has_sense(When-1, null)
has_sense(everything-2, null)
has_sense(the-8, null)
has_sense(the-11, null)
---
// pour the batter into the pan that you previously grease .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(batter-3,batter-3-sense)
is_a(batter-3-sense,batter.n.02)
has_sense(pan-6,pan-6-sense)
is_a(pan-6-sense,pan.n.01)
has_sense(previously-9,previously-9-sense)
is_a(previously-9-sense,previously.r.01)
has_sense(grease-10,grease-10-sense)
is_a(grease-10-sense,grease.v.01)
root(ROOT-0, pour-1)
det(batter-3, the-2)
dobj(pour-1, batter-3)
det(pan-6, the-5)
prep_into(pour-1, pan-6)
complm(grease-10, that-7)
nsubj(grease-10, you-8)
advmod(grease-10, previously-9)
ccomp(pour-1, grease-10)
has_pos(pour-1,VB)
has_pos(the-2,DT)
has_pos(batter-3,NN)
has_pos(the-5,DT)
has_pos(pan-6,NN)
has_pos(that-7,IN)
has_pos(you-8,PRP)
has_pos(previously-9,RB)
has_pos(grease-10,VBZ)
has_sense(the-5, null)
has_sense(the-2, null)
has_sense(you-8, null)
has_sense(that-7, null)
---
// pour the batter onto the pan and when the pancake be ready flip it with the spatula .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,decant.v.01)
has_sense(batter-3,batter-3-sense)
is_a(batter-3-sense,batter.n.02)
has_sense(pan-6,pan-6-sense)
is_a(pan-6-sense,pan.n.01)
has_sense(pancake-10,pancake-10-sense)
is_a(pancake-10-sense,pancake.n.01)
has_sense(be-11,be-11-sense)
is_a(be-11-sense,be.v.01)
has_sense(ready-12,ready-12-sense)
is_a(ready-12-sense,ready.a.01)
has_sense(flip-13,flip-13-sense)
is_a(flip-13-sense,flip.v.08)
has_sense(spatula-17,spatula-17-sense)
is_a(spatula-17-sense,spatula.n.01)
csubj(flip-13, pour-1)
det(batter-3, the-2)
dobj(pour-1, batter-3)
det(pan-6, the-5)
prep_onto(pour-1, pan-6)
advmod(ready-12, when-8)
det(pancake-10, the-9)
nsubj(ready-12, pancake-10)
cop(ready-12, be-11)
conj_and(pour-1, ready-12)
root(ROOT-0, flip-13)
dobj(flip-13, it-14)
det(spatula-17, the-16)
prep_with(flip-13, spatula-17)
has_pos(pour-1,VBP)
has_pos(the-2,DT)
has_pos(batter-3,NN)
has_pos(the-5,DT)
has_pos(pan-6,NN)
has_pos(when-8,WRB)
has_pos(the-9,DT)
has_pos(pancake-10,NN)
has_pos(be-11,VB)
has_pos(ready-12,JJ)
has_pos(flip-13,VB)
has_pos(it-14,PRP)
has_pos(the-16,DT)
has_pos(spatula-17,NN)
has_sense(when-8, null)
has_sense(the-5, null)
has_sense(the-2, null)
has_sense(it-14, null)
has_sense(the-9, null)
has_sense(the-16, null)
---
// boil water and pour water into a mug .
has_sense(boil-1,boil-1-sense)
is_a(boil-1-sense,boil.v.03)
has_sense(water-2,water-2-sense)
is_a(water-2-sense,water.n.06)
has_sense(pour-4,pour-4-sense)
is_a(pour-4-sense,pour.v.01)
has_sense(water-5,water-5-sense)
is_a(water-5-sense,water.n.06)
has_sense(mug-8,mug-8-sense)
is_a(mug-8-sense,mug.n.04)
root(ROOT-0, boil-1)
dobj(boil-1, water-2)
conj_and(boil-1, pour-4)
dobj(pour-4, water-5)
det(mug-8, a-7)
prep_into(pour-4, mug-8)
has_pos(boil-1,VB)
has_pos(water-2,NN)
has_pos(pour-4,VB)
has_pos(water-5,NN)
has_pos(a-7,DT)
has_pos(mug-8,NN)
has_sense(a-7, null)
---
// Once the water be boil , carefully pour or place the noodle into the water .
has_sense(water-3,water-3-sense)
is_a(water-3-sense,water.n.06)
has_sense(be-4,be-4-sense)
is_a(be-4-sense,be.v.01)
has_sense(boil-5,boil-5-sense)
is_a(boil-5-sense,boil.v.01)
has_sense(carefully-7,carefully-7-sense)
is_a(carefully-7-sense,carefully.r.01)
has_sense(pour-8,pour-8-sense)
is_a(pour-8-sense,pour.v.01)
has_sense(place-10,place-10-sense)
is_a(place-10-sense,put.v.01)
has_sense(noodle-12,noodle-12-sense)
is_a(noodle-12-sense,noodle.n.01)
has_sense(water-15,water-15-sense)
is_a(water-15-sense,water.n.06)
mark(boil-5, Once-1)
det(water-3, the-2)
nsubjpass(boil-5, water-3)
auxpass(boil-5, be-4)
advcl(pour-8, boil-5)
advmod(pour-8, carefully-7)
root(ROOT-0, pour-8)
conj_or(pour-8, place-10)
det(noodle-12, the-11)
dobj(pour-8, noodle-12)
det(water-15, the-14)
prep_into(pour-8, water-15)
has_pos(Once-1,IN)
has_pos(the-2,DT)
has_pos(water-3,NN)
has_pos(be-4,VB)
has_pos(boil-5,VBN)
has_pos(carefully-7,RB)
has_pos(pour-8,VB)
has_pos(place-10,VB)
has_pos(the-11,DT)
has_pos(noodle-12,NN)
has_pos(the-14,DT)
has_pos(water-15,NN)
has_sense(Once-1, null)
has_sense(the-2, null)
has_sense(the-14, null)
has_sense(the-11, null)
---
// Leave for a minute and then pour out to wash the leaves .
has_sense(minute-4,minute-4-sense)
is_a(minute-4-sense,minute.n.01)
has_sense(then-6,then-6-sense)
is_a(then-6-sense,then.r.01)
has_sense(pour-7,pour-7-sense)
is_a(pour-7-sense,decant.v.01)
root(ROOT-0, Leave-1)
det(minute-4, a-3)
prep_for(Leave-1, minute-4)
advmod(pour-7, then-6)
conj_and(Leave-1, pour-7)
prt(pour-7, out-8)
aux(wash-10, to-9)
xcomp(pour-7, wash-10)
det(leaves-12, the-11)
dobj(wash-10, leaves-12)
has_pos(Leave-1,VB)
has_pos(a-3,DT)
has_pos(minute-4,NN)
has_pos(then-6,RB)
has_pos(pour-7,VB)
has_pos(out-8,RP)
has_pos(to-9,TO)
has_pos(wash-10,VB)
has_pos(the-11,DT)
has_pos(leaves-12,NNS)
has_sense(Leave-1, null)
has_sense(to-9, null)
has_sense(wash-10, null)
has_sense(leaves-12, null)
has_sense(out-8, null)
has_sense(a-3, null)
has_sense(the-11, null)
---
// Once the water be boil , carefully pour the noodle into the water .
has_sense(water-3,water-3-sense)
is_a(water-3-sense,water.n.06)
has_sense(be-4,be-4-sense)
is_a(be-4-sense,be.v.01)
has_sense(boil-5,boil-5-sense)
is_a(boil-5-sense,boil.v.01)
has_sense(carefully-7,carefully-7-sense)
is_a(carefully-7-sense,carefully.r.01)
has_sense(pour-8,pour-8-sense)
is_a(pour-8-sense,pour.v.01)
has_sense(noodle-10,noodle-10-sense)
is_a(noodle-10-sense,noodle.n.01)
has_sense(water-13,water-13-sense)
is_a(water-13-sense,water.n.01)
mark(boil-5, Once-1)
det(water-3, the-2)
nsubjpass(boil-5, water-3)
auxpass(boil-5, be-4)
advcl(pour-8, boil-5)
advmod(pour-8, carefully-7)
root(ROOT-0, pour-8)
det(noodle-10, the-9)
dobj(pour-8, noodle-10)
det(water-13, the-12)
prep_into(pour-8, water-13)
has_pos(Once-1,IN)
has_pos(the-2,DT)
has_pos(water-3,NN)
has_pos(be-4,VB)
has_pos(boil-5,VBN)
has_pos(carefully-7,RB)
has_pos(pour-8,VB)
has_pos(the-9,DT)
has_pos(noodle-10,NN)
has_pos(the-12,DT)
has_pos(water-13,NN)
has_sense(Once-1, null)
has_sense(the-2, null)
has_sense(the-9, null)
has_sense(the-12, null)
---
// pour the drink into a glass or jug , over ice if you like , add any garnish .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,decant.v.01)
has_sense(drink-3,drink-3-sense)
is_a(drink-3-sense,drink.n.01)
has_sense(glass-6,glass-6-sense)
is_a(glass-6-sense,glass.n.02)
has_sense(ice-11,ice-11-sense)
is_a(ice-11-sense,ice.n.01)
has_sense(like-14,like-14-sense)
is_a(like-14-sense,wish.v.02)
has_sense(add-16,add-16-sense)
is_a(add-16-sense,add.v.01)
has_sense(garnish-18,garnish-18-sense)
is_a(garnish-18-sense,garnish.n.01)
root(ROOT-0, pour-1)
det(drink-3, the-2)
dobj(pour-1, drink-3)
det(glass-6, a-5)
prep_into(pour-1, glass-6)
conj_or(pour-1, jug-8)
prep_over(jug-8, ice-11)
mark(like-14, if-12)
nsubj(like-14, you-13)
advcl(jug-8, like-14)
conj_or(pour-1, add-16)
det(garnish-18, any-17)
dobj(add-16, garnish-18)
has_pos(pour-1,VB)
has_pos(the-2,DT)
has_pos(drink-3,NN)
has_pos(a-5,DT)
has_pos(glass-6,NN)
has_pos(jug-8,VB)
has_pos(ice-11,NN)
has_pos(if-12,IN)
has_pos(you-13,PRP)
has_pos(like-14,VBP)
has_pos(add-16,VB)
has_pos(any-17,DT)
has_pos(garnish-18,NN)
has_sense(jug-8, null)
has_sense(the-2, null)
has_sense(you-13, null)
has_sense(if-12, null)
has_sense(any-17, null)
has_sense(a-5, null)
---
// pour the mixed cake into your cake pan .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(cake-4,cake-4-sense)
is_a(cake-4-sense,cake.n.03)
has_sense(cake-7,cake-7-sense)
is_a(cake-7-sense,cake.n.03)
has_sense(pan-8,pan-8-sense)
is_a(pan-8-sense,pan.n.01)
root(ROOT-0, pour-1)
det(cake-4, the-2)
amod(cake-4, mixed-3)
dobj(pour-1, cake-4)
poss(pan-8, your-6)
nn(pan-8, cake-7)
prep_into(pour-1, pan-8)
has_pos(pour-1,VB)
has_pos(the-2,DT)
has_pos(mixed-3,JJ)
has_pos(cake-4,NN)
has_pos(your-6,PRP$)
has_pos(cake-7,NN)
has_pos(pan-8,NN)
has_sense(mixed-3, null)
has_sense(your-6, null)
has_sense(the-2, null)