/* **************************************************************************** 
 * WIKIHOW.COM -- NATURAL-LANGUAGE INSTRUCTIONS
 * 
 * (C) 2011-2013 by Daniel Nyga (nyga@cs.uni-bremen.edu)
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 ******************************************************************************/

// fill a saucepan with room_temperature water .
has_sense(fill-1,fill-1-sense)
is_a(fill-1-sense,fill.v.01)
has_sense(saucepan-3,saucepan-3-sense)
is_a(saucepan-3-sense,saucepan.n.01)
has_sense(room_temperature-5,room_temperature-5-sense)
is_a(room_temperature-5-sense,room_temperature.n.01)
has_sense(water-6,water-6-sense)
is_a(water-6-sense,water.n.06)
root(ROOT-0, fill-1)
det(saucepan-3, a-2)
dobj(fill-1, saucepan-3)
amod(water-6, room_temperature-5)
prep_with(fill-1, water-6)
has_pos(fill-1,VB)
has_pos(a-2,DT)
has_pos(saucepan-3,NN)
has_pos(room_temperature-5,JJ)
has_pos(water-6,NN)
has_sense(a-2, null)
---
// There should be enough filling to fill the entire pan .
has_sense(enough-4,enough-4-sense)
is_a(enough-4-sense,adequate.s.02)
has_sense(fill-7,fill-7-sense)
is_a(fill-7-sense,fill.v.01)
has_sense(entire-9,entire-9-sense)
is_a(entire-9-sense,entire.s.01)
has_sense(pan-10,pan-10-sense)
is_a(pan-10-sense,pan.n.01)
expl(enough-4, There-1)
aux(enough-4, should-2)
cop(enough-4, be-3)
root(ROOT-0, enough-4)
xcomp(enough-4, filling-5)
aux(fill-7, to-6)
xcomp(filling-5, fill-7)
det(pan-10, the-8)
amod(pan-10, entire-9)
dobj(fill-7, pan-10)
has_pos(There-1,EX)
has_pos(should-2,MD)
has_pos(be-3,VB)
has_pos(enough-4,JJ)
has_pos(filling-5,VBG)
has_pos(to-6,TO)
has_pos(fill-7,VB)
has_pos(the-8,DT)
has_pos(entire-9,JJ)
has_pos(pan-10,NN)
has_sense(There-1, null)
has_sense(filling-5, null)
has_sense(to-6, null)
has_sense(the-8, null)
has_sense(should-2, null)
has_sense(be-3, null)
---
// fill the jar .
has_sense(fill-1,fill-1-sense)
is_a(fill-1-sense,fill.v.01)
has_sense(jar-3,jar-3-sense)
is_a(jar-3-sense,jar.n.01)
root(ROOT-0, fill-1)
det(jar-3, the-2)
dobj(fill-1, jar-3)
has_pos(fill-1,VB)
has_pos(the-2,DT)
has_pos(jar-3,NN)
has_sense(the-2, null)
---
// If you put in too little batter to begin with , pour in some extra batter to fill in the gap .
has_sense(put-3,put-3-sense)
is_a(put-3-sense,put.v.01)
has_sense(too-5,too-5-sense)
is_a(too-5-sense,excessively.r.01)
has_sense(little-6,little-6-sense)
is_a(little-6-sense,little.a.02)
has_sense(batter-7,batter-7-sense)
is_a(batter-7-sense,batter.n.02)
has_sense(begin-9,begin-9-sense)
is_a(begin-9-sense,get_down.v.07)
has_sense(pour-12,pour-12-sense)
is_a(pour-12-sense,pour.v.01)
has_sense(extra-15,extra-15-sense)
is_a(extra-15-sense,extra.s.03)
has_sense(batter-16,batter-16-sense)
is_a(batter-16-sense,batter.n.02)
has_sense(fill-18,fill-18-sense)
is_a(fill-18-sense,fill.v.09)
has_sense(gap-21,gap-21-sense)
is_a(gap-21-sense,opening.n.01)
mark(put-3, If-1)
nsubj(put-3, you-2)
advcl(pour-12, put-3)
advmod(batter-7, too-5)
amod(batter-7, little-6)
prep_in(put-3, batter-7)
aux(begin-9, to-8)
xcomp(put-3, begin-9)
prep(begin-9, with-10)
root(ROOT-0, pour-12)
det(batter-16, some-14)
amod(batter-16, extra-15)
prep_in(pour-12, batter-16)
aux(fill-18, to-17)
xcomp(pour-12, fill-18)
det(gap-21, the-20)
prep_in(fill-18, gap-21)
has_pos(If-1,IN)
has_pos(you-2,PRP)
has_pos(put-3,VBD)
has_pos(too-5,RB)
has_pos(little-6,JJ)
has_pos(batter-7,NN)
has_pos(to-8,TO)
has_pos(begin-9,VB)
has_pos(with-10,IN)
has_pos(pour-12,VB)
has_pos(some-14,DT)
has_pos(extra-15,JJ)
has_pos(batter-16,NN)
has_pos(to-17,TO)
has_pos(fill-18,VB)
has_pos(the-20,DT)
has_pos(gap-21,NN)
has_sense(to-8, null)
has_sense(you-2, null)
has_sense(with-10, null)
has_sense(to-17, null)
has_sense(the-20, null)
has_sense(some-14, null)
has_sense(If-1, null)
---
// fill the mug with the froth , leaving about an inch of space .
has_sense(fill-1,fill-1-sense)
is_a(fill-1-sense,fill.v.01)
has_sense(mug-3,mug-3-sense)
is_a(mug-3-sense,mug.n.04)
has_sense(froth-6,froth-6-sense)
is_a(froth-6-sense,foam.n.01)
has_sense(inch-11,inch-11-sense)
is_a(inch-11-sense,inch.n.01)
has_sense(space-13,space-13-sense)
is_a(space-13-sense,space.n.02)
root(ROOT-0, fill-1)
det(mug-3, the-2)
dobj(fill-1, mug-3)
det(froth-6, the-5)
prep_with(mug-3, froth-6)
partmod(mug-3, leaving-8)
det(inch-11, an-10)
prep_about(leaving-8, inch-11)
prep_of(inch-11, space-13)
has_pos(fill-1,VB)
has_pos(the-2,DT)
has_pos(mug-3,NN)
has_pos(the-5,DT)
has_pos(froth-6,NN)
has_pos(leaving-8,VBG)
has_pos(an-10,DT)
has_pos(inch-11,NN)
has_pos(space-13,NN)
has_sense(the-5, null)
has_sense(the-2, null)
has_sense(leaving-8, null)
has_sense(an-10, null)
---
// fill the bag with your desire icing .
has_sense(fill-1,fill-1-sense)
is_a(fill-1-sense,fill.v.01)
has_sense(bag-3,bag-3-sense)
is_a(bag-3-sense,bag.n.01)
has_sense(desire-6,desire-6-sense)
is_a(desire-6-sense,desire.v.01)
has_sense(icing-7,icing-7-sense)
is_a(icing-7-sense,frosting.n.01)
root(ROOT-0, fill-1)
det(bag-3, the-2)
dobj(fill-1, bag-3)
poss(icing-7, your-5)
nn(icing-7, desire-6)
prep_with(fill-1, icing-7)
has_pos(fill-1,VB)
has_pos(the-2,DT)
has_pos(bag-3,NN)
has_pos(your-5,PRP$)
has_pos(desire-6,NN)
has_pos(icing-7,NN)
has_sense(your-5, null)
has_sense(the-2, null)
---
// Fill grease muffin cup 2\/3 full .
has_sense(grease-2,grease-2-sense)
is_a(grease-2-sense,grease.v.01)
has_sense(cup-4,cup-4-sense)
is_a(cup-4-sense,cup.n.02)
has_sense(full-6,full-6-sense)
is_a(full-6-sense,full.a.01)
amod(cup-4, Fill-1)
nn(cup-4, grease-2)
nn(cup-4, muffin-3)
nsubj(2\/3-5, cup-4)
root(ROOT-0, 2\/3-5)
acomp(2\/3-5, full-6)
has_pos(Fill-1,JJ)
has_pos(grease-2,NN)
has_pos(muffin-3,NN)
has_pos(cup-4,NN)
has_pos(2\/3-5,VBZ)
has_pos(full-6,JJ)
has_sense(muffin-3, null)
has_sense(Fill-1, null)
has_sense(2\/3-5, null)
---
// Fill remaining jar with hot water or juice from the blanch .
has_sense(jar-3,jar-3-sense)
is_a(jar-3-sense,jar.n.01)
has_sense(juice-8,juice-8-sense)
is_a(juice-8-sense,juice.n.01)
has_sense(blanch-11,blanch-11-sense)
is_a(blanch-11-sense,blanch.v.02)
amod(jar-3, Fill-1)
amod(jar-3, remaining-2)
root(ROOT-0, jar-3)
amod(water-6, hot-5)
prep_with(jar-3, water-6)
conj_or(water-6, juice-8)
det(blanch-11, the-10)
prep_from(water-6, blanch-11)
has_pos(Fill-1,JJ)
has_pos(remaining-2,VBG)
has_pos(jar-3,NN)
has_pos(hot-5,JJ)
has_pos(water-6,NN)
has_pos(juice-8,NN)
has_pos(the-10,DT)
has_pos(blanch-11,NN)
has_sense(Fill-1, null)
has_sense(water-6, null)
has_sense(hot-5, null)
has_sense(remaining-2, null)
has_sense(the-10, null)
---
// fill it only half-full .
has_sense(fill-1,fill-1-sense)
is_a(fill-1-sense,fill.v.01)
has_sense(only-3,only-3-sense)
is_a(only-3-sense,merely.r.01)
root(ROOT-0, fill-1)
nsubj(half-full-4, it-2)
advmod(half-full-4, only-3)
xcomp(fill-1, half-full-4)
has_pos(fill-1,VB)
has_pos(it-2,PRP)
has_pos(only-3,RB)
has_pos(half-full-4,JJ)
has_sense(half-full-4, null)
has_sense(it-2, null)
---
// add sugar to your taste and fill with water .
has_sense(add-1,add-1-sense)
is_a(add-1-sense,add.v.01)
has_sense(sugar-2,sugar-2-sense)
is_a(sugar-2-sense,sugar.n.01)
has_sense(taste-5,taste-5-sense)
is_a(taste-5-sense,taste.n.03)
has_sense(fill-7,fill-7-sense)
is_a(fill-7-sense,fill.v.01)
has_sense(water-9,water-9-sense)
is_a(water-9-sense,water.n.06)
root(ROOT-0, add-1)
dobj(add-1, sugar-2)
poss(taste-5, your-4)
prep_to(add-1, taste-5)
conj_and(add-1, fill-7)
prep_with(fill-7, water-9)
has_pos(add-1,VB)
has_pos(sugar-2,NN)
has_pos(your-4,PRP$)
has_pos(taste-5,NN)
has_pos(fill-7,VB)
has_pos(water-9,NN)
has_sense(your-4, null)
---
// fill the metal pitcher with 3\/4 cup of milk .
has_sense(fill-1,fill-1-sense)
is_a(fill-1-sense,fill.v.01)
has_sense(metal-3,metal-3-sense)
is_a(metal-3-sense,metallic_element.n.01)
has_sense(pitcher-4,pitcher-4-sense)
is_a(pitcher-4-sense,pitcher.n.02)
has_sense(cup-7,cup-7-sense)
is_a(cup-7-sense,cup.n.02)
has_sense(milk-9,milk-9-sense)
is_a(milk-9-sense,milk.n.01)
root(ROOT-0, fill-1)
det(pitcher-4, the-2)
nn(pitcher-4, metal-3)
dobj(fill-1, pitcher-4)
num(cup-7, 3\/4-6)
prep_with(fill-1, cup-7)
prep_of(cup-7, milk-9)
has_pos(fill-1,VB)
has_pos(the-2,DT)
has_pos(metal-3,NN)
has_pos(pitcher-4,NN)
has_pos(3\/4-6,CD)
has_pos(cup-7,NN)
has_pos(milk-9,NN)
has_sense(3\/4-6, null)
has_sense(the-2, null)
---
// place a strawberry in each square of an ice_cube tray and fill with water .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(strawberry-3,strawberry-3-sense)
is_a(strawberry-3-sense,strawberry.n.01)
has_sense(square-6,square-6-sense)
is_a(square-6-sense,square.n.04)
has_sense(ice_cube-9,ice_cube-9-sense)
is_a(ice_cube-9-sense,ice_cube.n.01)
has_sense(tray-10,tray-10-sense)
is_a(tray-10-sense,tray.n.01)
has_sense(fill-12,fill-12-sense)
is_a(fill-12-sense,fill.v.01)
has_sense(water-14,water-14-sense)
is_a(water-14-sense,water.n.06)
root(ROOT-0, place-1)
det(strawberry-3, a-2)
dobj(place-1, strawberry-3)
det(square-6, each-5)
prep_in(place-1, square-6)
det(tray-10, an-8)
amod(tray-10, ice_cube-9)
prep_of(square-6, tray-10)
conj_and(place-1, fill-12)
prep_with(fill-12, water-14)
has_pos(place-1,VB)
has_pos(a-2,DT)
has_pos(strawberry-3,NN)
has_pos(each-5,DT)
has_pos(square-6,NN)
has_pos(an-8,DT)
has_pos(ice_cube-9,JJ)
has_pos(tray-10,NN)
has_pos(fill-12,VB)
has_pos(water-14,NN)
has_sense(an-8, null)
has_sense(each-5, null)
has_sense(a-2, null)
---
// place your vegetable in a pot and fill it with enough water to just submerge the vegetable .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(vegetable-3,vegetable-3-sense)
is_a(vegetable-3-sense,vegetable.n.02)
has_sense(pot-6,pot-6-sense)
is_a(pot-6-sense,pot.n.01)
has_sense(fill-8,fill-8-sense)
is_a(fill-8-sense,fill.v.01)
has_sense(enough-11,enough-11-sense)
is_a(enough-11-sense,adequate.s.02)
has_sense(water-12,water-12-sense)
is_a(water-12-sense,water.n.06)
has_sense(vegetable-17,vegetable-17-sense)
is_a(vegetable-17-sense,vegetable.n.01)
root(ROOT-0, place-1)
poss(vegetable-3, your-2)
dobj(place-1, vegetable-3)
det(pot-6, a-5)
prep_in(place-1, pot-6)
conj_and(place-1, fill-8)
dobj(fill-8, it-9)
amod(water-12, enough-11)
prep_with(fill-8, water-12)
aux(submerge-15, to-13)
advmod(submerge-15, just-14)
xcomp(fill-8, submerge-15)
det(vegetable-17, the-16)
dobj(submerge-15, vegetable-17)
has_pos(place-1,VB)
has_pos(your-2,PRP$)
has_pos(vegetable-3,NN)
has_pos(a-5,DT)
has_pos(pot-6,NN)
has_pos(fill-8,VB)
has_pos(it-9,PRP)
has_pos(enough-11,JJ)
has_pos(water-12,NN)
has_pos(to-13,TO)
has_pos(just-14,RB)
has_pos(submerge-15,VB)
has_pos(the-16,DT)
has_pos(vegetable-17,NN)
has_sense(submerge-15, null)
has_sense(just-14, null)
has_sense(your-2, null)
has_sense(to-13, null)
has_sense(the-16, null)
has_sense(a-5, null)
has_sense(it-9, null)
---
// Fill the fryer with the proper amount of oil and do not overfill it .
has_sense(proper-6,proper-6-sense)
is_a(proper-6-sense,proper.a.01)
has_sense(amount-7,amount-7-sense)
is_a(amount-7-sense,measure.n.02)
has_sense(oil-9,oil-9-sense)
is_a(oil-9-sense,vegetable_oil.n.01)
has_sense(not-12,not-12-sense)
is_a(not-12-sense,not.r.01)
has_sense(overfill-13,overfill-13-sense)
is_a(overfill-13-sense,overfill.v.01)
root(ROOT-0, Fill-1)
det(fryer-3, the-2)
dobj(Fill-1, fryer-3)
det(amount-7, the-5)
amod(amount-7, proper-6)
prep_with(Fill-1, amount-7)
prep_of(amount-7, oil-9)
aux(overfill-13, do-11)
neg(overfill-13, not-12)
conj_and(Fill-1, overfill-13)
dobj(overfill-13, it-14)
has_pos(Fill-1,VB)
has_pos(the-2,DT)
has_pos(fryer-3,NN)
has_pos(the-5,DT)
has_pos(proper-6,JJ)
has_pos(amount-7,NN)
has_pos(oil-9,NN)
has_pos(do-11,VBP)
has_pos(not-12,RB)
has_pos(overfill-13,VB)
has_pos(it-14,PRP)
has_sense(the-5, null)
has_sense(Fill-1, null)
has_sense(the-2, null)
has_sense(it-14, null)
has_sense(do-11, null)
has_sense(fryer-3, null)
---
// use a teaspoon , begin to fill one mushroom at a time .
has_sense(use-1,use-1-sense)
is_a(use-1-sense,use.v.01)
has_sense(teaspoon-3,teaspoon-3-sense)
is_a(teaspoon-3-sense,teaspoon.n.02)
has_sense(begin-5,begin-5-sense)
is_a(begin-5-sense,get_down.v.07)
has_sense(fill-7,fill-7-sense)
is_a(fill-7-sense,fill.v.01)
has_sense(mushroom-9,mushroom-9-sense)
is_a(mushroom-9-sense,mushroom.n.05)
has_sense(time-12,time-12-sense)
is_a(time-12-sense,time.n.01)
root(ROOT-0, use-1)
det(teaspoon-3, a-2)
dobj(use-1, teaspoon-3)
dep(use-1, begin-5)
aux(fill-7, to-6)
xcomp(begin-5, fill-7)
num(mushroom-9, one-8)
dobj(fill-7, mushroom-9)
det(time-12, a-11)
prep_at(mushroom-9, time-12)
has_pos(use-1,VB)
has_pos(a-2,DT)
has_pos(teaspoon-3,NN)
has_pos(begin-5,VB)
has_pos(to-6,TO)
has_pos(fill-7,VB)
has_pos(one-8,CD)
has_pos(mushroom-9,NN)
has_pos(a-11,DT)
has_pos(time-12,NN)
has_sense(a-11, null)
has_sense(one-8, null)
has_sense(to-6, null)
has_sense(a-2, null)
---
// place the elevated canning rack in this pot , and fill halfway with water .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(elevated-3,elevated-3-sense)
is_a(elevated-3-sense,elevated.s.01)
has_sense(rack-5,rack-5-sense)
is_a(rack-5-sense,rack.n.01)
has_sense(pot-8,pot-8-sense)
is_a(pot-8-sense,pot.n.01)
has_sense(fill-11,fill-11-sense)
is_a(fill-11-sense,fill.v.01)
has_sense(halfway-12,halfway-12-sense)
is_a(halfway-12-sense,halfway.r.01)
has_sense(water-14,water-14-sense)
is_a(water-14-sense,water.n.06)
root(ROOT-0, place-1)
det(rack-5, the-2)
amod(rack-5, elevated-3)
nn(rack-5, canning-4)
dobj(place-1, rack-5)
det(pot-8, this-7)
prep_in(place-1, pot-8)
conj_and(place-1, fill-11)
advmod(fill-11, halfway-12)
prep_with(fill-11, water-14)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(elevated-3,JJ)
has_pos(canning-4,NN)
has_pos(rack-5,NN)
has_pos(this-7,DT)
has_pos(pot-8,NN)
has_pos(fill-11,VB)
has_pos(halfway-12,RB)
has_pos(water-14,NN)
has_sense(the-2, null)
has_sense(this-7, null)
has_sense(canning-4, null)
---
// take a large bowl and fill it with ice_cube .
has_sense(take-1,take-1-sense)
is_a(take-1-sense,take.v.04)
has_sense(large-3,large-3-sense)
is_a(large-3-sense,large.a.01)
has_sense(bowl-4,bowl-4-sense)
is_a(bowl-4-sense,bowl.n.01)
has_sense(fill-6,fill-6-sense)
is_a(fill-6-sense,fill.v.01)
has_sense(ice_cube-9,ice_cube-9-sense)
is_a(ice_cube-9-sense,ice_cube.n.01)
root(ROOT-0, take-1)
det(bowl-4, a-2)
amod(bowl-4, large-3)
dobj(take-1, bowl-4)
conj_and(take-1, fill-6)
dobj(fill-6, it-7)
prep_with(fill-6, ice_cube-9)
has_pos(take-1,VB)
has_pos(a-2,DT)
has_pos(large-3,JJ)
has_pos(bowl-4,NN)
has_pos(fill-6,VB)
has_pos(it-7,PRP)
has_pos(ice_cube-9,NN)
has_sense(a-2, null)
has_sense(it-7, null)
---
// fill the kettle with boiling water .
has_sense(fill-1,fill-1-sense)
is_a(fill-1-sense,fill.v.01)
has_sense(kettle-3,kettle-3-sense)
is_a(kettle-3-sense,kettle.n.01)
has_sense(water-6,water-6-sense)
is_a(water-6-sense,water.n.06)
root(ROOT-0, fill-1)
det(kettle-3, the-2)
dobj(fill-1, kettle-3)
amod(water-6, boiling-5)
prep_with(fill-1, water-6)
has_pos(fill-1,VB)
has_pos(the-2,DT)
has_pos(kettle-3,NN)
has_pos(boiling-5,JJ)
has_pos(water-6,NN)
has_sense(boiling-5, null)
has_sense(the-2, null)
---
// fill it halfway with cubes .
has_sense(fill-1,fill-1-sense)
is_a(fill-1-sense,fill.v.01)
has_sense(halfway-3,halfway-3-sense)
is_a(halfway-3-sense,halfway.r.01)
root(ROOT-0, fill-1)
dobj(fill-1, it-2)
advmod(fill-1, halfway-3)
prep_with(fill-1, cubes-5)
has_pos(fill-1,VB)
has_pos(it-2,PRP)
has_pos(halfway-3,RB)
has_pos(cubes-5,NNS)
has_sense(it-2, null)
has_sense(cubes-5, null)
---
// fill the dish about half full with apple .
has_sense(fill-1,fill-1-sense)
is_a(fill-1-sense,fill.v.01)
has_sense(dish-3,dish-3-sense)
is_a(dish-3-sense,dish.n.01)
has_sense(about-4,about-4-sense)
is_a(about-4-sense,approximately.r.01)
has_sense(full-6,full-6-sense)
is_a(full-6-sense,full.a.01)
has_sense(apple-8,apple-8-sense)
is_a(apple-8-sense,apple.n.01)
root(ROOT-0, fill-1)
det(dish-3, the-2)
dobj(fill-1, dish-3)
quantmod(full-6, about-4)
quantmod(full-6, half-5)
num(dish-3, full-6)
prep_with(fill-1, apple-8)
has_pos(fill-1,VB)
has_pos(the-2,DT)
has_pos(dish-3,NN)
has_pos(about-4,RB)
has_pos(half-5,DT)
has_pos(full-6,JJ)
has_pos(apple-8,NN)
has_sense(the-2, null)
has_sense(half-5, null)
---
// Fill about about one third to half with blueberries .
has_sense(about-3,about-3-sense)
is_a(about-3-sense,approximately.r.01)
has_sense(third-5,third-5-sense)
is_a(third-5-sense,one-third.n.01)
has_sense(half-7,half-7-sense)
is_a(half-7-sense,one-half.n.01)
root(ROOT-0, Fill-1)
quantmod(one-4, about-3)
num(half-7, one-4)
dep(half-7, third-5)
dep(half-7, to-6)
prep_about(Fill-1, half-7)
prep_with(Fill-1, blueberries-9)
has_pos(Fill-1,NNP)
has_pos(about-3,RB)
has_pos(one-4,CD)
has_pos(third-5,NN)
has_pos(to-6,TO)
has_pos(half-7,NN)
has_pos(blueberries-9,NNS)
has_sense(Fill-1, null)
has_sense(one-4, null)
has_sense(blueberries-9, null)
has_sense(to-6, null)
---
// fill a pan with water .
has_sense(fill-1,fill-1-sense)
is_a(fill-1-sense,fill.v.01)
has_sense(pan-3,pan-3-sense)
is_a(pan-3-sense,pan.n.01)
has_sense(water-5,water-5-sense)
is_a(water-5-sense,water.n.06)
root(ROOT-0, fill-1)
det(pan-3, a-2)
dobj(fill-1, pan-3)
prep_with(fill-1, water-5)
has_pos(fill-1,VB)
has_pos(a-2,DT)
has_pos(pan-3,NN)
has_pos(water-5,NN)
has_sense(a-2, null)
---
// use a measuring_cup and fill it up with water .
has_sense(use-1,use-1-sense)
is_a(use-1-sense,use.v.01)
has_sense(measuring_cup-3,measuring_cup-3-sense)
is_a(measuring_cup-3-sense,measuring_cup.n.01)
has_sense(fill-5,fill-5-sense)
is_a(fill-5-sense,fill.v.01)
has_sense(water-9,water-9-sense)
is_a(water-9-sense,water.n.06)
root(ROOT-0, use-1)
det(measuring_cup-3, a-2)
dobj(use-1, measuring_cup-3)
conj_and(use-1, fill-5)
dobj(fill-5, it-6)
prt(fill-5, up-7)
prep_with(fill-5, water-9)
has_pos(use-1,VB)
has_pos(a-2,DT)
has_pos(measuring_cup-3,NN)
has_pos(fill-5,VB)
has_pos(it-6,PRP)
has_pos(up-7,RP)
has_pos(water-9,NN)
has_sense(it-6, null)
has_sense(up-7, null)
has_sense(a-2, null)
---
// Fill a medium sized bowl halfway up with water .
has_sense(halfway-6,halfway-6-sense)
is_a(halfway-6-sense,halfway.r.01)
has_sense(up-7,up-7-sense)
is_a(up-7-sense,up.r.01)
has_sense(water-9,water-9-sense)
is_a(water-9-sense,water.n.06)
amod(medium-3, Fill-1)
det(medium-3, a-2)
nsubj(sized-4, medium-3)
root(ROOT-0, sized-4)
nn(halfway-6, bowl-5)
dobj(sized-4, halfway-6)
prt(sized-4, up-7)
prep_with(sized-4, water-9)
has_pos(Fill-1,JJ)
has_pos(a-2,DT)
has_pos(medium-3,NN)
has_pos(sized-4,VBD)
has_pos(bowl-5,NN)
has_pos(halfway-6,NNS)
has_pos(up-7,RP)
has_pos(water-9,NN)
has_sense(Fill-1, null)
has_sense(sized-4, null)
has_sense(bowl-5, null)
has_sense(a-2, null)
has_sense(medium-3, null)
---
// Place frying_pan with just enough canola_oil to fill bottom of pan over low heat .
has_sense(frying_pan-2,frying_pan-2-sense)
is_a(frying_pan-2-sense,frying_pan.n.01)
has_sense(just-4,just-4-sense)
is_a(just-4-sense,merely.r.01)
has_sense(enough-5,enough-5-sense)
is_a(enough-5-sense,adequate.s.02)
has_sense(canola_oil-6,canola_oil-6-sense)
is_a(canola_oil-6-sense,canola_oil.n.01)
has_sense(fill-8,fill-8-sense)
is_a(fill-8-sense,fill.v.01)
has_sense(bottom-9,bottom-9-sense)
is_a(bottom-9-sense,bottom.n.02)
has_sense(pan-11,pan-11-sense)
is_a(pan-11-sense,pan.n.01)
has_sense(low-13,low-13-sense)
is_a(low-13-sense,low.a.01)
nn(frying_pan-2, Place-1)
nsubj(canola_oil-6, frying_pan-2)
prep(frying_pan-2, with-3)
advmod(enough-5, just-4)
pobj(with-3, enough-5)
root(ROOT-0, canola_oil-6)
aux(fill-8, to-7)
xcomp(canola_oil-6, fill-8)
dobj(fill-8, bottom-9)
prep_of(bottom-9, pan-11)
amod(heat-14, low-13)
prep_over(fill-8, heat-14)
has_pos(Place-1,NN)
has_pos(frying_pan-2,NN)
has_pos(with-3,IN)
has_pos(just-4,RB)
has_pos(enough-5,RB)
has_pos(canola_oil-6,VBP)
has_pos(to-7,TO)
has_pos(fill-8,VB)
has_pos(bottom-9,NN)
has_pos(pan-11,NNP)
has_pos(low-13,JJ)
has_pos(heat-14,NN)
has_sense(heat-14, null)
has_sense(Place-1, null)
has_sense(to-7, null)
has_sense(with-3, null)
---
// Fill 2\/3 full .
has_sense(full-3,full-3-sense)
is_a(full-3-sense,full.a.01)
nsubj(2\/3-2, Fill-1)
root(ROOT-0, 2\/3-2)
acomp(2\/3-2, full-3)
has_pos(Fill-1,NNP)
has_pos(2\/3-2,VBZ)
has_pos(full-3,JJ)
has_sense(Fill-1, null)
has_sense(2\/3-2, null)
---
// You can also fill a large bowl with ice .
has_sense(also-3,also-3-sense)
is_a(also-3-sense,besides.r.02)
has_sense(fill-4,fill-4-sense)
is_a(fill-4-sense,fill.v.01)
has_sense(large-6,large-6-sense)
is_a(large-6-sense,large.a.01)
has_sense(bowl-7,bowl-7-sense)
is_a(bowl-7-sense,bowl.n.01)
has_sense(ice-9,ice-9-sense)
is_a(ice-9-sense,ice.n.01)
nsubj(fill-4, You-1)
aux(fill-4, can-2)
advmod(fill-4, also-3)
root(ROOT-0, fill-4)
det(bowl-7, a-5)
amod(bowl-7, large-6)
dobj(fill-4, bowl-7)
prep_with(fill-4, ice-9)
has_pos(You-1,PRP)
has_pos(can-2,MD)
has_pos(also-3,RB)
has_pos(fill-4,VB)
has_pos(a-5,DT)
has_pos(large-6,JJ)
has_pos(bowl-7,NN)
has_pos(ice-9,NN)
has_sense(can-2, null)
has_sense(a-5, null)
has_sense(You-1, null)
---
// fill the pot up with water .
has_sense(fill-1,fill-1-sense)
is_a(fill-1-sense,fill.v.01)
has_sense(pot-3,pot-3-sense)
is_a(pot-3-sense,pot.n.01)
has_sense(up-4,up-4-sense)
is_a(up-4-sense,up.r.01)
has_sense(water-6,water-6-sense)
is_a(water-6-sense,water.n.06)
root(ROOT-0, fill-1)
det(pot-3, the-2)
npadvmod(up-4, pot-3)
advmod(fill-1, up-4)
prep_with(fill-1, water-6)
has_pos(fill-1,VB)
has_pos(the-2,DT)
has_pos(pot-3,NN)
has_pos(up-4,RB)
has_pos(water-6,NN)
has_sense(the-2, null)
---
// fill the metal pitcher with 1 cup milk , or 3\/4 cup if use a flavor .
has_sense(fill-1,fill-1-sense)
is_a(fill-1-sense,fill.v.01)
has_sense(pitcher-4,pitcher-4-sense)
is_a(pitcher-4-sense,pitcher.n.02)
has_sense(cup-7,cup-7-sense)
is_a(cup-7-sense,cup.n.04)
has_sense(milk-8,milk-8-sense)
is_a(milk-8-sense,milk.n.01)
has_sense(cup-12,cup-12-sense)
is_a(cup-12-sense,cup.n.04)
has_sense(use-14,use-14-sense)
is_a(use-14-sense,use.v.01)
has_sense(flavor-16,flavor-16-sense)
is_a(flavor-16-sense,relish.n.03)
root(ROOT-0, fill-1)
det(pitcher-4, the-2)
nn(pitcher-4, metal-3)
dobj(fill-1, pitcher-4)
num(milk-8, 1-6)
nn(milk-8, cup-7)
prep_with(fill-1, milk-8)
num(cup-12, 3\/4-11)
conj_or(milk-8, cup-12)
mark(use-14, if-13)
dep(cup-12, use-14)
det(flavor-16, a-15)
dobj(use-14, flavor-16)
has_pos(fill-1,VB)
has_pos(the-2,DT)
has_pos(metal-3,NN)
has_pos(pitcher-4,NN)
has_pos(1-6,CD)
has_pos(cup-7,NN)
has_pos(milk-8,NN)
has_pos(3\/4-11,CD)
has_pos(cup-12,NN)
has_pos(if-13,IN)
has_pos(use-14,VBP)
has_pos(a-15,DT)
has_pos(flavor-16,NN)
has_sense(a-15, null)
has_sense(metal-3, null)
has_sense(the-2, null)
has_sense(if-13, null)
has_sense(1-6, null)
has_sense(3\/4-11, null)
---
// fill each jar with the remaining liquid from the blanching pot .
has_sense(fill-1,fill-1-sense)
is_a(fill-1-sense,fill.v.01)
has_sense(jar-3,jar-3-sense)
is_a(jar-3-sense,jar.n.01)
has_sense(liquid-7,liquid-7-sense)
is_a(liquid-7-sense,liquid.n.01)
has_sense(pot-11,pot-11-sense)
is_a(pot-11-sense,pot.n.01)
root(ROOT-0, fill-1)
det(jar-3, each-2)
dobj(fill-1, jar-3)
det(liquid-7, the-5)
amod(liquid-7, remaining-6)
prep_with(fill-1, liquid-7)
det(pot-11, the-9)
amod(pot-11, blanching-10)
prep_from(liquid-7, pot-11)
has_pos(fill-1,VB)
has_pos(each-2,DT)
has_pos(jar-3,NN)
has_pos(the-5,DT)
has_pos(remaining-6,VBG)
has_pos(liquid-7,NN)
has_pos(the-9,DT)
has_pos(blanching-10,JJ)
has_pos(pot-11,NN)
has_sense(the-5, null)
has_sense(each-2, null)
has_sense(remaining-6, null)
has_sense(blanching-10, null)
has_sense(the-9, null)
---
// take a saucepan or pot and fill it with water .
has_sense(take-1,take-1-sense)
is_a(take-1-sense,take.v.04)
has_sense(saucepan-3,saucepan-3-sense)
is_a(saucepan-3-sense,saucepan.n.01)
has_sense(pot-5,pot-5-sense)
is_a(pot-5-sense,pot.n.01)
has_sense(fill-7,fill-7-sense)
is_a(fill-7-sense,fill.v.01)
has_sense(water-10,water-10-sense)
is_a(water-10-sense,water.n.06)
root(ROOT-0, take-1)
det(saucepan-3, a-2)
dobj(take-1, saucepan-3)
conj_or(saucepan-3, pot-5)
conj_and(take-1, fill-7)
dobj(fill-7, it-8)
prep_with(fill-7, water-10)
has_pos(take-1,VB)
has_pos(a-2,DT)
has_pos(saucepan-3,NN)
has_pos(pot-5,NN)
has_pos(fill-7,VB)
has_pos(it-8,PRP)
has_pos(water-10,NN)
has_sense(a-2, null)
has_sense(it-8, null)
---
// Fill remainder of glass with milk .
has_sense(remainder-2,remainder-2-sense)
is_a(remainder-2-sense,remainder.n.01)
has_sense(glass-4,glass-4-sense)
is_a(glass-4-sense,glass.n.02)
has_sense(milk-6,milk-6-sense)
is_a(milk-6-sense,milk.n.01)
amod(remainder-2, Fill-1)
root(ROOT-0, remainder-2)
prep_of(remainder-2, glass-4)
prep_with(remainder-2, milk-6)
has_pos(Fill-1,JJ)
has_pos(remainder-2,NN)
has_pos(glass-4,NN)
has_pos(milk-6,NN)
has_sense(Fill-1, null)
---
// use a laddle to fill the muffin cup about a third of the way up .
has_sense(use-1,use-1-sense)
is_a(use-1-sense,use.v.01)
has_sense(fill-5,fill-5-sense)
is_a(fill-5-sense,fill.v.01)
has_sense(muffin-7,muffin-7-sense)
is_a(muffin-7-sense,muffin.n.01)
has_sense(cup-8,cup-8-sense)
is_a(cup-8-sense,cup.n.03)
has_sense(about-9,about-9-sense)
is_a(about-9-sense,approximately.r.01)
root(ROOT-0, use-1)
det(laddle-3, a-2)
dobj(use-1, laddle-3)
aux(fill-5, to-4)
infmod(laddle-3, fill-5)
det(cup-8, the-6)
nn(cup-8, muffin-7)
dobj(fill-5, cup-8)
quantmod(third-11, about-9)
quantmod(third-11, a-10)
npadvmod(up-15, third-11)
det(way-14, the-13)
prep_of(third-11, way-14)
advmod(fill-5, up-15)
has_pos(use-1,VB)
has_pos(a-2,DT)
has_pos(laddle-3,NN)
has_pos(to-4,TO)
has_pos(fill-5,VB)
has_pos(the-6,DT)
has_pos(muffin-7,NN)
has_pos(cup-8,NN)
has_pos(about-9,RB)
has_pos(a-10,DT)
has_pos(third-11,JJ)
has_pos(the-13,DT)
has_pos(way-14,NN)
has_pos(up-15,IN)
has_sense(laddle-3, null)
has_sense(the-6, null)
has_sense(up-15, null)
has_sense(a-10, null)
has_sense(way-14, null)
has_sense(to-4, null)
has_sense(third-11, null)
has_sense(a-2, null)
has_sense(the-13, null)
---
// fill with approximately 1 cup of fruit_salad , depend on the size of the melon .
has_sense(fill-1,fill-1-sense)
is_a(fill-1-sense,fill.v.01)
has_sense(approximately-3,approximately-3-sense)
is_a(approximately-3-sense,approximately.r.01)
has_sense(cup-5,cup-5-sense)
is_a(cup-5-sense,cup.n.04)
has_sense(fruit_salad-7,fruit_salad-7-sense)
is_a(fruit_salad-7-sense,fruit_salad.n.01)
has_sense(depend-9,depend-9-sense)
is_a(depend-9-sense,depend.v.01)
has_sense(size-12,size-12-sense)
is_a(size-12-sense,size.n.01)
has_sense(melon-15,melon-15-sense)
is_a(melon-15-sense,melon.n.02)
root(ROOT-0, fill-1)
quantmod(1-4, approximately-3)
num(cup-5, 1-4)
prep_with(fill-1, cup-5)
prep_of(cup-5, fruit_salad-7)
dep(fill-1, depend-9)
det(size-12, the-11)
prep_on(depend-9, size-12)
det(melon-15, the-14)
prep_of(size-12, melon-15)
has_pos(fill-1,VB)
has_pos(approximately-3,RB)
has_pos(1-4,CD)
has_pos(cup-5,NN)
has_pos(fruit_salad-7,NN)
has_pos(depend-9,VB)
has_pos(the-11,DT)
has_pos(size-12,NN)
has_pos(the-14,DT)
has_pos(melon-15,NN)
has_sense(the-14, null)
has_sense(1-4, null)
has_sense(the-11, null)
---
// put the inner bowl in the outer bowl and fill with water .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(inner-3,inner-3-sense)
is_a(inner-3-sense,inner.a.02)
has_sense(bowl-4,bowl-4-sense)
is_a(bowl-4-sense,bowl.n.01)
has_sense(outer-7,outer-7-sense)
is_a(outer-7-sense,outer.a.01)
has_sense(bowl-8,bowl-8-sense)
is_a(bowl-8-sense,bowl.n.01)
has_sense(fill-10,fill-10-sense)
is_a(fill-10-sense,fill.v.01)
has_sense(water-12,water-12-sense)
is_a(water-12-sense,water.n.06)
root(ROOT-0, put-1)
det(bowl-4, the-2)
amod(bowl-4, inner-3)
dobj(put-1, bowl-4)
det(bowl-8, the-6)
amod(bowl-8, outer-7)
prep_in(put-1, bowl-8)
conj_and(put-1, fill-10)
prep_with(fill-10, water-12)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(inner-3,JJ)
has_pos(bowl-4,NN)
has_pos(the-6,DT)
has_pos(outer-7,JJ)
has_pos(bowl-8,NN)
has_pos(fill-10,VB)
has_pos(water-12,NN)
has_sense(the-6, null)
has_sense(the-2, null)
---
// fill the teapot to the top with hot water .
has_sense(fill-1,fill-1-sense)
is_a(fill-1-sense,fill.v.01)
has_sense(teapot-3,teapot-3-sense)
is_a(teapot-3-sense,teapot.n.01)
has_sense(top-6,top-6-sense)
is_a(top-6-sense,top.n.01)
root(ROOT-0, fill-1)
det(teapot-3, the-2)
dobj(fill-1, teapot-3)
det(top-6, the-5)
prep_to(fill-1, top-6)
amod(water-9, hot-8)
prep_with(top-6, water-9)
has_pos(fill-1,VB)
has_pos(the-2,DT)
has_pos(teapot-3,NN)
has_pos(the-5,DT)
has_pos(top-6,NN)
has_pos(hot-8,JJ)
has_pos(water-9,NN)
has_sense(the-5, null)
has_sense(the-2, null)
has_sense(hot-8, null)
has_sense(water-9, null)
---
// fill the bottom of the pan with vinegar .
has_sense(fill-1,fill-1-sense)
is_a(fill-1-sense,fill.v.01)
has_sense(bottom-3,bottom-3-sense)
is_a(bottom-3-sense,bottom.n.01)
has_sense(pan-6,pan-6-sense)
is_a(pan-6-sense,pan.n.01)
has_sense(vinegar-8,vinegar-8-sense)
is_a(vinegar-8-sense,vinegar.n.01)
root(ROOT-0, fill-1)
det(bottom-3, the-2)
dobj(fill-1, bottom-3)
det(pan-6, the-5)
prep_of(bottom-3, pan-6)
prep_with(pan-6, vinegar-8)
has_pos(fill-1,VB)
has_pos(the-2,DT)
has_pos(bottom-3,NN)
has_pos(the-5,DT)
has_pos(pan-6,NN)
has_pos(vinegar-8,NN)
has_sense(the-5, null)
has_sense(the-2, null)
---
// fill the metal pitcher with a cup of milk .
has_sense(fill-1,fill-1-sense)
is_a(fill-1-sense,fill.v.01)
has_sense(pitcher-4,pitcher-4-sense)
is_a(pitcher-4-sense,pitcher.n.02)
has_sense(milk-9,milk-9-sense)
is_a(milk-9-sense,milk.n.01)
root(ROOT-0, fill-1)
det(pitcher-4, the-2)
nn(pitcher-4, metal-3)
dobj(fill-1, pitcher-4)
det(cup-7, a-6)
prep_with(fill-1, cup-7)
prep_of(cup-7, milk-9)
has_pos(fill-1,VB)
has_pos(the-2,DT)
has_pos(metal-3,NN)
has_pos(pitcher-4,NN)
has_pos(a-6,DT)
has_pos(cup-7,NN)
has_pos(milk-9,NN)
has_sense(the-2, null)
has_sense(cup-7, null)
has_sense(metal-3, null)
has_sense(a-6, null)
---
// then fill the cup up to the brim with water .
has_sense(then-1,then-1-sense)
is_a(then-1-sense,then.r.01)
has_sense(fill-2,fill-2-sense)
is_a(fill-2-sense,fill.v.01)
has_sense(up-5,up-5-sense)
is_a(up-5-sense,up.r.01)
has_sense(brim-8,brim-8-sense)
is_a(brim-8-sense,brim.n.01)
has_sense(water-10,water-10-sense)
is_a(water-10-sense,water.n.06)
advmod(fill-2, then-1)
root(ROOT-0, fill-2)
det(cup-4, the-3)
dobj(fill-2, cup-4)
advmod(fill-2, up-5)
det(brim-8, the-7)
prep_to(up-5, brim-8)
prep_with(fill-2, water-10)
has_pos(then-1,RB)
has_pos(fill-2,VB)
has_pos(the-3,DT)
has_pos(cup-4,NN)
has_pos(up-5,RB)
has_pos(the-7,DT)
has_pos(brim-8,NN)
has_pos(water-10,NN)
has_sense(the-7, null)
has_sense(the-3, null)
has_sense(cup-4, null)
---
// fill a medium-sized pan about half way up to the top with water .
has_sense(fill-1,fill-1-sense)
is_a(fill-1-sense,fill.v.01)
has_sense(medium-sized-3,medium-sized-3-sense)
is_a(medium-sized-3-sense,medium-sized.s.01)
has_sense(pan-4,pan-4-sense)
is_a(pan-4-sense,pan.n.01)
has_sense(about-5,about-5-sense)
is_a(about-5-sense,approximately.r.01)
has_sense(up-8,up-8-sense)
is_a(up-8-sense,up.r.01)
has_sense(water-13,water-13-sense)
is_a(water-13-sense,water.n.06)
root(ROOT-0, fill-1)
det(pan-4, a-2)
amod(pan-4, medium-sized-3)
dobj(fill-1, pan-4)
quantmod(half-6, about-5)
num(way-7, half-6)
npadvmod(up-8, way-7)
advmod(fill-1, up-8)
det(top-11, the-10)
prep_to(fill-1, top-11)
prep_with(top-11, water-13)
has_pos(fill-1,VB)
has_pos(a-2,DT)
has_pos(medium-sized-3,JJ)
has_pos(pan-4,NN)
has_pos(about-5,RB)
has_pos(half-6,PDT)
has_pos(way-7,NN)
has_pos(up-8,RB)
has_pos(the-10,DT)
has_pos(top-11,NN)
has_pos(water-13,NN)
has_sense(way-7, null)
has_sense(half-6, null)
has_sense(top-11, null)
has_sense(a-2, null)
has_sense(the-10, null)
---
// Fill remain space in jar with gravy .
has_sense(remain-2,remain-2-sense)
is_a(remain-2-sense,remain.v.03)
has_sense(space-3,space-3-sense)
is_a(space-3-sense,space.n.02)
has_sense(jar-5,jar-5-sense)
is_a(jar-5-sense,jar.n.01)
has_sense(gravy-7,gravy-7-sense)
is_a(gravy-7-sense,gravy.n.01)
nsubj(space-3, Fill-1)
cop(space-3, remain-2)
root(ROOT-0, space-3)
prep_in(space-3, jar-5)
prep_with(space-3, gravy-7)
has_pos(Fill-1,NNP)
has_pos(remain-2,VBP)
has_pos(space-3,NN)
has_pos(jar-5,NN)
has_pos(gravy-7,NN)
has_sense(Fill-1, null)
---
// fill the leftover space with smaller fish .
has_sense(fill-1,fill-1-sense)
is_a(fill-1-sense,fill.v.01)
has_sense(leftover-3,leftover-3-sense)
is_a(leftover-3-sense,leftover.n.01)
has_sense(space-4,space-4-sense)
is_a(space-4-sense,space.n.02)
has_sense(smaller-6,smaller-6-sense)
is_a(smaller-6-sense,smaller.s.01)
has_sense(fish-7,fish-7-sense)
is_a(fish-7-sense,fish.n.02)
root(ROOT-0, fill-1)
det(space-4, the-2)
nn(space-4, leftover-3)
dobj(fill-1, space-4)
amod(fish-7, smaller-6)
prep_with(fill-1, fish-7)
has_pos(fill-1,VB)
has_pos(the-2,DT)
has_pos(leftover-3,NN)
has_pos(space-4,NN)
has_pos(smaller-6,JJR)
has_pos(fish-7,NN)
has_sense(the-2, null)
---
// fill a large saucepan with water .
has_sense(fill-1,fill-1-sense)
is_a(fill-1-sense,fill.v.01)
has_sense(large-3,large-3-sense)
is_a(large-3-sense,large.a.01)
has_sense(saucepan-4,saucepan-4-sense)
is_a(saucepan-4-sense,saucepan.n.01)
has_sense(water-6,water-6-sense)
is_a(water-6-sense,water.n.06)
root(ROOT-0, fill-1)
det(saucepan-4, a-2)
amod(saucepan-4, large-3)
dobj(fill-1, saucepan-4)
prep_with(fill-1, water-6)
has_pos(fill-1,VB)
has_pos(a-2,DT)
has_pos(large-3,JJ)
has_pos(saucepan-4,NN)
has_pos(water-6,NN)
has_sense(a-2, null)
---
// Fill heat can jar to the rim with bean .
has_sense(heat-2,heat-2-sense)
is_a(heat-2-sense,heat.v.01)
has_sense(can-3,can-3-sense)
is_a(can-3-sense,can.v.01)
has_sense(jar-4,jar-4-sense)
is_a(jar-4-sense,jar.n.01)
has_sense(rim-7,rim-7-sense)
is_a(rim-7-sense,rim.n.01)
has_sense(bean-9,bean-9-sense)
is_a(bean-9-sense,bean.n.01)
amod(heat-2, Fill-1)
nsubj(jar-4, heat-2)
aux(jar-4, can-3)
root(ROOT-0, jar-4)
det(rim-7, the-6)
prep_to(jar-4, rim-7)
prep_with(rim-7, bean-9)
has_pos(Fill-1,JJ)
has_pos(heat-2,NN)
has_pos(can-3,MD)
has_pos(jar-4,VB)
has_pos(the-6,DT)
has_pos(rim-7,NN)
has_pos(bean-9,NN)
has_sense(the-6, null)
has_sense(Fill-1, null)
---
// fill the saucepan up three quarters of the way with water .
has_sense(fill-1,fill-1-sense)
is_a(fill-1-sense,fill.v.01)
has_sense(saucepan-3,saucepan-3-sense)
is_a(saucepan-3-sense,saucepan.n.01)
has_sense(up-4,up-4-sense)
is_a(up-4-sense,up.r.01)
has_sense(water-11,water-11-sense)
is_a(water-11-sense,water.n.01)
root(ROOT-0, fill-1)
det(saucepan-3, the-2)
dobj(fill-1, saucepan-3)
advmod(saucepan-3, up-4)
num(quarters-6, three-5)
pobj(up-4, quarters-6)
det(way-9, the-8)
prep_of(saucepan-3, way-9)
prep_with(way-9, water-11)
has_pos(fill-1,VB)
has_pos(the-2,DT)
has_pos(saucepan-3,NN)
has_pos(up-4,RB)
has_pos(three-5,CD)
has_pos(quarters-6,NNS)
has_pos(the-8,DT)
has_pos(way-9,NN)
has_pos(water-11,NN)
has_sense(the-2, null)
has_sense(way-9, null)
has_sense(three-5, null)
has_sense(the-8, null)
has_sense(quarters-6, null)
---
// measure the water as you fill the pot .
has_sense(measure-1,measure-1-sense)
is_a(measure-1-sense,measure.v.01)
has_sense(water-3,water-3-sense)
is_a(water-3-sense,water.n.06)
has_sense(fill-6,fill-6-sense)
is_a(fill-6-sense,fill.v.01)
has_sense(pot-8,pot-8-sense)
is_a(pot-8-sense,pot.n.01)
root(ROOT-0, measure-1)
det(water-3, the-2)
dobj(measure-1, water-3)
mark(fill-6, as-4)
nsubj(fill-6, you-5)
advcl(measure-1, fill-6)
det(pot-8, the-7)
dobj(fill-6, pot-8)
has_pos(measure-1,VB)
has_pos(the-2,DT)
has_pos(water-3,NN)
has_pos(as-4,IN)
has_pos(you-5,PRP)
has_pos(fill-6,VBP)
has_pos(the-7,DT)
has_pos(pot-8,NN)
has_sense(the-7, null)
has_sense(you-5, null)
has_sense(the-2, null)
has_sense(as-4, null)
---
// fill up the muffin cases with your caramel mix and place in the oven for 10 minutes .
has_sense(fill-1,fill-1-sense)
is_a(fill-1-sense,fill.v.01)
has_sense(muffin-4,muffin-4-sense)
is_a(muffin-4-sense,muffin.n.01)
has_sense(mix-9,mix-9-sense)
is_a(mix-9-sense,mix.n.01)
has_sense(place-11,place-11-sense)
is_a(place-11-sense,put.v.01)
has_sense(oven-14,oven-14-sense)
is_a(oven-14-sense,oven.n.01)
root(ROOT-0, fill-1)
prt(fill-1, up-2)
det(cases-5, the-3)
nn(cases-5, muffin-4)
dobj(fill-1, cases-5)
poss(mix-9, your-7)
amod(mix-9, caramel-8)
prep_with(fill-1, mix-9)
conj_and(fill-1, place-11)
det(oven-14, the-13)
prep_in(place-11, oven-14)
num(minutes-17, 10-16)
prep_for(oven-14, minutes-17)
has_pos(fill-1,VB)
has_pos(up-2,RP)
has_pos(the-3,DT)
has_pos(muffin-4,NN)
has_pos(cases-5,NNS)
has_pos(your-7,PRP$)
has_pos(caramel-8,JJ)
has_pos(mix-9,NN)
has_pos(place-11,VB)
has_pos(the-13,DT)
has_pos(oven-14,NN)
has_pos(10-16,CD)
has_pos(minutes-17,NNS)
has_sense(cases-5, null)
has_sense(your-7, null)
has_sense(the-3, null)
has_sense(caramel-8, null)
has_sense(minutes-17, null)
has_sense(up-2, null)
has_sense(10-16, null)
has_sense(the-13, null)
---
// make sure you get enough to fill your desired container .
has_sense(make-1,make-1-sense)
is_a(make-1-sense,make.v.03)
has_sense(sure-2,sure-2-sense)
is_a(sure-2-sense,certain.a.02)
has_sense(get-4,get-4-sense)
is_a(get-4-sense,get.v.01)
has_sense(enough-5,enough-5-sense)
is_a(enough-5-sense,adequate.s.02)
has_sense(fill-7,fill-7-sense)
is_a(fill-7-sense,fill.v.01)
has_sense(container-10,container-10-sense)
is_a(container-10-sense,container.n.01)
root(ROOT-0, make-1)
acomp(make-1, sure-2)
nsubj(enough-5, you-3)
dep(enough-5, get-4)
dep(sure-2, enough-5)
aux(fill-7, to-6)
xcomp(enough-5, fill-7)
poss(container-10, your-8)
amod(container-10, desired-9)
dobj(fill-7, container-10)
has_pos(make-1,VB)
has_pos(sure-2,JJ)
has_pos(you-3,PRP)
has_pos(get-4,VBP)
has_pos(enough-5,JJ)
has_pos(to-6,TO)
has_pos(fill-7,VB)
has_pos(your-8,PRP$)
has_pos(desired-9,VBN)
has_pos(container-10,NN)
has_sense(your-8, null)
has_sense(you-3, null)
has_sense(desired-9, null)
has_sense(to-6, null)
---
// fill the burnt pot with vinegar up to the burn line .
has_sense(fill-1,fill-1-sense)
is_a(fill-1-sense,fill.v.01)
has_sense(pot-4,pot-4-sense)
is_a(pot-4-sense,pot.n.01)
has_sense(vinegar-6,vinegar-6-sense)
is_a(vinegar-6-sense,vinegar.n.01)
has_sense(up-7,up-7-sense)
is_a(up-7-sense,up.r.01)
has_sense(line-11,line-11-sense)
is_a(line-11-sense,line.n.02)
root(ROOT-0, fill-1)
det(pot-4, the-2)
amod(pot-4, burnt-3)
dobj(fill-1, pot-4)
prep_with(pot-4, vinegar-6)
advmod(vinegar-6, up-7)
det(line-11, the-9)
amod(line-11, burn-10)
prep_to(up-7, line-11)
has_pos(fill-1,VB)
has_pos(the-2,DT)
has_pos(burnt-3,JJ)
has_pos(pot-4,NN)
has_pos(vinegar-6,NN)
has_pos(up-7,RB)
has_pos(the-9,DT)
has_pos(burn-10,JJ)
has_pos(line-11,NN)
has_sense(burn-10, null)
has_sense(the-2, null)
has_sense(burnt-3, null)
has_sense(the-9, null)
---
// get a measuring_cup and fill it with water .
has_sense(get-1,get-1-sense)
is_a(get-1-sense,get.v.01)
has_sense(measuring_cup-3,measuring_cup-3-sense)
is_a(measuring_cup-3-sense,measuring_cup.n.01)
has_sense(fill-5,fill-5-sense)
is_a(fill-5-sense,fill.v.01)
has_sense(water-8,water-8-sense)
is_a(water-8-sense,water.n.06)
root(ROOT-0, get-1)
det(measuring_cup-3, a-2)
dobj(get-1, measuring_cup-3)
conj_and(get-1, fill-5)
dobj(fill-5, it-6)
prep_with(fill-5, water-8)
has_pos(get-1,VB)
has_pos(a-2,DT)
has_pos(measuring_cup-3,NN)
has_pos(fill-5,VB)
has_pos(it-6,PRP)
has_pos(water-8,NN)
has_sense(it-6, null)
has_sense(a-2, null)
---
// fill the carving with a salad of watermelon , honeydew , and cantaloupe ball .
has_sense(fill-1,fill-1-sense)
is_a(fill-1-sense,fill.v.01)
has_sense(carving-3,carving-3-sense)
is_a(carving-3-sense,carving.n.01)
has_sense(salad-6,salad-6-sense)
is_a(salad-6-sense,salad.n.01)
has_sense(watermelon-8,watermelon-8-sense)
is_a(watermelon-8-sense,watermelon.n.02)
has_sense(honeydew-10,honeydew-10-sense)
is_a(honeydew-10-sense,honeydew.n.01)
has_sense(cantaloupe-13,cantaloupe-13-sense)
is_a(cantaloupe-13-sense,cantaloup.n.02)
has_sense(ball-14,ball-14-sense)
is_a(ball-14-sense,ball.n.03)
root(ROOT-0, fill-1)
det(carving-3, the-2)
dobj(fill-1, carving-3)
det(salad-6, a-5)
prep_with(fill-1, salad-6)
nn(honeydew-10, watermelon-8)
prep_of(salad-6, honeydew-10)
nn(ball-14, cantaloupe-13)
conj_and(honeydew-10, ball-14)
has_pos(fill-1,VB)
has_pos(the-2,DT)
has_pos(carving-3,NN)
has_pos(a-5,DT)
has_pos(salad-6,NN)
has_pos(watermelon-8,NN)
has_pos(honeydew-10,NN)
has_pos(cantaloupe-13,NN)
has_pos(ball-14,NN)
has_sense(the-2, null)
has_sense(a-5, null)
---
// Fill cups to 3\/4 of an inch from top .
has_sense(inch-7,inch-7-sense)
is_a(inch-7-sense,inch.n.01)
has_sense(top-9,top-9-sense)
is_a(top-9-sense,top.n.01)
amod(cups-2, Fill-1)
root(ROOT-0, cups-2)
prep_to(cups-2, 3\/4-4)
det(inch-7, an-6)
prep_of(cups-2, inch-7)
prep_from(inch-7, top-9)
has_pos(Fill-1,JJ)
has_pos(cups-2,NNS)
has_pos(3\/4-4,CD)
has_pos(an-6,DT)
has_pos(inch-7,NN)
has_pos(top-9,NN)
has_sense(3\/4-4, null)
has_sense(Fill-1, null)
has_sense(cups-2, null)
has_sense(an-6, null)
---
// fill a deep pan about half way with vegetable_oil .
has_sense(fill-1,fill-1-sense)
is_a(fill-1-sense,fill.v.01)
has_sense(deep-3,deep-3-sense)
is_a(deep-3-sense,deep.a.03)
has_sense(pan-4,pan-4-sense)
is_a(pan-4-sense,pan.n.01)
has_sense(about-5,about-5-sense)
is_a(about-5-sense,approximately.r.01)
has_sense(way-7,way-7-sense)
is_a(way-7-sense,way.n.09)
has_sense(vegetable_oil-9,vegetable_oil-9-sense)
is_a(vegetable_oil-9-sense,vegetable_oil.n.01)
root(ROOT-0, fill-1)
det(pan-4, a-2)
amod(pan-4, deep-3)
dobj(fill-1, pan-4)
quantmod(half-6, about-5)
num(way-7, half-6)
npadvmod(fill-1, way-7)
prep_with(fill-1, vegetable_oil-9)
has_pos(fill-1,VB)
has_pos(a-2,DT)
has_pos(deep-3,JJ)
has_pos(pan-4,NN)
has_pos(about-5,RB)
has_pos(half-6,PDT)
has_pos(way-7,NN)
has_pos(vegetable_oil-9,NN)
has_sense(a-2, null)
has_sense(half-6, null)
---
// fill the cavity of the fish with the sliced lemon and fennel and bay leaves .
has_sense(fill-1,fill-1-sense)
is_a(fill-1-sense,fill.v.01)
has_sense(fish-6,fish-6-sense)
is_a(fish-6-sense,fish.n.02)
has_sense(sliced-9,sliced-9-sense)
is_a(sliced-9-sense,chopped.s.01)
has_sense(lemon-10,lemon-10-sense)
is_a(lemon-10-sense,lemon.n.01)
has_sense(fennel-12,fennel-12-sense)
is_a(fennel-12-sense,fennel.n.02)
has_sense(bay-14,bay-14-sense)
is_a(bay-14-sense,true_laurel.n.01)
root(ROOT-0, fill-1)
det(cavity-3, the-2)
dobj(fill-1, cavity-3)
det(fish-6, the-5)
prep_of(cavity-3, fish-6)
det(lemon-10, the-8)
amod(lemon-10, sliced-9)
prep_with(fish-6, lemon-10)
nn(leaves-15, fennel-12)
conj_and(fennel-12, bay-14)
conj_and(lemon-10, leaves-15)
has_pos(fill-1,VB)
has_pos(the-2,DT)
has_pos(cavity-3,NN)
has_pos(the-5,DT)
has_pos(fish-6,NN)
has_pos(the-8,DT)
has_pos(sliced-9,JJ)
has_pos(lemon-10,NN)
has_pos(fennel-12,NN)
has_pos(bay-14,NN)
has_pos(leaves-15,NNS)
has_sense(leaves-15, null)
has_sense(the-5, null)
has_sense(the-2, null)
has_sense(cavity-3, null)
has_sense(the-8, null)
---
// be careful not to fill it with ice more than half way up .
has_sense(be-1,be-1-sense)
is_a(be-1-sense,be.v.01)
has_sense(careful-2,careful-2-sense)
is_a(careful-2-sense,careful.a.01)
has_sense(not-3,not-3-sense)
is_a(not-3-sense,not.r.01)
has_sense(fill-5,fill-5-sense)
is_a(fill-5-sense,fill.v.01)
has_sense(ice-8,ice-8-sense)
is_a(ice-8-sense,ice.n.01)
has_sense(more-9,more-9-sense)
is_a(more-9-sense,more.a.01)
has_sense(up-13,up-13-sense)
is_a(up-13-sense,up.r.01)
cop(careful-2, be-1)
root(ROOT-0, careful-2)
neg(fill-5, not-3)
aux(fill-5, to-4)
dep(careful-2, fill-5)
dobj(fill-5, it-6)
prep_with(fill-5, ice-8)
quantmod(half-11, more-9)
quantmod(half-11, than-10)
num(way-12, half-11)
npadvmod(up-13, way-12)
advmod(fill-5, up-13)
has_pos(be-1,VB)
has_pos(careful-2,JJ)
has_pos(not-3,RB)
has_pos(to-4,TO)
has_pos(fill-5,VB)
has_pos(it-6,PRP)
has_pos(ice-8,NN)
has_pos(more-9,JJR)
has_pos(than-10,IN)
has_pos(half-11,PDT)
has_pos(way-12,NN)
has_pos(up-13,RB)
has_sense(way-12, null)
has_sense(to-4, null)
has_sense(half-11, null)
has_sense(it-6, null)
has_sense(than-10, null)
---
// fill the core hole with spice and fruit .
has_sense(fill-1,fill-1-sense)
is_a(fill-1-sense,fill.v.01)
has_sense(core-3,core-3-sense)
is_a(core-3-sense,core.n.02)
has_sense(hole-4,hole-4-sense)
is_a(hole-4-sense,hole.n.02)
has_sense(spice-6,spice-6-sense)
is_a(spice-6-sense,spice.n.02)
has_sense(fruit-8,fruit-8-sense)
is_a(fruit-8-sense,fruit.n.01)
root(ROOT-0, fill-1)
det(hole-4, the-2)
amod(hole-4, core-3)
dobj(fill-1, hole-4)
prep_with(fill-1, spice-6)
conj_and(spice-6, fruit-8)
has_pos(fill-1,VB)
has_pos(the-2,DT)
has_pos(core-3,JJ)
has_pos(hole-4,NN)
has_pos(spice-6,NN)
has_pos(fruit-8,NN)
has_sense(the-2, null)
---
// Drop your frozen bird in it and fill to the brim with cold water .
has_sense(frozen-3,frozen-3-sense)
is_a(frozen-3-sense,flash-frozen.s.01)
has_sense(bird-4,bird-4-sense)
is_a(bird-4-sense,bird.n.02)
has_sense(fill-8,fill-8-sense)
is_a(fill-8-sense,fill.v.01)
has_sense(brim-11,brim-11-sense)
is_a(brim-11-sense,brim.n.01)
root(ROOT-0, Drop-1)
poss(bird-4, your-2)
amod(bird-4, frozen-3)
dobj(Drop-1, bird-4)
prep_in(Drop-1, it-6)
conj_and(Drop-1, fill-8)
det(brim-11, the-10)
prep_to(fill-8, brim-11)
amod(water-14, cold-13)
prep_with(brim-11, water-14)
has_pos(Drop-1,VB)
has_pos(your-2,PRP$)
has_pos(frozen-3,JJ)
has_pos(bird-4,NN)
has_pos(it-6,PRP)
has_pos(fill-8,VB)
has_pos(the-10,DT)
has_pos(brim-11,NN)
has_pos(cold-13,JJ)
has_pos(water-14,NN)
has_sense(your-2, null)
has_sense(cold-13, null)
has_sense(water-14, null)
has_sense(it-6, null)
has_sense(Drop-1, null)
has_sense(the-10, null)
---
// only fill pan 2\/3 of the way full as the cake will rise during bake .
has_sense(only-1,only-1-sense)
is_a(only-1-sense,merely.r.01)
has_sense(fill-2,fill-2-sense)
is_a(fill-2-sense,fill.v.01)
has_sense(pan-3,pan-3-sense)
is_a(pan-3-sense,pan.n.01)
has_sense(full-8,full-8-sense)
is_a(full-8-sense,full.a.01)
has_sense(cake-11,cake-11-sense)
is_a(cake-11-sense,cake.n.03)
has_sense(rise-13,rise-13-sense)
is_a(rise-13-sense,rise.v.15)
has_sense(bake-15,bake-15-sense)
is_a(bake-15-sense,bake.v.01)
advmod(fill-2, only-1)
root(ROOT-0, fill-2)
number(2\/3-4, pan-3)
dobj(fill-2, 2\/3-4)
det(way-7, the-6)
prep_of(2\/3-4, way-7)
amod(way-7, full-8)
mark(rise-13, as-9)
det(cake-11, the-10)
nsubj(rise-13, cake-11)
aux(rise-13, will-12)
advcl(fill-2, rise-13)
prep_during(rise-13, bake-15)
has_pos(only-1,RB)
has_pos(fill-2,VB)
has_pos(pan-3,CD)
has_pos(2\/3-4,CD)
has_pos(the-6,DT)
has_pos(way-7,NN)
has_pos(full-8,JJ)
has_pos(as-9,IN)
has_pos(the-10,DT)
has_pos(cake-11,NN)
has_pos(will-12,MD)
has_pos(rise-13,VB)
has_pos(bake-15,NN)
has_sense(the-6, null)
has_sense(way-7, null)
has_sense(as-9, null)
has_sense(will-12, null)
has_sense(2\/3-4, null)
has_sense(the-10, null)
---
// fill that pot with regular drinking_water , that will be the broth .
has_sense(fill-1,fill-1-sense)
is_a(fill-1-sense,fill.v.01)
has_sense(pot-3,pot-3-sense)
is_a(pot-3-sense,pot.n.01)
has_sense(regular-5,regular-5-sense)
is_a(regular-5-sense,regular.s.12)
has_sense(drinking_water-6,drinking_water-6-sense)
is_a(drinking_water-6-sense,drinking_water.n.01)
has_sense(be-10,be-10-sense)
is_a(be-10-sense,be.v.01)
has_sense(broth-12,broth-12-sense)
is_a(broth-12-sense,broth.n.01)
root(ROOT-0, fill-1)
det(pot-3, that-2)
dobj(fill-1, pot-3)
amod(drinking_water-6, regular-5)
prep_with(fill-1, drinking_water-6)
nsubj(broth-12, that-8)
aux(broth-12, will-9)
cop(broth-12, be-10)
det(broth-12, the-11)
rcmod(drinking_water-6, broth-12)
has_pos(fill-1,VB)
has_pos(that-2,DT)
has_pos(pot-3,NN)
has_pos(regular-5,JJ)
has_pos(drinking_water-6,NN)
has_pos(that-8,WDT)
has_pos(will-9,MD)
has_pos(be-10,VB)
has_pos(the-11,DT)
has_pos(broth-12,NN)
has_sense(will-9, null)
has_sense(that-8, null)
has_sense(that-2, null)
has_sense(the-11, null)