/* **************************************************************************** 
 * WIKIHOW.COM -- NATURAL-LANGUAGE INSTRUCTIONS
 * 
 * (C) 2011-2013 by Daniel Nyga (nyga@cs.uni-bremen.edu)
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 ******************************************************************************/
// place several layer of paper_towel over the top of the bacon_strip .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(several-2,several-2-sense)
is_a(several-2-sense,several.s.01)
has_sense(layer-3,layer-3-sense)
is_a(layer-3-sense,layer.n.02)
has_sense(paper_towel-5,paper_towel-5-sense)
is_a(paper_towel-5-sense,paper_towel.n.01)
has_sense(bacon_strip-11,bacon_strip-11-sense)
is_a(bacon_strip-11-sense,bacon_strip.n.01)
nn(layer-3, place-1)
amod(layer-3, several-2)
root(ROOT-0, layer-3)
prep_of(layer-3, paper_towel-5)
det(top-8, the-7)
prep_over(layer-3, top-8)
det(bacon_strip-11, the-10)
prep_of(top-8, bacon_strip-11)
has_pos(place-1,NN)
has_pos(several-2,JJ)
has_pos(layer-3,NN)
has_pos(paper_towel-5,NN)
has_pos(the-7,DT)
has_pos(top-8,NN)
has_pos(the-10,DT)
has_pos(bacon_strip-11,NN)
has_sense(the-7, null)
has_sense(top-8, null)
has_sense(the-10, null)
---
// place the lid on the canning pot and bring to a boil .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(lid-3,lid-3-sense)
is_a(lid-3-sense,lid.n.02)
has_sense(pot-7,pot-7-sense)
is_a(pot-7-sense,pot.n.01)
has_sense(bring-9,bring-9-sense)
is_a(bring-9-sense,bring.v.02)
has_sense(boil-12,boil-12-sense)
is_a(boil-12-sense,boiling_point.n.01)
root(ROOT-0, place-1)
det(lid-3, the-2)
dobj(place-1, lid-3)
det(pot-7, the-5)
nn(pot-7, canning-6)
prep_on(place-1, pot-7)
conj_and(place-1, bring-9)
det(boil-12, a-11)
prep_to(bring-9, boil-12)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(lid-3,NN)
has_pos(the-5,DT)
has_pos(canning-6,NN)
has_pos(pot-7,NN)
has_pos(bring-9,VB)
has_pos(a-11,DT)
has_pos(boil-12,NN)
has_sense(the-5, null)
has_sense(a-11, null)
has_sense(the-2, null)
has_sense(canning-6, null)
---
// place the lid on the blender .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(lid-3,lid-3-sense)
is_a(lid-3-sense,lid.n.02)
has_sense(blender-6,blender-6-sense)
is_a(blender-6-sense,blender.n.01)
root(ROOT-0, place-1)
det(lid-3, the-2)
dobj(place-1, lid-3)
det(blender-6, the-5)
prep_on(place-1, blender-6)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(lid-3,NN)
has_pos(the-5,DT)
has_pos(blender-6,NN)
has_sense(the-5, null)
has_sense(the-2, null)
---
// place the jar on a heat resistant surface .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(jar-3,jar-3-sense)
is_a(jar-3-sense,jar.n.01)
has_sense(heat-6,heat-6-sense)
is_a(heat-6-sense,hotness.n.01)
has_sense(resistant-7,resistant-7-sense)
is_a(resistant-7-sense,resistant.s.03)
has_sense(surface-8,surface-8-sense)
is_a(surface-8-sense,surface.n.01)
root(ROOT-0, place-1)
det(jar-3, the-2)
dobj(place-1, jar-3)
det(surface-8, a-5)
nn(surface-8, heat-6)
nn(surface-8, resistant-7)
prep_on(place-1, surface-8)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(jar-3,NN)
has_pos(a-5,DT)
has_pos(heat-6,NN)
has_pos(resistant-7,NN)
has_pos(surface-8,NN)
has_sense(a-5, null)
has_sense(the-2, null)
---
// When all the water have be drain , place the pasta back into the saucepan .
has_sense(water-4,water-4-sense)
is_a(water-4-sense,water.n.06)
has_sense(have-5,have-5-sense)
is_a(have-5-sense,have.v.01)
has_sense(be-6,be-6-sense)
is_a(be-6-sense,be.v.01)
has_sense(drain-7,drain-7-sense)
is_a(drain-7-sense,drain.v.03)
has_sense(place-9,place-9-sense)
is_a(place-9-sense,put.v.01)
has_sense(pasta-11,pasta-11-sense)
is_a(pasta-11-sense,pasta.n.02)
has_sense(back-12,back-12-sense)
is_a(back-12-sense,back.r.01)
has_sense(saucepan-15,saucepan-15-sense)
is_a(saucepan-15-sense,saucepan.n.01)
advmod(have-5, When-1)
predet(water-4, all-2)
det(water-4, the-3)
nsubj(have-5, water-4)
advcl(place-9, have-5)
cop(drain-7, be-6)
ccomp(have-5, drain-7)
root(ROOT-0, place-9)
det(pasta-11, the-10)
dobj(place-9, pasta-11)
advmod(place-9, back-12)
det(saucepan-15, the-14)
prep_into(place-9, saucepan-15)
has_pos(When-1,WRB)
has_pos(all-2,PDT)
has_pos(the-3,DT)
has_pos(water-4,NN)
has_pos(have-5,VBP)
has_pos(be-6,VB)
has_pos(drain-7,NN)
has_pos(place-9,VB)
has_pos(the-10,DT)
has_pos(pasta-11,NN)
has_pos(back-12,RB)
has_pos(the-14,DT)
has_pos(saucepan-15,NN)
has_sense(the-3, null)
has_sense(When-1, null)
has_sense(the-14, null)
has_sense(all-2, null)
has_sense(the-10, null)
---
// place the dinner fork and salad_fork on the side of the napkin .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(dinner-3,dinner-3-sense)
is_a(dinner-3-sense,dinner.n.01)
has_sense(fork-4,fork-4-sense)
is_a(fork-4-sense,fork.n.01)
has_sense(salad_fork-6,salad_fork-6-sense)
is_a(salad_fork-6-sense,salad_fork.n.01)
has_sense(side-9,side-9-sense)
is_a(side-9-sense,side.n.01)
has_sense(napkin-12,napkin-12-sense)
is_a(napkin-12-sense,napkin.n.01)
nsubj(fork-4, place-1)
det(dinner-3, the-2)
dep(place-1, dinner-3)
root(ROOT-0, fork-4)
conj_and(fork-4, salad_fork-6)
det(side-9, the-8)
prep_on(fork-4, side-9)
det(napkin-12, the-11)
prep_of(side-9, napkin-12)
has_pos(place-1,NN)
has_pos(the-2,DT)
has_pos(dinner-3,NN)
has_pos(fork-4,VBP)
has_pos(salad_fork-6,VBP)
has_pos(the-8,DT)
has_pos(side-9,NN)
has_pos(the-11,DT)
has_pos(napkin-12,NN)
has_sense(the-2, null)
has_sense(the-8, null)
has_sense(the-11, null)
---
// place the duck on a cutting_board .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(duck-3,duck-3-sense)
is_a(duck-3-sense,duck.n.03)
has_sense(cutting_board-6,cutting_board-6-sense)
is_a(cutting_board-6-sense,chopping_board.n.01)
root(ROOT-0, place-1)
det(duck-3, the-2)
dobj(place-1, duck-3)
det(cutting_board-6, a-5)
prep_on(place-1, cutting_board-6)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(duck-3,NN)
has_pos(a-5,DT)
has_pos(cutting_board-6,NN)
has_sense(a-5, null)
has_sense(the-2, null)
---
// Place completed jar in canner .
has_sense(jar-3,jar-3-sense)
is_a(jar-3-sense,jar.n.01)
nsubj(completed-2, Place-1)
root(ROOT-0, completed-2)
dobj(completed-2, jar-3)
prep_in(completed-2, canner-5)
has_pos(Place-1,NNP)
has_pos(completed-2,VBD)
has_pos(jar-3,NN)
has_pos(canner-5,NN)
has_sense(Place-1, null)
has_sense(completed-2, null)
has_sense(canner-5, null)
---
// place the defrosted chicken breast on the baking sheet .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(sheet-9,sheet-9-sense)
is_a(sheet-9-sense,sheet.n.01)
root(ROOT-0, place-1)
det(breast-5, the-2)
amod(breast-5, defrosted-3)
nn(breast-5, chicken-4)
dobj(place-1, breast-5)
det(sheet-9, the-7)
amod(sheet-9, baking-8)
prep_on(place-1, sheet-9)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(defrosted-3,JJ)
has_pos(chicken-4,NN)
has_pos(breast-5,NN)
has_pos(the-7,DT)
has_pos(baking-8,JJ)
has_pos(sheet-9,NN)
has_sense(the-7, null)
has_sense(breast-5, null)
has_sense(the-2, null)
has_sense(baking-8, null)
has_sense(chicken-4, null)
has_sense(defrosted-3, null)
---
// place the chicken slowly into the oil .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(chicken-3,chicken-3-sense)
is_a(chicken-3-sense,chicken.n.01)
has_sense(slowly-4,slowly-4-sense)
is_a(slowly-4-sense,slowly.r.01)
has_sense(oil-7,oil-7-sense)
is_a(oil-7-sense,vegetable_oil.n.01)
root(ROOT-0, place-1)
det(chicken-3, the-2)
dobj(place-1, chicken-3)
advmod(place-1, slowly-4)
det(oil-7, the-6)
prep_into(place-1, oil-7)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(chicken-3,NN)
has_pos(slowly-4,RB)
has_pos(the-6,DT)
has_pos(oil-7,NN)
has_sense(the-6, null)
has_sense(the-2, null)
---
// place the turkey breast on top of the onion .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(turkey-3,turkey-3-sense)
is_a(turkey-3-sense,turkey.n.04)
has_sense(breast-4,breast-4-sense)
is_a(breast-4-sense,breast.n.03)
has_sense(top-6,top-6-sense)
is_a(top-6-sense,top.n.02)
has_sense(onion-9,onion-9-sense)
is_a(onion-9-sense,onion.n.01)
root(ROOT-0, place-1)
det(breast-4, the-2)
nn(breast-4, turkey-3)
dobj(place-1, breast-4)
det(onion-9, the-8)
prep_on_top_of(place-1, onion-9)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(turkey-3,NN)
has_pos(breast-4,NN)
has_pos(the-8,DT)
has_pos(onion-9,NN)
has_sense(the-2, null)
has_sense(the-8, null)
---
// place the chicken breast fillet on the top of the bun .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(top-8,top-8-sense)
is_a(top-8-sense,top.n.02)
has_sense(bun-11,bun-11-sense)
is_a(bun-11-sense,bun.n.01)
root(ROOT-0, place-1)
det(fillet-5, the-2)
nn(fillet-5, chicken-3)
nn(fillet-5, breast-4)
dobj(place-1, fillet-5)
det(top-8, the-7)
prep_on(place-1, top-8)
det(bun-11, the-10)
prep_of(top-8, bun-11)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(chicken-3,NN)
has_pos(breast-4,NN)
has_pos(fillet-5,NN)
has_pos(the-7,DT)
has_pos(top-8,NN)
has_pos(the-10,DT)
has_pos(bun-11,NN)
has_sense(breast-4, null)
has_sense(the-7, null)
has_sense(fillet-5, null)
has_sense(the-2, null)
has_sense(chicken-3, null)
has_sense(the-10, null)
---
// place the hot sausage onto a plate .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(hot-3,hot-3-sense)
is_a(hot-3-sense,hot.a.01)
has_sense(sausage-4,sausage-4-sense)
is_a(sausage-4-sense,sausage.n.01)
has_sense(plate-7,plate-7-sense)
is_a(plate-7-sense,plate.n.04)
root(ROOT-0, place-1)
det(sausage-4, the-2)
amod(sausage-4, hot-3)
dobj(place-1, sausage-4)
det(plate-7, a-6)
prep_onto(place-1, plate-7)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(hot-3,JJ)
has_pos(sausage-4,NN)
has_pos(a-6,DT)
has_pos(plate-7,NN)
has_sense(the-2, null)
has_sense(a-6, null)
---
// place each pie inside separate plastic_bag .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(pie-3,pie-3-sense)
is_a(pie-3-sense,pie.n.01)
has_sense(separate-5,separate-5-sense)
is_a(separate-5-sense,separate.a.01)
has_sense(plastic_bag-6,plastic_bag-6-sense)
is_a(plastic_bag-6-sense,plastic_bag.n.01)
root(ROOT-0, place-1)
det(pie-3, each-2)
dobj(place-1, pie-3)
amod(plastic_bag-6, separate-5)
prep_inside(pie-3, plastic_bag-6)
has_pos(place-1,VB)
has_pos(each-2,DT)
has_pos(pie-3,NN)
has_pos(separate-5,JJ)
has_pos(plastic_bag-6,NN)
has_sense(each-2, null)
---
// place a slice of your favorite cheese over the ham .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(slice-3,slice-3-sense)
is_a(slice-3-sense,piece.n.08)
has_sense(favorite-6,favorite-6-sense)
is_a(favorite-6-sense,favored.s.01)
has_sense(cheese-7,cheese-7-sense)
is_a(cheese-7-sense,cheese.n.01)
has_sense(ham-10,ham-10-sense)
is_a(ham-10-sense,ham.n.01)
root(ROOT-0, place-1)
det(slice-3, a-2)
dobj(place-1, slice-3)
poss(cheese-7, your-5)
amod(cheese-7, favorite-6)
prep_of(slice-3, cheese-7)
det(ham-10, the-9)
prep_over(cheese-7, ham-10)
has_pos(place-1,VB)
has_pos(a-2,DT)
has_pos(slice-3,NN)
has_pos(your-5,PRP$)
has_pos(favorite-6,JJ)
has_pos(cheese-7,NN)
has_pos(the-9,DT)
has_pos(ham-10,NN)
has_sense(your-5, null)
has_sense(the-9, null)
has_sense(a-2, null)
---
// carefully remove them and place on a paper_towel to drain .
has_sense(carefully-1,carefully-1-sense)
is_a(carefully-1-sense,carefully.r.01)
has_sense(remove-2,remove-2-sense)
is_a(remove-2-sense,remove.v.01)
has_sense(place-5,place-5-sense)
is_a(place-5-sense,put.v.01)
has_sense(paper_towel-8,paper_towel-8-sense)
is_a(paper_towel-8-sense,paper_towel.n.01)
has_sense(drain-10,drain-10-sense)
is_a(drain-10-sense,drain.v.03)
advmod(remove-2, carefully-1)
root(ROOT-0, remove-2)
dobj(remove-2, them-3)
conj_and(remove-2, place-5)
det(paper_towel-8, a-7)
prep_on(place-5, paper_towel-8)
aux(drain-10, to-9)
infmod(paper_towel-8, drain-10)
has_pos(carefully-1,RB)
has_pos(remove-2,VB)
has_pos(them-3,PRP)
has_pos(place-5,VB)
has_pos(a-7,DT)
has_pos(paper_towel-8,NN)
has_pos(to-9,TO)
has_pos(drain-10,VB)
has_sense(to-9, null)
has_sense(them-3, null)
has_sense(a-7, null)
---
// You may use one packet of yeast to replace 2 teaspoon of yeast in most bread machine recipe .
has_sense(use-3,use-3-sense)
is_a(use-3-sense,use.v.01)
has_sense(packet-5,packet-5-sense)
is_a(packet-5-sense,packet.n.03)
has_sense(yeast-7,yeast-7-sense)
is_a(yeast-7-sense,yeast.n.01)
has_sense(replace-9,replace-9-sense)
is_a(replace-9-sense,replace.v.01)
has_sense(teaspoon-11,teaspoon-11-sense)
is_a(teaspoon-11-sense,teaspoon.n.01)
has_sense(yeast-13,yeast-13-sense)
is_a(yeast-13-sense,yeast.n.01)
has_sense(most-15,most-15-sense)
is_a(most-15-sense,most.a.01)
has_sense(bread-16,bread-16-sense)
is_a(bread-16-sense,bread.n.01)
has_sense(machine-17,machine-17-sense)
is_a(machine-17-sense,machine.n.01)
has_sense(recipe-18,recipe-18-sense)
is_a(recipe-18-sense,recipe.n.01)
nsubj(use-3, You-1)
aux(use-3, may-2)
root(ROOT-0, use-3)
num(packet-5, one-4)
dobj(use-3, packet-5)
prep_of(packet-5, yeast-7)
aux(replace-9, to-8)
xcomp(use-3, replace-9)
num(teaspoon-11, 2-10)
dobj(replace-9, teaspoon-11)
prep_of(teaspoon-11, yeast-13)
advmod(bread-16, most-15)
amod(recipe-18, bread-16)
nn(recipe-18, machine-17)
prep_in(replace-9, recipe-18)
has_pos(You-1,PRP)
has_pos(may-2,MD)
has_pos(use-3,VB)
has_pos(one-4,CD)
has_pos(packet-5,NN)
has_pos(yeast-7,NN)
has_pos(to-8,TO)
has_pos(replace-9,VB)
has_pos(2-10,CD)
has_pos(teaspoon-11,NN)
has_pos(yeast-13,NN)
has_pos(most-15,RBS)
has_pos(bread-16,JJ)
has_pos(machine-17,NN)
has_pos(recipe-18,NN)
has_sense(to-8, null)
has_sense(You-1, null)
has_sense(one-4, null)
has_sense(may-2, null)
has_sense(2-10, null)
---
// place lid on jar and secure tightly .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(lid-2,lid-2-sense)
is_a(lid-2-sense,lid.n.02)
has_sense(jar-4,jar-4-sense)
is_a(jar-4-sense,jar.n.01)
has_sense(tightly-7,tightly-7-sense)
is_a(tightly-7-sense,tightly.r.02)
root(ROOT-0, place-1)
dep(place-1, lid-2)
prep_on(lid-2, jar-4)
conj_and(lid-2, secure-6)
advmod(secure-6, tightly-7)
has_pos(place-1,VB)
has_pos(lid-2,VBN)
has_pos(jar-4,NN)
has_pos(secure-6,JJ)
has_pos(tightly-7,RB)
has_sense(secure-6, null)
---
// place the chicken in a bowl of paper_towel to absorb the oil .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(chicken-3,chicken-3-sense)
is_a(chicken-3-sense,chicken.n.01)
has_sense(bowl-6,bowl-6-sense)
is_a(bowl-6-sense,bowl.n.01)
has_sense(paper_towel-8,paper_towel-8-sense)
is_a(paper_towel-8-sense,paper_towel.n.01)
has_sense(absorb-10,absorb-10-sense)
is_a(absorb-10-sense,absorb.v.06)
has_sense(oil-12,oil-12-sense)
is_a(oil-12-sense,vegetable_oil.n.01)
root(ROOT-0, place-1)
det(chicken-3, the-2)
dobj(place-1, chicken-3)
det(bowl-6, a-5)
prep_in(chicken-3, bowl-6)
prep_of(bowl-6, paper_towel-8)
aux(absorb-10, to-9)
xcomp(place-1, absorb-10)
det(oil-12, the-11)
dobj(absorb-10, oil-12)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(chicken-3,NN)
has_pos(a-5,DT)
has_pos(bowl-6,NN)
has_pos(paper_towel-8,NN)
has_pos(to-9,TO)
has_pos(absorb-10,VB)
has_pos(the-11,DT)
has_pos(oil-12,NN)
has_sense(to-9, null)
has_sense(the-2, null)
has_sense(a-5, null)
has_sense(the-11, null)
---
// place the marinated steak on the grill , then cook to the desire level of doneness .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(steak-4,steak-4-sense)
is_a(steak-4-sense,steak.n.01)
has_sense(grill-7,grill-7-sense)
is_a(grill-7-sense,grill.n.02)
has_sense(then-9,then-9-sense)
is_a(then-9-sense,then.r.01)
has_sense(cook-10,cook-10-sense)
is_a(cook-10-sense,cook.v.02)
has_sense(desire-13,desire-13-sense)
is_a(desire-13-sense,desire.v.01)
has_sense(level-14,level-14-sense)
is_a(level-14-sense,degree.n.01)
root(ROOT-0, place-1)
det(steak-4, the-2)
amod(steak-4, marinated-3)
dobj(place-1, steak-4)
det(grill-7, the-6)
prep_on(place-1, grill-7)
advmod(place-1, then-9)
dep(place-1, cook-10)
det(level-14, the-12)
nn(level-14, desire-13)
prep_to(cook-10, level-14)
prep_of(level-14, doneness-16)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(marinated-3,JJ)
has_pos(steak-4,NN)
has_pos(the-6,DT)
has_pos(grill-7,NN)
has_pos(then-9,RB)
has_pos(cook-10,VB)
has_pos(the-12,DT)
has_pos(desire-13,NN)
has_pos(level-14,NN)
has_pos(doneness-16,NNS)
has_sense(the-6, null)
has_sense(the-2, null)
has_sense(the-12, null)
has_sense(doneness-16, null)
has_sense(marinated-3, null)
---
// place the roasting pan in the center of the cooking grate .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(roasting-3,roasting-3-sense)
is_a(roasting-3-sense,roasting.n.01)
has_sense(center-7,center-7-sense)
is_a(center-7-sense,center.n.01)
has_sense(grate-11,grate-11-sense)
is_a(grate-11-sense,grate.n.01)
root(ROOT-0, place-1)
det(roasting-3, the-2)
nsubj(pan-4, roasting-3)
ccomp(place-1, pan-4)
det(center-7, the-6)
prep_in(pan-4, center-7)
det(grate-11, the-9)
amod(grate-11, cooking-10)
prep_of(center-7, grate-11)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(roasting-3,NN)
has_pos(pan-4,VB)
has_pos(the-6,DT)
has_pos(center-7,NN)
has_pos(the-9,DT)
has_pos(cooking-10,JJ)
has_pos(grate-11,NN)
has_sense(the-6, null)
has_sense(cooking-10, null)
has_sense(the-2, null)
has_sense(the-9, null)
has_sense(pan-4, null)
---
// replace the lid and put the bread_dough into the oven .
has_sense(replace-1,replace-1-sense)
is_a(replace-1-sense,replace.v.03)
has_sense(lid-3,lid-3-sense)
is_a(lid-3-sense,lid.n.02)
has_sense(put-5,put-5-sense)
is_a(put-5-sense,put.v.01)
has_sense(bread_dough-7,bread_dough-7-sense)
is_a(bread_dough-7-sense,bread_dough.n.01)
has_sense(oven-10,oven-10-sense)
is_a(oven-10-sense,oven.n.01)
root(ROOT-0, replace-1)
det(lid-3, the-2)
dobj(replace-1, lid-3)
conj_and(replace-1, put-5)
det(bread_dough-7, the-6)
dobj(put-5, bread_dough-7)
det(oven-10, the-9)
prep_into(put-5, oven-10)
has_pos(replace-1,VB)
has_pos(the-2,DT)
has_pos(lid-3,NN)
has_pos(put-5,VB)
has_pos(the-6,DT)
has_pos(bread_dough-7,NN)
has_pos(the-9,DT)
has_pos(oven-10,NN)
has_sense(the-6, null)
has_sense(the-2, null)
has_sense(the-9, null)
---
// remove ham from the slow cooker and place on cutting_board .
has_sense(remove-1,remove-1-sense)
is_a(remove-1-sense,remove.v.01)
has_sense(ham-2,ham-2-sense)
is_a(ham-2-sense,ham.n.01)
has_sense(slow-5,slow-5-sense)
is_a(slow-5-sense,slow.a.01)
has_sense(cooker-6,cooker-6-sense)
is_a(cooker-6-sense,cooker.n.01)
has_sense(place-8,place-8-sense)
is_a(place-8-sense,put.v.01)
has_sense(cutting_board-10,cutting_board-10-sense)
is_a(cutting_board-10-sense,chopping_board.n.01)
root(ROOT-0, remove-1)
dobj(remove-1, ham-2)
det(cooker-6, the-4)
amod(cooker-6, slow-5)
prep_from(remove-1, cooker-6)
conj_and(cooker-6, place-8)
prep_on(cooker-6, cutting_board-10)
has_pos(remove-1,VB)
has_pos(ham-2,NN)
has_pos(the-4,DT)
has_pos(slow-5,JJ)
has_pos(cooker-6,NN)
has_pos(place-8,NN)
has_pos(cutting_board-10,NN)
has_sense(the-4, null)
---
// Place each filled jar on the canning rack .
has_sense(jar-4,jar-4-sense)
is_a(jar-4-sense,jar.n.01)
has_sense(rack-8,rack-8-sense)
is_a(rack-8-sense,rack.n.01)
nsubj(filled-3, Place-1)
dep(filled-3, each-2)
root(ROOT-0, filled-3)
dobj(filled-3, jar-4)
det(rack-8, the-6)
nn(rack-8, canning-7)
prep_on(filled-3, rack-8)
has_pos(Place-1,NNP)
has_pos(each-2,DT)
has_pos(filled-3,VBD)
has_pos(jar-4,NN)
has_pos(the-6,DT)
has_pos(canning-7,NN)
has_pos(rack-8,NN)
has_sense(the-6, null)
has_sense(each-2, null)
has_sense(Place-1, null)
has_sense(filled-3, null)
has_sense(canning-7, null)
---
// remove the turkey from the juice and place on a cutting_board .
has_sense(remove-1,remove-1-sense)
is_a(remove-1-sense,remove.v.01)
has_sense(turkey-3,turkey-3-sense)
is_a(turkey-3-sense,turkey.n.04)
has_sense(juice-6,juice-6-sense)
is_a(juice-6-sense,juice.n.01)
has_sense(place-8,place-8-sense)
is_a(place-8-sense,put.v.01)
has_sense(cutting_board-11,cutting_board-11-sense)
is_a(cutting_board-11-sense,chopping_board.n.01)
root(ROOT-0, remove-1)
det(turkey-3, the-2)
dobj(remove-1, turkey-3)
det(juice-6, the-5)
prep_from(remove-1, juice-6)
conj_and(juice-6, place-8)
det(cutting_board-11, a-10)
prep_on(juice-6, cutting_board-11)
has_pos(remove-1,VB)
has_pos(the-2,DT)
has_pos(turkey-3,NN)
has_pos(the-5,DT)
has_pos(juice-6,NN)
has_pos(place-8,NN)
has_pos(a-10,DT)
has_pos(cutting_board-11,NN)
has_sense(the-5, null)
has_sense(a-10, null)
has_sense(the-2, null)
---
// place the tray in the oven for 90 minutes to cook .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(tray-3,tray-3-sense)
is_a(tray-3-sense,tray.n.01)
has_sense(oven-6,oven-6-sense)
is_a(oven-6-sense,oven.n.01)
has_sense(cook-11,cook-11-sense)
is_a(cook-11-sense,cook.v.02)
root(ROOT-0, place-1)
det(tray-3, the-2)
dobj(place-1, tray-3)
det(oven-6, the-5)
prep_in(tray-3, oven-6)
num(minutes-9, 90-8)
prep_for(oven-6, minutes-9)
aux(cook-11, to-10)
xcomp(place-1, cook-11)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(tray-3,NN)
has_pos(the-5,DT)
has_pos(oven-6,NN)
has_pos(90-8,CD)
has_pos(minutes-9,NNS)
has_pos(to-10,TO)
has_pos(cook-11,VB)
has_sense(the-5, null)
has_sense(minutes-9, null)
has_sense(the-2, null)
has_sense(90-8, null)
has_sense(to-10, null)
---
// place few slice of ham over the lettuce .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(few-2,few-2-sense)
is_a(few-2-sense,few.a.01)
has_sense(slice-3,slice-3-sense)
is_a(slice-3-sense,piece.n.08)
has_sense(ham-5,ham-5-sense)
is_a(ham-5-sense,ham.n.01)
has_sense(lettuce-8,lettuce-8-sense)
is_a(lettuce-8-sense,lettuce.n.03)
nn(slice-3, place-1)
amod(slice-3, few-2)
root(ROOT-0, slice-3)
prep_of(slice-3, ham-5)
det(lettuce-8, the-7)
prep_over(slice-3, lettuce-8)
has_pos(place-1,NN)
has_pos(few-2,JJ)
has_pos(slice-3,NN)
has_pos(ham-5,NN)
has_pos(the-7,DT)
has_pos(lettuce-8,NN)
has_sense(the-7, null)
---
// place the utensil in the water .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(utensil-3,utensil-3-sense)
is_a(utensil-3-sense,utensil.n.01)
has_sense(water-6,water-6-sense)
is_a(water-6-sense,water.n.06)
root(ROOT-0, place-1)
det(utensil-3, the-2)
dobj(place-1, utensil-3)
det(water-6, the-5)
prep_in(utensil-3, water-6)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(utensil-3,NN)
has_pos(the-5,DT)
has_pos(water-6,NN)
has_sense(the-5, null)
has_sense(the-2, null)
---
// place the flat side of each large slice face down on the cutting_board .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(flat-3,flat-3-sense)
is_a(flat-3-sense,flat.s.01)
has_sense(side-4,side-4-sense)
is_a(side-4-sense,side.n.04)
has_sense(large-7,large-7-sense)
is_a(large-7-sense,large.a.01)
has_sense(slice-8,slice-8-sense)
is_a(slice-8-sense,piece.n.08)
has_sense(cutting_board-13,cutting_board-13-sense)
is_a(cutting_board-13-sense,chopping_board.n.01)
root(ROOT-0, place-1)
det(side-4, the-2)
amod(side-4, flat-3)
nsubj(face-9, side-4)
det(slice-8, each-6)
amod(slice-8, large-7)
prep_of(side-4, slice-8)
ccomp(place-1, face-9)
prt(face-9, down-10)
det(cutting_board-13, the-12)
prep_on(face-9, cutting_board-13)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(flat-3,JJ)
has_pos(side-4,NN)
has_pos(each-6,DT)
has_pos(large-7,JJ)
has_pos(slice-8,NN)
has_pos(face-9,VB)
has_pos(down-10,RP)
has_pos(the-12,DT)
has_pos(cutting_board-13,NN)
has_sense(the-2, null)
has_sense(each-6, null)
has_sense(down-10, null)
has_sense(face-9, null)
has_sense(the-12, null)
---
// place a cooked beef hot_dog in the bun .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(cooked-3,cooked-3-sense)
is_a(cooked-3-sense,cooked.a.01)
has_sense(beef-4,beef-4-sense)
is_a(beef-4-sense,beef.n.02)
has_sense(hot_dog-5,hot_dog-5-sense)
is_a(hot_dog-5-sense,hotdog.n.02)
has_sense(bun-8,bun-8-sense)
is_a(bun-8-sense,bun.n.01)
root(ROOT-0, place-1)
det(beef-4, a-2)
amod(beef-4, cooked-3)
dobj(place-1, beef-4)
partmod(beef-4, hot_dog-5)
det(bun-8, the-7)
prep_in(hot_dog-5, bun-8)
has_pos(place-1,VB)
has_pos(a-2,DT)
has_pos(cooked-3,JJ)
has_pos(beef-4,NN)
has_pos(hot_dog-5,VBG)
has_pos(the-7,DT)
has_pos(bun-8,NN)
has_sense(the-7, null)
has_sense(a-2, null)
---
// place lid on jar and place in canner leave 2-3 inch above the jar .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(lid-2,lid-2-sense)
is_a(lid-2-sense,lid.n.02)
has_sense(jar-4,jar-4-sense)
is_a(jar-4-sense,jar.n.01)
has_sense(leave-9,leave-9-sense)
is_a(leave-9-sense,leave.v.02)
has_sense(inch-11,inch-11-sense)
is_a(inch-11-sense,inch.n.01)
has_sense(jar-14,jar-14-sense)
is_a(jar-14-sense,jar.n.01)
nn(lid-2, place-1)
nsubj(leave-9, lid-2)
prep_on(lid-2, jar-4)
conj_and(jar-4, place-6)
prep_in(jar-4, canner-8)
root(ROOT-0, leave-9)
num(inch-11, 2-3-10)
dobj(leave-9, inch-11)
det(jar-14, the-13)
prep_above(inch-11, jar-14)
has_pos(place-1,NN)
has_pos(lid-2,NN)
has_pos(jar-4,NN)
has_pos(place-6,NN)
has_pos(canner-8,NN)
has_pos(leave-9,VBP)
has_pos(2-3-10,CD)
has_pos(inch-11,NN)
has_pos(the-13,DT)
has_pos(jar-14,NN)
has_sense(2-3-10, null)
has_sense(the-13, null)
has_sense(canner-8, null)
has_sense(place-6, null)
---
// place the dinner knife on the right side of the plate and the butter_knife following .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(knife-4,knife-4-sense)
is_a(knife-4-sense,knife.n.01)
has_sense(right-7,right-7-sense)
is_a(right-7-sense,right.a.01)
has_sense(side-8,side-8-sense)
is_a(side-8-sense,side.n.01)
has_sense(plate-11,plate-11-sense)
is_a(plate-11-sense,plate.n.04)
has_sense(butter_knife-14,butter_knife-14-sense)
is_a(butter_knife-14-sense,butter_knife.n.01)
root(ROOT-0, place-1)
det(knife-4, the-2)
nn(knife-4, dinner-3)
dobj(place-1, knife-4)
det(side-8, the-6)
amod(side-8, right-7)
prep_on(place-1, side-8)
det(plate-11, the-10)
prep_of(side-8, plate-11)
det(following-15, the-13)
amod(following-15, butter_knife-14)
conj_and(plate-11, following-15)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(dinner-3,NN)
has_pos(knife-4,NN)
has_pos(the-6,DT)
has_pos(right-7,JJ)
has_pos(side-8,NN)
has_pos(the-10,DT)
has_pos(plate-11,NN)
has_pos(the-13,DT)
has_pos(butter_knife-14,JJ)
has_pos(following-15,NN)
has_sense(the-6, null)
has_sense(the-2, null)
has_sense(dinner-3, null)
has_sense(following-15, null)
has_sense(the-13, null)
has_sense(the-10, null)
---
// place the wrapped dough in the refrigerator .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(wrapped-3,wrapped-3-sense)
is_a(wrapped-3-sense,cloaked.s.02)
has_sense(dough-4,dough-4-sense)
is_a(dough-4-sense,dough.n.01)
has_sense(refrigerator-7,refrigerator-7-sense)
is_a(refrigerator-7-sense,refrigerator.n.01)
root(ROOT-0, place-1)
det(dough-4, the-2)
amod(dough-4, wrapped-3)
dobj(place-1, dough-4)
det(refrigerator-7, the-6)
prep_in(place-1, refrigerator-7)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(wrapped-3,JJ)
has_pos(dough-4,NN)
has_pos(the-6,DT)
has_pos(refrigerator-7,NN)
has_sense(the-6, null)
has_sense(the-2, null)
---
// place the jar on a towel .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(jar-3,jar-3-sense)
is_a(jar-3-sense,jar.n.01)
has_sense(towel-6,towel-6-sense)
is_a(towel-6-sense,towel.n.01)
root(ROOT-0, place-1)
det(jar-3, the-2)
dobj(place-1, jar-3)
det(towel-6, a-5)
prep_on(place-1, towel-6)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(jar-3,NN)
has_pos(a-5,DT)
has_pos(towel-6,NN)
has_sense(a-5, null)
has_sense(the-2, null)
---
// place 1 piece of dough into a mixing_bowl .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(piece-3,piece-3-sense)
is_a(piece-3-sense,piece.n.01)
has_sense(dough-5,dough-5-sense)
is_a(dough-5-sense,dough.n.01)
has_sense(mixing_bowl-8,mixing_bowl-8-sense)
is_a(mixing_bowl-8-sense,mixing_bowl.n.01)
root(ROOT-0, place-1)
num(piece-3, 1-2)
dobj(place-1, piece-3)
prep_of(piece-3, dough-5)
det(mixing_bowl-8, a-7)
prep_into(place-1, mixing_bowl-8)
has_pos(place-1,VB)
has_pos(1-2,CD)
has_pos(piece-3,NN)
has_pos(dough-5,NN)
has_pos(a-7,DT)
has_pos(mixing_bowl-8,NN)
has_sense(1-2, null)
has_sense(a-7, null)
---
// place a large plate on top of the bowl .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(large-3,large-3-sense)
is_a(large-3-sense,large.a.01)
has_sense(plate-4,plate-4-sense)
is_a(plate-4-sense,plate.n.04)
has_sense(top-6,top-6-sense)
is_a(top-6-sense,top.n.01)
has_sense(bowl-9,bowl-9-sense)
is_a(bowl-9-sense,bowl.n.01)
root(ROOT-0, place-1)
det(plate-4, a-2)
amod(plate-4, large-3)
dobj(place-1, plate-4)
det(bowl-9, the-8)
prep_on_top_of(place-1, bowl-9)
has_pos(place-1,VB)
has_pos(a-2,DT)
has_pos(large-3,JJ)
has_pos(plate-4,NN)
has_pos(the-8,DT)
has_pos(bowl-9,NN)
has_sense(a-2, null)
has_sense(the-8, null)
---
// place the skillet on low heat and remove the garlic piece after a few minutes .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(skillet-3,skillet-3-sense)
is_a(skillet-3-sense,frying_pan.n.01)
has_sense(low-5,low-5-sense)
is_a(low-5-sense,low.a.01)
has_sense(heat-6,heat-6-sense)
is_a(heat-6-sense,hotness.n.01)
has_sense(remove-8,remove-8-sense)
is_a(remove-8-sense,remove.v.01)
has_sense(garlic-10,garlic-10-sense)
is_a(garlic-10-sense,garlic.n.02)
has_sense(piece-11,piece-11-sense)
is_a(piece-11-sense,piece.n.01)
has_sense(few-14,few-14-sense)
is_a(few-14-sense,few.a.01)
root(ROOT-0, place-1)
det(skillet-3, the-2)
dobj(place-1, skillet-3)
amod(heat-6, low-5)
prep_on(place-1, heat-6)
conj_and(place-1, remove-8)
det(piece-11, the-9)
amod(piece-11, garlic-10)
dobj(remove-8, piece-11)
det(minutes-15, a-13)
amod(minutes-15, few-14)
prep_after(remove-8, minutes-15)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(skillet-3,NN)
has_pos(low-5,JJ)
has_pos(heat-6,NN)
has_pos(remove-8,VB)
has_pos(the-9,DT)
has_pos(garlic-10,JJ)
has_pos(piece-11,NN)
has_pos(a-13,DT)
has_pos(few-14,JJ)
has_pos(minutes-15,NNS)
has_sense(the-2, null)
has_sense(a-13, null)
has_sense(the-9, null)
has_sense(minutes-15, null)
---
// place the cake in the oven .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(cake-3,cake-3-sense)
is_a(cake-3-sense,cake.n.03)
has_sense(oven-6,oven-6-sense)
is_a(oven-6-sense,oven.n.01)
root(ROOT-0, place-1)
det(cake-3, the-2)
dobj(place-1, cake-3)
det(oven-6, the-5)
prep_in(cake-3, oven-6)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(cake-3,NN)
has_pos(the-5,DT)
has_pos(oven-6,NN)
has_sense(the-5, null)
has_sense(the-2, null)
---
// place additional ice_cube into the shaker .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(additional-2,additional-2-sense)
is_a(additional-2-sense,extra.s.03)
has_sense(ice_cube-3,ice_cube-3-sense)
is_a(ice_cube-3-sense,ice_cube.n.01)
has_sense(shaker-6,shaker-6-sense)
is_a(shaker-6-sense,shaker.n.03)
root(ROOT-0, place-1)
amod(ice_cube-3, additional-2)
dobj(place-1, ice_cube-3)
det(shaker-6, the-5)
prep_into(place-1, shaker-6)
has_pos(place-1,VB)
has_pos(additional-2,JJ)
has_pos(ice_cube-3,NN)
has_pos(the-5,DT)
has_pos(shaker-6,NN)
has_sense(the-5, null)
---
// Cut chicken_wing into parts and place inside container .
has_sense(chicken_wing-2,chicken_wing-2-sense)
is_a(chicken_wing-2-sense,chicken_wing.n.01)
has_sense(container-8,container-8-sense)
is_a(container-8-sense,container.n.01)
nsubj(chicken_wing-2, Cut-1)
root(ROOT-0, chicken_wing-2)
prep_into(chicken_wing-2, parts-4)
conj_and(parts-4, place-6)
prep_inside(chicken_wing-2, container-8)
has_pos(Cut-1,NNP)
has_pos(chicken_wing-2,VBD)
has_pos(parts-4,NNS)
has_pos(place-6,NN)
has_pos(container-8,NN)
has_sense(place-6, null)
has_sense(Cut-1, null)
has_sense(parts-4, null)
---
// place it on the warm part of the grill .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(warm-5,warm-5-sense)
is_a(warm-5-sense,warm.a.01)
has_sense(part-6,part-6-sense)
is_a(part-6-sense,part.n.02)
has_sense(grill-9,grill-9-sense)
is_a(grill-9-sense,grill.n.02)
root(ROOT-0, place-1)
dobj(place-1, it-2)
det(part-6, the-4)
amod(part-6, warm-5)
prep_on(place-1, part-6)
det(grill-9, the-8)
prep_of(part-6, grill-9)
has_pos(place-1,VB)
has_pos(it-2,PRP)
has_pos(the-4,DT)
has_pos(warm-5,JJ)
has_pos(part-6,NN)
has_pos(the-8,DT)
has_pos(grill-9,NN)
has_sense(the-4, null)
has_sense(the-8, null)
has_sense(it-2, null)
---
// place the stuffed flank_steak in the pan .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(stuffed-3,stuffed-3-sense)
is_a(stuffed-3-sense,stuffed.s.01)
has_sense(flank_steak-4,flank_steak-4-sense)
is_a(flank_steak-4-sense,flank_steak.n.01)
has_sense(pan-7,pan-7-sense)
is_a(pan-7-sense,pan.n.01)
root(ROOT-0, place-1)
det(flank_steak-4, the-2)
amod(flank_steak-4, stuffed-3)
dobj(place-1, flank_steak-4)
det(pan-7, the-6)
prep_in(place-1, pan-7)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(stuffed-3,JJ)
has_pos(flank_steak-4,NN)
has_pos(the-6,DT)
has_pos(pan-7,NN)
has_sense(the-6, null)
has_sense(the-2, null)
---
// Place pie in preheat oven and bake for 40 minutes .
has_sense(pie-2,pie-2-sense)
is_a(pie-2-sense,pie.n.01)
has_sense(in-3,in-3-sense)
is_a(in-3-sense,in.r.01)
has_sense(preheat-4,preheat-4-sense)
is_a(preheat-4-sense,preheat.v.01)
has_sense(oven-5,oven-5-sense)
is_a(oven-5-sense,oven.n.01)
has_sense(bake-7,bake-7-sense)
is_a(bake-7-sense,bake.v.01)
root(ROOT-0, Place-1)
dobj(Place-1, pie-2)
amod(oven-5, preheat-4)
prep_in(Place-1, oven-5)
conj_and(Place-1, bake-7)
num(minutes-10, 40-9)
prep_for(bake-7, minutes-10)
has_pos(Place-1,VB)
has_pos(pie-2,NN)
has_pos(preheat-4,JJ)
has_pos(oven-5,NN)
has_pos(bake-7,VB)
has_pos(40-9,CD)
has_pos(minutes-10,NNS)
has_sense(40-9, null)
has_sense(Place-1, null)
has_sense(minutes-10, null)
---
// place your three fork on the left side of the dinner_plate -LRB- salad_fork , meal fork , and fish fork -RRB- .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(fork-4,fork-4-sense)
is_a(fork-4-sense,fork.n.01)
has_sense(left-7,left-7-sense)
is_a(left-7-sense,left.a.01)
has_sense(side-8,side-8-sense)
is_a(side-8-sense,side.n.01)
has_sense(dinner_plate-11,dinner_plate-11-sense)
is_a(dinner_plate-11-sense,dinner_plate.n.01)
has_sense(salad_fork-13,salad_fork-13-sense)
is_a(salad_fork-13-sense,salad_fork.n.01)
has_sense(fork-16,fork-16-sense)
is_a(fork-16-sense,fork.n.01)
has_sense(fish-19,fish-19-sense)
is_a(fish-19-sense,fish.n.02)
has_sense(fork-20,fork-20-sense)
is_a(fork-20-sense,fork.n.01)
root(ROOT-0, place-1)
poss(fork-4, your-2)
num(fork-4, three-3)
dobj(place-1, fork-4)
det(side-8, the-6)
amod(side-8, left-7)
prep_on(place-1, side-8)
det(dinner_plate-11, the-10)
prep_of(side-8, dinner_plate-11)
dep(dinner_plate-11, salad_fork-13)
nn(fork-16, meal-15)
conj_and(salad_fork-13, fork-16)
nn(fork-20, fish-19)
conj_and(salad_fork-13, fork-20)
has_pos(place-1,VB)
has_pos(your-2,PRP$)
has_pos(three-3,CD)
has_pos(fork-4,NN)
has_pos(the-6,DT)
has_pos(left-7,JJ)
has_pos(side-8,NN)
has_pos(the-10,DT)
has_pos(dinner_plate-11,NN)
has_pos(salad_fork-13,NN)
has_pos(meal-15,NN)
has_pos(fork-16,NN)
has_pos(fish-19,NN)
has_pos(fork-20,NN)
has_sense(the-6, null)
has_sense(your-2, null)
has_sense(three-3, null)
has_sense(meal-15, null)
has_sense(the-10, null)
---
// place the pan in the machine and make sure it fit properly .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(pan-3,pan-3-sense)
is_a(pan-3-sense,pan.n.01)
has_sense(machine-6,machine-6-sense)
is_a(machine-6-sense,machine.n.01)
has_sense(sure-9,sure-9-sense)
is_a(sure-9-sense,certain.a.02)
has_sense(fit-11,fit-11-sense)
is_a(fit-11-sense,fit.v.02)
has_sense(properly-12,properly-12-sense)
is_a(properly-12-sense,properly.r.01)
root(ROOT-0, place-1)
det(pan-3, the-2)
dobj(place-1, pan-3)
det(machine-6, the-5)
prep_in(pan-3, machine-6)
conj_and(place-1, make-8)
acomp(make-8, sure-9)
nsubj(fit-11, it-10)
dep(sure-9, fit-11)
advmod(fit-11, properly-12)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(pan-3,NN)
has_pos(the-5,DT)
has_pos(machine-6,NN)
has_pos(make-8,VB)
has_pos(sure-9,JJ)
has_pos(it-10,PRP)
has_pos(fit-11,VBP)
has_pos(properly-12,RB)
has_sense(the-5, null)
has_sense(the-2, null)
has_sense(it-10, null)
has_sense(make-8, null)
---
// place the lid of the freezer container on .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(lid-3,lid-3-sense)
is_a(lid-3-sense,lid.n.02)
has_sense(freezer-6,freezer-6-sense)
is_a(freezer-6-sense,deep-freeze.n.01)
has_sense(container-7,container-7-sense)
is_a(container-7-sense,container.n.01)
root(ROOT-0, place-1)
det(lid-3, the-2)
dobj(place-1, lid-3)
det(container-7, the-5)
nn(container-7, freezer-6)
prep_of(lid-3, container-7)
prt(place-1, on-8)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(lid-3,NN)
has_pos(the-5,DT)
has_pos(freezer-6,NN)
has_pos(container-7,NN)
has_pos(on-8,RP)
has_sense(on-8, null)
has_sense(the-5, null)
has_sense(the-2, null)
---
// place your smoker in a well-ventilated area , outdoors .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(area-7,area-7-sense)
is_a(area-7-sense,area.n.01)
has_sense(outdoors-9,outdoors-9-sense)
is_a(outdoors-9-sense,outdoors.n.01)
root(ROOT-0, place-1)
poss(smoker-3, your-2)
dobj(place-1, smoker-3)
det(area-7, a-5)
amod(area-7, well-ventilated-6)
prep_in(place-1, area-7)
appos(area-7, outdoors-9)
has_pos(place-1,VB)
has_pos(your-2,PRP$)
has_pos(smoker-3,NN)
has_pos(a-5,DT)
has_pos(well-ventilated-6,JJ)
has_pos(area-7,NN)
has_pos(outdoors-9,NNS)
has_sense(well-ventilated-6, null)
has_sense(your-2, null)
has_sense(a-5, null)
has_sense(smoker-3, null)
---
// place the plum evenly on top of the batter .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(plum-3,plum-3-sense)
is_a(plum-3-sense,plum.n.02)
has_sense(evenly-4,evenly-4-sense)
is_a(evenly-4-sense,evenly.r.02)
has_sense(top-6,top-6-sense)
is_a(top-6-sense,top.n.01)
has_sense(batter-9,batter-9-sense)
is_a(batter-9-sense,batter.n.02)
root(ROOT-0, place-1)
det(plum-3, the-2)
npadvmod(evenly-4, plum-3)
advmod(place-1, evenly-4)
det(batter-9, the-8)
prep_on_top_of(place-1, batter-9)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(plum-3,NN)
has_pos(evenly-4,RB)
has_pos(the-8,DT)
has_pos(batter-9,NN)
has_sense(the-2, null)
has_sense(the-8, null)
---
// place the lamb on the foil and season liberally with salt and grounded pepper .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(lamb-3,lamb-3-sense)
is_a(lamb-3-sense,lamb.n.05)
has_sense(foil-6,foil-6-sense)
is_a(foil-6-sense,foil.n.01)
has_sense(liberally-9,liberally-9-sense)
is_a(liberally-9-sense,liberally.r.02)
has_sense(salt-11,salt-11-sense)
is_a(salt-11-sense,salt.n.02)
has_sense(pepper-14,pepper-14-sense)
is_a(pepper-14-sense,pepper.n.03)
root(ROOT-0, place-1)
det(lamb-3, the-2)
dobj(place-1, lamb-3)
det(liberally-9, the-5)
nn(liberally-9, foil-6)
conj_and(foil-6, season-8)
prep_on(place-1, liberally-9)
nn(pepper-14, salt-11)
conj_and(salt-11, grounded-13)
prep_with(liberally-9, pepper-14)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(lamb-3,NN)
has_pos(the-5,DT)
has_pos(foil-6,NN)
has_pos(season-8,NN)
has_pos(liberally-9,NN)
has_pos(salt-11,NN)
has_pos(grounded-13,NN)
has_pos(pepper-14,NN)
has_sense(the-5, null)
has_sense(the-2, null)
has_sense(season-8, null)
has_sense(grounded-13, null)
---
// place skillet on stove .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(skillet-2,skillet-2-sense)
is_a(skillet-2-sense,frying_pan.n.01)
has_sense(stove-4,stove-4-sense)
is_a(stove-4-sense,stove.n.01)
nsubj(skillet-2, place-1)
root(ROOT-0, skillet-2)
prep_on(skillet-2, stove-4)
has_pos(place-1,NN)
has_pos(skillet-2,VBP)
has_pos(stove-4,NN)
---
// place the lobster in the pot head first .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(lobster-3,lobster-3-sense)
is_a(lobster-3-sense,lobster.n.01)
has_sense(pot-6,pot-6-sense)
is_a(pot-6-sense,pot.n.01)
has_sense(head-7,head-7-sense)
is_a(head-7-sense,head.n.01)
has_sense(first-8,first-8-sense)
is_a(first-8-sense,first.r.01)
root(ROOT-0, place-1)
det(lobster-3, the-2)
nsubj(first-8, lobster-3)
det(head-7, the-5)
nn(head-7, pot-6)
prep_in(lobster-3, head-7)
xcomp(place-1, first-8)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(lobster-3,NN)
has_pos(the-5,DT)
has_pos(pot-6,NN)
has_pos(head-7,NN)
has_pos(first-8,JJ)
has_sense(the-5, null)
has_sense(the-2, null)
---
// place the seal into the water .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(seal-3,seal-3-sense)
is_a(seal-3-sense,seal.n.08)
has_sense(water-6,water-6-sense)
is_a(water-6-sense,water.n.06)
root(ROOT-0, place-1)
det(seal-3, the-2)
dobj(place-1, seal-3)
det(water-6, the-5)
prep_into(place-1, water-6)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(seal-3,NN)
has_pos(the-5,DT)
has_pos(water-6,NN)
has_sense(the-5, null)
has_sense(the-2, null)
---
// place the cake a wire cooling rack to cool .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(cake-3,cake-3-sense)
is_a(cake-3-sense,cake.n.03)
has_sense(cooling-6,cooling-6-sense)
is_a(cooling-6-sense,cooling.n.01)
has_sense(cool-9,cool-9-sense)
is_a(cool-9-sense,cool.v.01)
root(ROOT-0, place-1)
det(cake-3, the-2)
dobj(place-1, cake-3)
det(cooling-6, a-4)
nn(cooling-6, wire-5)
nsubj(rack-7, cooling-6)
rcmod(cake-3, rack-7)
aux(cool-9, to-8)
xcomp(rack-7, cool-9)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(cake-3,NN)
has_pos(a-4,DT)
has_pos(wire-5,NN)
has_pos(cooling-6,NN)
has_pos(rack-7,VBP)
has_pos(to-8,TO)
has_pos(cool-9,VB)
has_sense(to-8, null)
has_sense(rack-7, null)
has_sense(the-2, null)
has_sense(wire-5, null)
has_sense(a-4, null)
---
// place three ice_cube into your cocktail glass .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(ice_cube-3,ice_cube-3-sense)
is_a(ice_cube-3-sense,ice_cube.n.01)
has_sense(cocktail-6,cocktail-6-sense)
is_a(cocktail-6-sense,cocktail.n.01)
has_sense(glass-7,glass-7-sense)
is_a(glass-7-sense,glass.n.02)
nsubj(ice_cube-3, place-1)
num(place-1, three-2)
root(ROOT-0, ice_cube-3)
poss(glass-7, your-5)
nn(glass-7, cocktail-6)
prep_into(ice_cube-3, glass-7)
has_pos(place-1,NN)
has_pos(three-2,CD)
has_pos(ice_cube-3,VBP)
has_pos(your-5,PRP$)
has_pos(cocktail-6,NN)
has_pos(glass-7,NN)
has_sense(your-5, null)
has_sense(three-2, null)
---
// place the cheese on both piece of the bagel .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(cheese-3,cheese-3-sense)
is_a(cheese-3-sense,cheese.n.01)
has_sense(piece-6,piece-6-sense)
is_a(piece-6-sense,piece.n.08)
has_sense(bagel-9,bagel-9-sense)
is_a(bagel-9-sense,bagel.n.01)
root(ROOT-0, place-1)
det(cheese-3, the-2)
dobj(place-1, cheese-3)
det(piece-6, both-5)
prep_on(place-1, piece-6)
det(bagel-9, the-8)
prep_of(piece-6, bagel-9)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(cheese-3,NN)
has_pos(both-5,DT)
has_pos(piece-6,NN)
has_pos(the-8,DT)
has_pos(bagel-9,NN)
has_sense(the-2, null)
has_sense(the-8, null)
has_sense(both-5, null)
---
// place 4 tablespoon butter in a small dish or saucepan .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(tablespoon-3,tablespoon-3-sense)
is_a(tablespoon-3-sense,tablespoon.n.01)
has_sense(butter-4,butter-4-sense)
is_a(butter-4-sense,butter.n.01)
has_sense(small-7,small-7-sense)
is_a(small-7-sense,small.a.01)
has_sense(dish-8,dish-8-sense)
is_a(dish-8-sense,dish.n.01)
has_sense(saucepan-10,saucepan-10-sense)
is_a(saucepan-10-sense,saucepan.n.01)
nn(butter-4, place-1)
num(butter-4, 4-2)
nn(butter-4, tablespoon-3)
root(ROOT-0, butter-4)
det(dish-8, a-6)
amod(dish-8, small-7)
prep_in(butter-4, dish-8)
conj_or(dish-8, saucepan-10)
has_pos(place-1,NN)
has_pos(4-2,CD)
has_pos(tablespoon-3,NN)
has_pos(butter-4,NN)
has_pos(a-6,DT)
has_pos(small-7,JJ)
has_pos(dish-8,NN)
has_pos(saucepan-10,NN)
has_sense(4-2, null)
has_sense(a-6, null)
---
// place the chicken skin side down first .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(chicken-3,chicken-3-sense)
is_a(chicken-3-sense,chicken.n.01)
has_sense(side-5,side-5-sense)
is_a(side-5-sense,side.n.05)
has_sense(down-6,down-6-sense)
is_a(down-6-sense,down.r.01)
has_sense(first-7,first-7-sense)
is_a(first-7-sense,first.a.01)
root(ROOT-0, place-1)
det(side-5, the-2)
nn(side-5, chicken-3)
nn(side-5, skin-4)
dobj(place-1, side-5)
advmod(first-7, down-6)
advmod(place-1, first-7)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(chicken-3,NN)
has_pos(skin-4,NN)
has_pos(side-5,NN)
has_pos(down-6,RB)
has_pos(first-7,JJ)
has_sense(the-2, null)
has_sense(skin-4, null)
---
// place the mushrooms around the lamb .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(lamb-6,lamb-6-sense)
is_a(lamb-6-sense,lamb.n.05)
root(ROOT-0, place-1)
det(mushrooms-3, the-2)
dobj(place-1, mushrooms-3)
det(lamb-6, the-5)
prep_around(place-1, lamb-6)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(mushrooms-3,NNS)
has_pos(the-5,DT)
has_pos(lamb-6,NN)
has_sense(mushrooms-3, null)
has_sense(the-2, null)
has_sense(the-5, null)
---
// place the placemat in front of the chair .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(front-5,front-5-sense)
is_a(front-5-sense,front.n.01)
has_sense(chair-8,chair-8-sense)
is_a(chair-8-sense,chair.n.01)
root(ROOT-0, place-1)
det(placemat-3, the-2)
dobj(place-1, placemat-3)
det(chair-8, the-7)
prep_in_front_of(place-1, chair-8)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(placemat-3,NN)
has_pos(the-7,DT)
has_pos(chair-8,NN)
has_sense(the-7, null)
has_sense(the-2, null)
has_sense(placemat-3, null)
---
// place the cup to the top right corner of the placemat .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(cup-3,cup-3-sense)
is_a(cup-3-sense,cup.n.01)
has_sense(top-6,top-6-sense)
is_a(top-6-sense,top.a.01)
has_sense(right-7,right-7-sense)
is_a(right-7-sense,right.n.02)
has_sense(corner-8,corner-8-sense)
is_a(corner-8-sense,corner.n.01)
root(ROOT-0, place-1)
det(cup-3, the-2)
dobj(place-1, cup-3)
det(corner-8, the-5)
amod(corner-8, top-6)
nn(corner-8, right-7)
prep_to(place-1, corner-8)
det(placemat-11, the-10)
prep_of(corner-8, placemat-11)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(cup-3,NN)
has_pos(the-5,DT)
has_pos(top-6,JJ)
has_pos(right-7,NN)
has_pos(corner-8,NN)
has_pos(the-10,DT)
has_pos(placemat-11,NN)
has_sense(the-5, null)
has_sense(the-2, null)
has_sense(the-10, null)
has_sense(placemat-11, null)
---
// place half of the onion over the bottom surface of your roasting pan .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(half-2,half-2-sense)
is_a(half-2-sense,one-half.n.01)
has_sense(onion-5,onion-5-sense)
is_a(onion-5-sense,onion.n.03)
has_sense(bottom-8,bottom-8-sense)
is_a(bottom-8-sense,bottom.a.01)
has_sense(surface-9,surface-9-sense)
is_a(surface-9-sense,surface.n.01)
has_sense(roasting-12,roasting-12-sense)
is_a(roasting-12-sense,roasting.n.01)
has_sense(pan-13,pan-13-sense)
is_a(pan-13-sense,pan.n.01)
nn(half-2, place-1)
nsubj(pan-13, half-2)
det(onion-5, the-4)
prep_of(half-2, onion-5)
det(surface-9, the-7)
amod(surface-9, bottom-8)
prep_over(onion-5, surface-9)
poss(roasting-12, your-11)
prep_of(surface-9, roasting-12)
root(ROOT-0, pan-13)
has_pos(place-1,NN)
has_pos(half-2,NN)
has_pos(the-4,DT)
has_pos(onion-5,NN)
has_pos(the-7,DT)
has_pos(bottom-8,JJ)
has_pos(surface-9,NN)
has_pos(your-11,PRP$)
has_pos(roasting-12,NN)
has_pos(pan-13,VBZ)
has_sense(the-7, null)
has_sense(the-4, null)
has_sense(your-11, null)
---
// place the ingredient into the bread bucket in the correct order , as describe above .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(ingredient-3,ingredient-3-sense)
is_a(ingredient-3-sense,ingredient.n.03)
has_sense(bread-6,bread-6-sense)
is_a(bread-6-sense,bread.n.01)
has_sense(bucket-7,bucket-7-sense)
is_a(bucket-7-sense,bucket.n.01)
has_sense(correct-10,correct-10-sense)
is_a(correct-10-sense,correct.a.01)
has_sense(order-11,order-11-sense)
is_a(order-11-sense,ordering.n.01)
has_sense(describe-14,describe-14-sense)
is_a(describe-14-sense,describe.v.01)
has_sense(above-15,above-15-sense)
is_a(above-15-sense,above.r.01)
root(ROOT-0, place-1)
det(ingredient-3, the-2)
dobj(place-1, ingredient-3)
det(bucket-7, the-5)
nn(bucket-7, bread-6)
prep_into(place-1, bucket-7)
det(order-11, the-9)
amod(order-11, correct-10)
prep_in(bucket-7, order-11)
mark(describe-14, as-13)
advcl(place-1, describe-14)
advmod(describe-14, above-15)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(ingredient-3,NN)
has_pos(the-5,DT)
has_pos(bread-6,NN)
has_pos(bucket-7,NN)
has_pos(the-9,DT)
has_pos(correct-10,JJ)
has_pos(order-11,NN)
has_pos(as-13,IN)
has_pos(describe-14,VBP)
has_pos(above-15,RB)
has_sense(the-5, null)
has_sense(as-13, null)
has_sense(the-2, null)
has_sense(the-9, null)
---
// place the cake in the pre-heated oven .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(cake-3,cake-3-sense)
is_a(cake-3-sense,cake.n.03)
has_sense(oven-7,oven-7-sense)
is_a(oven-7-sense,oven.n.01)
root(ROOT-0, place-1)
det(cake-3, the-2)
dobj(place-1, cake-3)
det(oven-7, the-5)
amod(oven-7, pre-heated-6)
prep_in(cake-3, oven-7)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(cake-3,NN)
has_pos(the-5,DT)
has_pos(pre-heated-6,JJ)
has_pos(oven-7,NN)
has_sense(the-5, null)
has_sense(pre-heated-6, null)
has_sense(the-2, null)
---
// place the plate in the center so that it just cover the right side of the napkin .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(plate-3,plate-3-sense)
is_a(plate-3-sense,plate.n.04)
has_sense(center-6,center-6-sense)
is_a(center-6-sense,center.n.01)
has_sense(so-7,so-7-sense)
is_a(so-7-sense,so.r.02)
has_sense(just-10,just-10-sense)
is_a(just-10-sense,merely.r.01)
has_sense(cover-11,cover-11-sense)
is_a(cover-11-sense,cover.v.02)
has_sense(right-13,right-13-sense)
is_a(right-13-sense,right.a.01)
has_sense(napkin-17,napkin-17-sense)
is_a(napkin-17-sense,napkin.n.01)
root(ROOT-0, place-1)
det(plate-3, the-2)
dobj(place-1, plate-3)
det(center-6, the-5)
prep_in(plate-3, center-6)
advmod(cover-11, so-7)
dep(cover-11, that-8)
nsubj(cover-11, it-9)
advmod(cover-11, just-10)
advcl(place-1, cover-11)
det(side-14, the-12)
amod(side-14, right-13)
dobj(cover-11, side-14)
det(napkin-17, the-16)
prep_of(side-14, napkin-17)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(plate-3,NN)
has_pos(the-5,DT)
has_pos(center-6,NN)
has_pos(so-7,RB)
has_pos(that-8,IN)
has_pos(it-9,PRP)
has_pos(just-10,RB)
has_pos(cover-11,VB)
has_pos(the-12,DT)
has_pos(right-13,JJ)
has_pos(side-14,NN)
has_pos(the-16,DT)
has_pos(napkin-17,NN)
has_sense(the-5, null)
has_sense(the-2, null)
has_sense(it-9, null)
has_sense(that-8, null)
has_sense(the-16, null)
has_sense(side-14, null)
has_sense(the-12, null)
---
// Place on a baking_tray line with baking paper .
has_sense(baking_tray-4,baking_tray-4-sense)
is_a(baking_tray-4-sense,cookie_sheet.n.01)
has_sense(line-5,line-5-sense)
is_a(line-5-sense,line.v.02)
has_sense(paper-8,paper-8-sense)
is_a(paper-8-sense,paper.n.01)
root(ROOT-0, Place-1)
det(line-5, a-3)
amod(line-5, baking_tray-4)
prep_on(Place-1, line-5)
amod(paper-8, baking-7)
prep_with(line-5, paper-8)
has_pos(Place-1,VB)
has_pos(a-3,DT)
has_pos(baking_tray-4,JJ)
has_pos(line-5,NN)
has_pos(baking-7,JJ)
has_pos(paper-8,NN)
has_sense(Place-1, null)
has_sense(a-3, null)
has_sense(baking-7, null)
---
// place the onion slice in the crock_pot .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(onion-3,onion-3-sense)
is_a(onion-3-sense,onion.n.01)
has_sense(slice-4,slice-4-sense)
is_a(slice-4-sense,piece.n.08)
has_sense(crock_pot-7,crock_pot-7-sense)
is_a(crock_pot-7-sense,crock_pot.n.01)
root(ROOT-0, place-1)
det(slice-4, the-2)
nn(slice-4, onion-3)
dobj(place-1, slice-4)
det(crock_pot-7, the-6)
prep_in(place-1, crock_pot-7)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(onion-3,NN)
has_pos(slice-4,NN)
has_pos(the-6,DT)
has_pos(crock_pot-7,NN)
has_sense(the-6, null)
has_sense(the-2, null)
---
// place bacon slice on your broiler pan .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(bacon-2,bacon-2-sense)
is_a(bacon-2-sense,bacon.n.01)
has_sense(slice-3,slice-3-sense)
is_a(slice-3-sense,piece.n.08)
has_sense(broiler-6,broiler-6-sense)
is_a(broiler-6-sense,broiler.n.01)
has_sense(pan-7,pan-7-sense)
is_a(pan-7-sense,pan.n.01)
nn(bacon-2, place-1)
nsubj(slice-3, bacon-2)
root(ROOT-0, slice-3)
poss(pan-7, your-5)
nn(pan-7, broiler-6)
prep_on(slice-3, pan-7)
has_pos(place-1,NN)
has_pos(bacon-2,NN)
has_pos(slice-3,VBP)
has_pos(your-5,PRP$)
has_pos(broiler-6,NN)
has_pos(pan-7,NN)
has_sense(your-5, null)
---
// place 4 cups of bread cubes in a large mixing_bowl .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(bread-5,bread-5-sense)
is_a(bread-5-sense,bread.n.01)
has_sense(large-9,large-9-sense)
is_a(large-9-sense,large.a.01)
has_sense(mixing_bowl-10,mixing_bowl-10-sense)
is_a(mixing_bowl-10-sense,mixing_bowl.n.01)
root(ROOT-0, place-1)
num(cups-3, 4-2)
dobj(place-1, cups-3)
nn(cubes-6, bread-5)
prep_of(cups-3, cubes-6)
det(mixing_bowl-10, a-8)
amod(mixing_bowl-10, large-9)
prep_in(cubes-6, mixing_bowl-10)
has_pos(place-1,VB)
has_pos(4-2,CD)
has_pos(cups-3,NNS)
has_pos(bread-5,NN)
has_pos(cubes-6,NNS)
has_pos(a-8,DT)
has_pos(large-9,JJ)
has_pos(mixing_bowl-10,NN)
has_sense(4-2, null)
has_sense(cups-3, null)
has_sense(cubes-6, null)
has_sense(a-8, null)
---
// place the bagel slice on top of the paper .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(bagel-3,bagel-3-sense)
is_a(bagel-3-sense,bagel.n.01)
has_sense(slice-4,slice-4-sense)
is_a(slice-4-sense,piece.n.08)
has_sense(top-6,top-6-sense)
is_a(top-6-sense,top.n.01)
has_sense(paper-9,paper-9-sense)
is_a(paper-9-sense,paper.n.01)
root(ROOT-0, place-1)
det(slice-4, the-2)
amod(slice-4, bagel-3)
dobj(place-1, slice-4)
det(paper-9, the-8)
prep_on_top_of(place-1, paper-9)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(bagel-3,JJ)
has_pos(slice-4,NN)
has_pos(the-8,DT)
has_pos(paper-9,NN)
has_sense(the-2, null)
has_sense(the-8, null)
---
// place the pan into the pre-heated oven without the item inside it .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(pan-3,pan-3-sense)
is_a(pan-3-sense,pan.n.01)
has_sense(oven-7,oven-7-sense)
is_a(oven-7-sense,oven.n.01)
has_sense(item-10,item-10-sense)
is_a(item-10-sense,item.n.01)
root(ROOT-0, place-1)
det(pan-3, the-2)
dobj(place-1, pan-3)
det(oven-7, the-5)
amod(oven-7, pre-heated-6)
prep_into(place-1, oven-7)
det(item-10, the-9)
prep_without(oven-7, item-10)
prep_inside(item-10, it-12)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(pan-3,NN)
has_pos(the-5,DT)
has_pos(pre-heated-6,JJ)
has_pos(oven-7,NN)
has_pos(the-9,DT)
has_pos(item-10,NN)
has_pos(it-12,PRP)
has_sense(the-5, null)
has_sense(it-12, null)
has_sense(the-2, null)
has_sense(the-9, null)
has_sense(pre-heated-6, null)
---
// place the turkey on the cooking rack of the smoker with the breast up .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(turkey-3,turkey-3-sense)
is_a(turkey-3-sense,turkey.n.04)
has_sense(rack-7,rack-7-sense)
is_a(rack-7-sense,rack.n.01)
has_sense(breast-13,breast-13-sense)
is_a(breast-13-sense,breast.n.03)
root(ROOT-0, place-1)
det(turkey-3, the-2)
dobj(place-1, turkey-3)
det(rack-7, the-5)
amod(rack-7, cooking-6)
prep_on(turkey-3, rack-7)
det(smoker-10, the-9)
prep_of(rack-7, smoker-10)
det(breast-13, the-12)
prep_with(smoker-10, breast-13)
prt(place-1, up-14)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(turkey-3,NN)
has_pos(the-5,DT)
has_pos(cooking-6,JJ)
has_pos(rack-7,NN)
has_pos(the-9,DT)
has_pos(smoker-10,NN)
has_pos(the-12,DT)
has_pos(breast-13,NN)
has_pos(up-14,RP)
has_sense(the-5, null)
has_sense(cooking-6, null)
has_sense(the-2, null)
has_sense(smoker-10, null)
has_sense(up-14, null)
has_sense(the-9, null)
has_sense(the-12, null)
---
// Brush one side with sauce and place down on a really , really hot grill .
has_sense(sauce-5,sauce-5-sense)
is_a(sauce-5-sense,sauce.n.01)
has_sense(down-8,down-8-sense)
is_a(down-8-sense,down.r.01)
has_sense(really-11,really-11-sense)
is_a(really-11-sense,very.r.01)
has_sense(really-13,really-13-sense)
is_a(really-13-sense,very.r.01)
has_sense(hot-14,hot-14-sense)
is_a(hot-14-sense,hot.a.01)
has_sense(grill-15,grill-15-sense)
is_a(grill-15-sense,grill.n.02)
nn(side-3, Brush-1)
num(side-3, one-2)
root(ROOT-0, side-3)
prep_with(side-3, sauce-5)
conj_and(sauce-5, place-7)
advmod(side-3, down-8)
det(grill-15, a-10)
advmod(hot-14, really-11)
advmod(hot-14, really-13)
amod(grill-15, hot-14)
prep_on(down-8, grill-15)
has_pos(Brush-1,NNP)
has_pos(one-2,CD)
has_pos(side-3,NN)
has_pos(sauce-5,NN)
has_pos(place-7,NN)
has_pos(down-8,RB)
has_pos(a-10,DT)
has_pos(really-11,RB)
has_pos(really-13,RB)
has_pos(hot-14,JJ)
has_pos(grill-15,NN)
has_sense(Brush-1, null)
has_sense(a-10, null)
has_sense(side-3, null)
has_sense(place-7, null)
has_sense(one-2, null)
---
// use several unwrapped piece and place it in a vegetable oiled skillet .
has_sense(use-1,use-1-sense)
is_a(use-1-sense,use.v.01)
has_sense(several-2,several-2-sense)
is_a(several-2-sense,several.s.01)
has_sense(unwrapped-3,unwrapped-3-sense)
is_a(unwrapped-3-sense,unwrapped.a.01)
has_sense(piece-4,piece-4-sense)
is_a(piece-4-sense,piece.n.01)
has_sense(place-6,place-6-sense)
is_a(place-6-sense,put.v.01)
has_sense(vegetable-10,vegetable-10-sense)
is_a(vegetable-10-sense,vegetable.n.02)
has_sense(oiled-11,oiled-11-sense)
is_a(oiled-11-sense,oiled.a.01)
has_sense(skillet-12,skillet-12-sense)
is_a(skillet-12-sense,frying_pan.n.01)
root(ROOT-0, use-1)
amod(piece-4, several-2)
amod(piece-4, unwrapped-3)
dobj(use-1, piece-4)
conj_and(use-1, place-6)
dobj(place-6, it-7)
det(skillet-12, a-9)
nn(skillet-12, vegetable-10)
nn(skillet-12, oiled-11)
prep_in(place-6, skillet-12)
has_pos(use-1,VB)
has_pos(several-2,JJ)
has_pos(unwrapped-3,JJ)
has_pos(piece-4,NN)
has_pos(place-6,VB)
has_pos(it-7,PRP)
has_pos(a-9,DT)
has_pos(vegetable-10,NN)
has_pos(oiled-11,NN)
has_pos(skillet-12,NN)
has_sense(a-9, null)
has_sense(it-7, null)
---
// If any one of these parts be miss you must replace it .
has_sense(one-3,one-3-sense)
is_a(one-3-sense,one.n.02)
has_sense(be-7,be-7-sense)
is_a(be-7-sense,be.v.01)
has_sense(miss-8,miss-8-sense)
is_a(miss-8-sense,miss.v.06)
has_sense(replace-11,replace-11-sense)
is_a(replace-11-sense,replace.v.01)
mark(miss-8, If-1)
det(one-3, any-2)
nsubjpass(miss-8, one-3)
det(parts-6, these-5)
prep_of(one-3, parts-6)
auxpass(miss-8, be-7)
advcl(replace-11, miss-8)
nsubj(replace-11, you-9)
aux(replace-11, must-10)
root(ROOT-0, replace-11)
dobj(replace-11, it-12)
has_pos(If-1,IN)
has_pos(any-2,DT)
has_pos(one-3,NN)
has_pos(these-5,DT)
has_pos(parts-6,NNS)
has_pos(be-7,VB)
has_pos(miss-8,VBN)
has_pos(you-9,PRP)
has_pos(must-10,MD)
has_pos(replace-11,VB)
has_pos(it-12,PRP)
has_sense(it-12, null)
has_sense(these-5, null)
has_sense(you-9, null)
has_sense(any-2, null)
has_sense(must-10, null)
has_sense(If-1, null)
has_sense(parts-6, null)
---
// Place half of each plum cut face down on a freezer container .
has_sense(half-2,half-2-sense)
is_a(half-2-sense,one-half.n.01)
has_sense(plum-5,plum-5-sense)
is_a(plum-5-sense,plum.n.02)
has_sense(freezer-11,freezer-11-sense)
is_a(freezer-11-sense,deep-freeze.n.01)
has_sense(container-12,container-12-sense)
is_a(container-12-sense,container.n.01)
nn(half-2, Place-1)
nsubj(face-7, half-2)
det(cut-6, each-4)
nn(cut-6, plum-5)
prep_of(half-2, cut-6)
root(ROOT-0, face-7)
prt(face-7, down-8)
det(container-12, a-10)
nn(container-12, freezer-11)
prep_on(face-7, container-12)
has_pos(Place-1,NN)
has_pos(half-2,NN)
has_pos(each-4,DT)
has_pos(plum-5,NN)
has_pos(cut-6,NN)
has_pos(face-7,VBP)
has_pos(down-8,RP)
has_pos(a-10,DT)
has_pos(freezer-11,NN)
has_pos(container-12,NN)
has_sense(a-10, null)
has_sense(Place-1, null)
has_sense(down-8, null)
has_sense(each-4, null)
has_sense(cut-6, null)
has_sense(face-7, null)
---
// place the knife to the right so that the blade face the plate .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(knife-3,knife-3-sense)
is_a(knife-3-sense,knife.n.01)
has_sense(right-6,right-6-sense)
is_a(right-6-sense,right.n.02)
has_sense(so-7,so-7-sense)
is_a(so-7-sense,so.r.02)
has_sense(blade-10,blade-10-sense)
is_a(blade-10-sense,blade.n.09)
has_sense(face-11,face-11-sense)
is_a(face-11-sense,front.v.01)
has_sense(plate-13,plate-13-sense)
is_a(plate-13-sense,plate.n.04)
root(ROOT-0, place-1)
det(knife-3, the-2)
dobj(place-1, knife-3)
det(right-6, the-5)
prep_to(place-1, right-6)
advmod(face-11, so-7)
dep(face-11, that-8)
det(blade-10, the-9)
nsubj(face-11, blade-10)
advcl(place-1, face-11)
det(plate-13, the-12)
dobj(face-11, plate-13)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(knife-3,NN)
has_pos(the-5,DT)
has_pos(right-6,NN)
has_pos(so-7,RB)
has_pos(that-8,IN)
has_pos(the-9,DT)
has_pos(blade-10,NN)
has_pos(face-11,VBP)
has_pos(the-12,DT)
has_pos(plate-13,NN)
has_sense(the-5, null)
has_sense(the-2, null)
has_sense(the-9, null)
has_sense(that-8, null)
has_sense(the-12, null)
---
// set the dinner_plate in front of the chair and place the drinking_glass on the right side of the plate accordingly .
has_sense(set-1,set-1-sense)
is_a(set-1-sense,put.v.01)
has_sense(dinner_plate-3,dinner_plate-3-sense)
is_a(dinner_plate-3-sense,dinner_plate.n.01)
has_sense(front-5,front-5-sense)
is_a(front-5-sense,front.n.01)
has_sense(chair-8,chair-8-sense)
is_a(chair-8-sense,chair.n.01)
has_sense(place-10,place-10-sense)
is_a(place-10-sense,put.v.01)
has_sense(drinking_glass-12,drinking_glass-12-sense)
is_a(drinking_glass-12-sense,glass.n.02)
has_sense(right-15,right-15-sense)
is_a(right-15-sense,right.a.01)
has_sense(side-16,side-16-sense)
is_a(side-16-sense,side.n.01)
has_sense(plate-19,plate-19-sense)
is_a(plate-19-sense,plate.n.04)
has_sense(accordingly-20,accordingly-20-sense)
is_a(accordingly-20-sense,accordingly.r.02)
root(ROOT-0, set-1)
det(dinner_plate-3, the-2)
dobj(set-1, dinner_plate-3)
det(chair-8, the-7)
prep_in_front_of(set-1, chair-8)
conj_and(set-1, place-10)
det(drinking_glass-12, the-11)
dobj(place-10, drinking_glass-12)
det(side-16, the-14)
amod(side-16, right-15)
prep_on(place-10, side-16)
det(plate-19, the-18)
prep_of(side-16, plate-19)
advmod(place-10, accordingly-20)
has_pos(set-1,VB)
has_pos(the-2,DT)
has_pos(dinner_plate-3,NN)
has_pos(the-7,DT)
has_pos(chair-8,NN)
has_pos(place-10,VB)
has_pos(the-11,DT)
has_pos(drinking_glass-12,NNS)
has_pos(the-14,DT)
has_pos(right-15,JJ)
has_pos(side-16,NN)
has_pos(the-18,DT)
has_pos(plate-19,NN)
has_pos(accordingly-20,RB)
has_sense(the-7, null)
has_sense(the-2, null)
has_sense(the-18, null)
has_sense(the-14, null)
has_sense(the-11, null)
---
// place the remaining ingredient on top , and sprinkle with cheese .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(ingredient-4,ingredient-4-sense)
is_a(ingredient-4-sense,ingredient.n.03)
has_sense(top-6,top-6-sense)
is_a(top-6-sense,top.n.02)
has_sense(sprinkle-9,sprinkle-9-sense)
is_a(sprinkle-9-sense,scatter.v.03)
has_sense(cheese-11,cheese-11-sense)
is_a(cheese-11-sense,cheese.n.01)
root(ROOT-0, place-1)
det(ingredient-4, the-2)
amod(ingredient-4, remaining-3)
dobj(place-1, ingredient-4)
prep_on(ingredient-4, top-6)
conj_and(place-1, sprinkle-9)
prep_with(sprinkle-9, cheese-11)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(remaining-3,VBG)
has_pos(ingredient-4,NN)
has_pos(top-6,NN)
has_pos(sprinkle-9,VBP)
has_pos(cheese-11,NN)
has_sense(the-2, null)
has_sense(remaining-3, null)
---
// Cut the end of each pea_pod and place pod in bowl .
has_sense(end-3,end-3-sense)
is_a(end-3-sense,end.n.01)
has_sense(pea_pod-6,pea_pod-6-sense)
is_a(pea_pod-6-sense,pea_pod.n.01)
has_sense(pod-9,pod-9-sense)
is_a(pod-9-sense,pod.n.01)
has_sense(bowl-11,bowl-11-sense)
is_a(bowl-11-sense,bowl.n.01)
root(ROOT-0, Cut-1)
det(end-3, the-2)
dep(Cut-1, end-3)
det(pod-9, each-5)
nn(pod-9, pea_pod-6)
conj_and(pea_pod-6, place-8)
prep_of(end-3, pod-9)
prep_in(pod-9, bowl-11)
has_pos(Cut-1,NNP)
has_pos(the-2,DT)
has_pos(end-3,NN)
has_pos(each-5,DT)
has_pos(pea_pod-6,NN)
has_pos(place-8,NN)
has_pos(pod-9,NN)
has_pos(bowl-11,NN)
has_sense(place-8, null)
has_sense(each-5, null)
has_sense(Cut-1, null)
has_sense(the-2, null)
---
// place broiler in oven and set temperature to 400F .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(oven-4,oven-4-sense)
is_a(oven-4-sense,oven.n.01)
has_sense(set-6,set-6-sense)
is_a(set-6-sense,set.v.08)
has_sense(temperature-7,temperature-7-sense)
is_a(temperature-7-sense,temperature.n.01)
root(ROOT-0, place-1)
dobj(place-1, broiler-2)
prep_in(place-1, oven-4)
conj_and(place-1, set-6)
dobj(set-6, temperature-7)
prep_to(set-6, 400F-9)
has_pos(place-1,VB)
has_pos(broiler-2,NN)
has_pos(oven-4,NN)
has_pos(set-6,VB)
has_pos(temperature-7,NN)
has_pos(400F-9,CD)
has_sense(broiler-2, null)
has_sense(400F-9, null)
---
// place the apple into a greased baking pan .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(apple-3,apple-3-sense)
is_a(apple-3-sense,apple.n.01)
has_sense(greased-6,greased-6-sense)
is_a(greased-6-sense,lubricated.a.01)
has_sense(baking-7,baking-7-sense)
is_a(baking-7-sense,baking.s.01)
has_sense(pan-8,pan-8-sense)
is_a(pan-8-sense,pan.n.01)
root(ROOT-0, place-1)
det(apple-3, the-2)
dobj(place-1, apple-3)
det(pan-8, a-5)
amod(pan-8, greased-6)
amod(pan-8, baking-7)
prep_into(place-1, pan-8)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(apple-3,NN)
has_pos(a-5,DT)
has_pos(greased-6,JJ)
has_pos(baking-7,JJ)
has_pos(pan-8,NN)
has_sense(a-5, null)
has_sense(the-2, null)
---
// slice some plum\/cherry tomato and place them on bagel .
has_sense(slice-1,slice-1-sense)
is_a(slice-1-sense,slice.v.03)
has_sense(tomato-4,tomato-4-sense)
is_a(tomato-4-sense,tomato.n.01)
has_sense(place-6,place-6-sense)
is_a(place-6-sense,put.v.01)
has_sense(bagel-9,bagel-9-sense)
is_a(bagel-9-sense,bagel.n.01)
root(ROOT-0, slice-1)
det(tomato-4, some-2)
amod(tomato-4, plum\/cherry-3)
dobj(slice-1, tomato-4)
conj_and(slice-1, place-6)
dobj(place-6, them-7)
prep_on(place-6, bagel-9)
has_pos(slice-1,VB)
has_pos(some-2,DT)
has_pos(plum\/cherry-3,JJ)
has_pos(tomato-4,NN)
has_pos(place-6,VB)
has_pos(them-7,PRP)
has_pos(bagel-9,NN)
has_sense(plum\/cherry-3, null)
has_sense(some-2, null)
has_sense(them-7, null)
---
// place one vegetable on the cutting_board .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(vegetable-3,vegetable-3-sense)
is_a(vegetable-3-sense,vegetable.n.01)
has_sense(cutting_board-6,cutting_board-6-sense)
is_a(cutting_board-6-sense,chopping_board.n.01)
root(ROOT-0, place-1)
num(vegetable-3, one-2)
dobj(place-1, vegetable-3)
det(cutting_board-6, the-5)
prep_on(vegetable-3, cutting_board-6)
has_pos(place-1,VB)
has_pos(one-2,CD)
has_pos(vegetable-3,NN)
has_pos(the-5,DT)
has_pos(cutting_board-6,NN)
has_sense(the-5, null)
has_sense(one-2, null)
---
// place the pineapple on its side .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(pineapple-3,pineapple-3-sense)
is_a(pineapple-3-sense,pineapple.n.02)
root(ROOT-0, place-1)
det(pineapple-3, the-2)
dobj(place-1, pineapple-3)
poss(side-6, its-5)
prep_on(place-1, side-6)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(pineapple-3,NN)
has_pos(its-5,PRP$)
has_pos(side-6,NN)
has_sense(side-6, null)
has_sense(the-2, null)
has_sense(its-5, null)
---
// place the napkin just left of the center of the placemat .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(napkin-3,napkin-3-sense)
is_a(napkin-3-sense,napkin.n.01)
has_sense(just-4,just-4-sense)
is_a(just-4-sense,precisely.r.01)
has_sense(center-8,center-8-sense)
is_a(center-8-sense,center.n.01)
nsubj(left-5, place-1)
det(napkin-3, the-2)
npadvmod(just-4, napkin-3)
advmod(left-5, just-4)
root(ROOT-0, left-5)
det(center-8, the-7)
prep_of(left-5, center-8)
det(placemat-11, the-10)
prep_of(center-8, placemat-11)
has_pos(place-1,NN)
has_pos(the-2,DT)
has_pos(napkin-3,NN)
has_pos(just-4,RB)
has_pos(left-5,VBD)
has_pos(the-7,DT)
has_pos(center-8,NN)
has_pos(the-10,DT)
has_pos(placemat-11,NN)
has_sense(the-7, null)
has_sense(the-2, null)
has_sense(left-5, null)
has_sense(placemat-11, null)
has_sense(the-10, null)
---
// place in the oven .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(oven-4,oven-4-sense)
is_a(oven-4-sense,oven.n.01)
root(ROOT-0, place-1)
det(oven-4, the-3)
prep_in(place-1, oven-4)
has_pos(place-1,VB)
has_pos(the-3,DT)
has_pos(oven-4,NN)
has_sense(the-3, null)
---
// place food item on pizza stone .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(food-2,food-2-sense)
is_a(food-2-sense,food.n.02)
has_sense(item-3,item-3-sense)
is_a(item-3-sense,item.n.03)
has_sense(pizza-5,pizza-5-sense)
is_a(pizza-5-sense,pizza.n.01)
root(ROOT-0, place-1)
nn(item-3, food-2)
dobj(place-1, item-3)
nn(stone-6, pizza-5)
prep_on(place-1, stone-6)
has_pos(place-1,VB)
has_pos(food-2,NN)
has_pos(item-3,NN)
has_pos(pizza-5,NN)
has_pos(stone-6,NN)
has_sense(stone-6, null)
---
// place the vegetable in a pot of boil water .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(vegetable-3,vegetable-3-sense)
is_a(vegetable-3-sense,vegetable.n.02)
has_sense(pot-6,pot-6-sense)
is_a(pot-6-sense,pot.n.01)
has_sense(boil-8,boil-8-sense)
is_a(boil-8-sense,boil.v.03)
has_sense(water-9,water-9-sense)
is_a(water-9-sense,water.n.06)
root(ROOT-0, place-1)
det(vegetable-3, the-2)
dobj(place-1, vegetable-3)
det(pot-6, a-5)
prep_in(place-1, pot-6)
nn(water-9, boil-8)
prep_of(pot-6, water-9)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(vegetable-3,NN)
has_pos(a-5,DT)
has_pos(pot-6,NN)
has_pos(boil-8,NN)
has_pos(water-9,NN)
has_sense(a-5, null)
has_sense(the-2, null)
---
// place the peach in a bowl .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(peach-3,peach-3-sense)
is_a(peach-3-sense,peach.n.03)
has_sense(bowl-6,bowl-6-sense)
is_a(bowl-6-sense,bowl.n.01)
root(ROOT-0, place-1)
det(peach-3, the-2)
dobj(place-1, peach-3)
det(bowl-6, a-5)
prep_in(peach-3, bowl-6)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(peach-3,NN)
has_pos(a-5,DT)
has_pos(bowl-6,NN)
has_sense(a-5, null)
has_sense(the-2, null)
---
// place the shredded lettuce on the top of the bun .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(shredded-3,shredded-3-sense)
is_a(shredded-3-sense,chopped.s.01)
has_sense(lettuce-4,lettuce-4-sense)
is_a(lettuce-4-sense,lettuce.n.03)
has_sense(top-7,top-7-sense)
is_a(top-7-sense,top.n.02)
has_sense(bun-10,bun-10-sense)
is_a(bun-10-sense,bun.n.01)
root(ROOT-0, place-1)
det(lettuce-4, the-2)
amod(lettuce-4, shredded-3)
dobj(place-1, lettuce-4)
det(top-7, the-6)
prep_on(place-1, top-7)
det(bun-10, the-9)
prep_of(top-7, bun-10)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(shredded-3,JJ)
has_pos(lettuce-4,NN)
has_pos(the-6,DT)
has_pos(top-7,NN)
has_pos(the-9,DT)
has_pos(bun-10,NN)
has_sense(the-6, null)
has_sense(the-2, null)
has_sense(the-9, null)
---
// dry thoroughly inside and out with paper_towel and place the bird in a shallow , lightly oil roasting pan .
has_sense(dry-1,dry-1-sense)
is_a(dry-1-sense,dry.v.01)
has_sense(thoroughly-2,thoroughly-2-sense)
is_a(thoroughly-2-sense,thoroughly.r.02)
has_sense(inside-3,inside-3-sense)
is_a(inside-3-sense,inside.r.02)
has_sense(paper_towel-7,paper_towel-7-sense)
is_a(paper_towel-7-sense,paper_towel.n.01)
has_sense(place-9,place-9-sense)
is_a(place-9-sense,put.v.01)
has_sense(bird-11,bird-11-sense)
is_a(bird-11-sense,bird.n.02)
has_sense(shallow-14,shallow-14-sense)
is_a(shallow-14-sense,shallow.a.01)
has_sense(lightly-16,lightly-16-sense)
is_a(lightly-16-sense,thinly.r.03)
has_sense(oil-17,oil-17-sense)
is_a(oil-17-sense,oil.v.01)
has_sense(pan-19,pan-19-sense)
is_a(pan-19-sense,pan.n.01)
root(ROOT-0, dry-1)
advmod(dry-1, thoroughly-2)
advmod(dry-1, inside-3)
conj_and(inside-3, out-5)
prep_with(dry-1, paper_towel-7)
conj_and(dry-1, place-9)
det(bird-11, the-10)
dobj(place-9, bird-11)
det(oil-17, a-13)
amod(oil-17, shallow-14)
amod(oil-17, lightly-16)
prep_in(place-9, oil-17)
partmod(oil-17, roasting-18)
ccomp(roasting-18, pan-19)
has_pos(dry-1,VB)
has_pos(thoroughly-2,RB)
has_pos(inside-3,RB)
has_pos(out-5,RB)
has_pos(paper_towel-7,NN)
has_pos(place-9,VB)
has_pos(the-10,DT)
has_pos(bird-11,NN)
has_pos(a-13,DT)
has_pos(shallow-14,JJ)
has_pos(lightly-16,JJ)
has_pos(oil-17,NN)
has_pos(roasting-18,VBG)
has_pos(pan-19,VB)
has_sense(a-13, null)
has_sense(roasting-18, null)
has_sense(out-5, null)
has_sense(the-10, null)
---
// place in a refrigerator overnight before cooking .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(refrigerator-4,refrigerator-4-sense)
is_a(refrigerator-4-sense,refrigerator.n.01)
has_sense(overnight-5,overnight-5-sense)
is_a(overnight-5-sense,overnight.r.01)
has_sense(cooking-7,cooking-7-sense)
is_a(cooking-7-sense,cooking.n.01)
root(ROOT-0, place-1)
det(refrigerator-4, a-3)
prep_in(place-1, refrigerator-4)
advmod(place-1, overnight-5)
prep_before(place-1, cooking-7)
has_pos(place-1,VB)
has_pos(a-3,DT)
has_pos(refrigerator-4,NN)
has_pos(overnight-5,RB)
has_pos(cooking-7,NN)
has_sense(a-3, null)
---
// place in oven and bake for 20 minutes .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(oven-3,oven-3-sense)
is_a(oven-3-sense,oven.n.01)
has_sense(bake-5,bake-5-sense)
is_a(bake-5-sense,bake.v.01)
root(ROOT-0, place-1)
prep_in(place-1, oven-3)
conj_and(oven-3, bake-5)
num(minutes-8, 20-7)
prep_for(place-1, minutes-8)
has_pos(place-1,NN)
has_pos(oven-3,NN)
has_pos(bake-5,NN)
has_pos(20-7,CD)
has_pos(minutes-8,NNS)
has_sense(minutes-8, null)
has_sense(20-7, null)
---
// place each section into a bowl .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(bowl-6,bowl-6-sense)
is_a(bowl-6-sense,bowl.n.01)
root(ROOT-0, place-1)
det(section-3, each-2)
dobj(place-1, section-3)
det(bowl-6, a-5)
prep_into(place-1, bowl-6)
has_pos(place-1,VB)
has_pos(each-2,DT)
has_pos(section-3,NN)
has_pos(a-5,DT)
has_pos(bowl-6,NN)
has_sense(each-2, null)
has_sense(a-5, null)
has_sense(section-3, null)
---
// place the completed fruit bowl on a counter or on a table somewhere in your kitchen or living_room .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(fruit-4,fruit-4-sense)
is_a(fruit-4-sense,fruit.n.01)
has_sense(bowl-5,bowl-5-sense)
is_a(bowl-5-sense,bowl.n.01)
has_sense(counter-8,counter-8-sense)
is_a(counter-8-sense,buffet.n.01)
has_sense(table-12,table-12-sense)
is_a(table-12-sense,table.n.02)
has_sense(somewhere-13,somewhere-13-sense)
is_a(somewhere-13-sense,somewhere.r.01)
has_sense(kitchen-16,kitchen-16-sense)
is_a(kitchen-16-sense,kitchen.n.01)
has_sense(living_room-18,living_room-18-sense)
is_a(living_room-18-sense,living_room.n.01)
root(ROOT-0, place-1)
det(bowl-5, the-2)
amod(bowl-5, completed-3)
nn(bowl-5, fruit-4)
dobj(place-1, bowl-5)
det(counter-8, a-7)
prep_on(bowl-5, counter-8)
det(table-12, a-11)
conj_or(counter-8, table-12)
advmod(table-12, somewhere-13)
poss(kitchen-16, your-15)
prep_in(table-12, kitchen-16)
conj_or(kitchen-16, living_room-18)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(completed-3,VBN)
has_pos(fruit-4,NN)
has_pos(bowl-5,NN)
has_pos(a-7,DT)
has_pos(counter-8,NN)
has_pos(a-11,DT)
has_pos(table-12,NN)
has_pos(somewhere-13,RB)
has_pos(your-15,PRP$)
has_pos(kitchen-16,NN)
has_pos(living_room-18,NN)
has_sense(a-11, null)
has_sense(the-2, null)
has_sense(completed-3, null)
has_sense(your-15, null)
has_sense(a-7, null)
---
// place the ham with the flat side down into the cooker .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(ham-3,ham-3-sense)
is_a(ham-3-sense,ham.n.01)
has_sense(flat-6,flat-6-sense)
is_a(flat-6-sense,flat.s.01)
has_sense(down-8,down-8-sense)
is_a(down-8-sense,down.r.01)
has_sense(cooker-11,cooker-11-sense)
is_a(cooker-11-sense,cooker.n.01)
root(ROOT-0, place-1)
det(ham-3, the-2)
dobj(place-1, ham-3)
det(side-7, the-5)
amod(side-7, flat-6)
prep_with(place-1, side-7)
advmod(side-7, down-8)
det(cooker-11, the-10)
prep_into(down-8, cooker-11)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(ham-3,NN)
has_pos(the-5,DT)
has_pos(flat-6,JJ)
has_pos(side-7,NN)
has_pos(down-8,RB)
has_pos(the-10,DT)
has_pos(cooker-11,NN)
has_sense(the-5, null)
has_sense(side-7, null)
has_sense(the-2, null)
has_sense(the-10, null)
---
// place the flour , salt , and butter in a large bowl .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(flour-3,flour-3-sense)
is_a(flour-3-sense,flour.n.01)
has_sense(salt-5,salt-5-sense)
is_a(salt-5-sense,salt.n.02)
has_sense(butter-8,butter-8-sense)
is_a(butter-8-sense,butter.n.01)
has_sense(large-11,large-11-sense)
is_a(large-11-sense,large.a.01)
has_sense(bowl-12,bowl-12-sense)
is_a(bowl-12-sense,bowl.n.01)
root(ROOT-0, place-1)
det(butter-8, the-2)
nn(butter-8, flour-3)
conj_and(butter-8, salt-5)
dobj(place-1, butter-8)
det(bowl-12, a-10)
amod(bowl-12, large-11)
prep_in(butter-8, bowl-12)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(flour-3,NN)
has_pos(salt-5,NN)
has_pos(butter-8,NN)
has_pos(a-10,DT)
has_pos(large-11,JJ)
has_pos(bowl-12,NN)
has_sense(the-2, null)
has_sense(a-10, null)
---
// place the meat into the oven and cook accordingly .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(meat-3,meat-3-sense)
is_a(meat-3-sense,meat.n.01)
has_sense(oven-6,oven-6-sense)
is_a(oven-6-sense,oven.n.01)
has_sense(cook-8,cook-8-sense)
is_a(cook-8-sense,cook.v.02)
has_sense(accordingly-9,accordingly-9-sense)
is_a(accordingly-9-sense,accordingly.r.02)
root(ROOT-0, place-1)
det(meat-3, the-2)
dobj(place-1, meat-3)
det(oven-6, the-5)
prep_into(place-1, oven-6)
conj_and(place-1, cook-8)
advmod(cook-8, accordingly-9)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(meat-3,NN)
has_pos(the-5,DT)
has_pos(oven-6,NN)
has_pos(cook-8,VB)
has_pos(accordingly-9,RB)
has_sense(the-5, null)
has_sense(the-2, null)
---
// place hot lid on jar .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(hot-2,hot-2-sense)
is_a(hot-2-sense,hot.a.01)
has_sense(lid-3,lid-3-sense)
is_a(lid-3-sense,lid.n.02)
has_sense(jar-5,jar-5-sense)
is_a(jar-5-sense,jar.n.01)
root(ROOT-0, place-1)
amod(lid-3, hot-2)
dobj(place-1, lid-3)
prep_on(place-1, jar-5)
has_pos(place-1,VB)
has_pos(hot-2,JJ)
has_pos(lid-3,NN)
has_pos(jar-5,NN)
---
// place your turkey in an oven-safe pan and cover with foil or a lid .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(turkey-3,turkey-3-sense)
is_a(turkey-3-sense,turkey.n.04)
has_sense(pan-7,pan-7-sense)
is_a(pan-7-sense,pan.n.01)
has_sense(cover-9,cover-9-sense)
is_a(cover-9-sense,cover.v.01)
has_sense(foil-11,foil-11-sense)
is_a(foil-11-sense,foil.n.01)
has_sense(lid-14,lid-14-sense)
is_a(lid-14-sense,lid.n.02)
root(ROOT-0, place-1)
poss(turkey-3, your-2)
dobj(place-1, turkey-3)
det(pan-7, an-5)
amod(pan-7, oven-safe-6)
prep_in(place-1, pan-7)
conj_and(place-1, cover-9)
prep_with(cover-9, foil-11)
det(lid-14, a-13)
conj_or(foil-11, lid-14)
has_pos(place-1,VB)
has_pos(your-2,PRP$)
has_pos(turkey-3,NN)
has_pos(an-5,DT)
has_pos(oven-safe-6,JJ)
has_pos(pan-7,NN)
has_pos(cover-9,VB)
has_pos(foil-11,NN)
has_pos(a-13,DT)
has_pos(lid-14,NN)
has_sense(your-2, null)
has_sense(an-5, null)
has_sense(oven-safe-6, null)
has_sense(a-13, null)
---
// place pizza stone in conventional oven .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(pizza-2,pizza-2-sense)
is_a(pizza-2-sense,pizza.n.01)
has_sense(conventional-5,conventional-5-sense)
is_a(conventional-5-sense,conventional.s.02)
has_sense(oven-6,oven-6-sense)
is_a(oven-6-sense,oven.n.01)
nn(stone-3, place-1)
nn(stone-3, pizza-2)
root(ROOT-0, stone-3)
amod(oven-6, conventional-5)
prep_in(stone-3, oven-6)
has_pos(place-1,NN)
has_pos(pizza-2,NN)
has_pos(stone-3,NN)
has_pos(conventional-5,JJ)
has_pos(oven-6,NN)
has_sense(stone-3, null)
---
// place in a heavy based frying_pan with olive_oil .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(frying_pan-6,frying_pan-6-sense)
is_a(frying_pan-6-sense,frying_pan.n.01)
has_sense(olive_oil-8,olive_oil-8-sense)
is_a(olive_oil-8-sense,olive_oil.n.01)
root(ROOT-0, place-1)
det(frying_pan-6, a-3)
amod(frying_pan-6, heavy-4)
amod(frying_pan-6, based-5)
prep_in(place-1, frying_pan-6)
prep_with(frying_pan-6, olive_oil-8)
has_pos(place-1,NN)
has_pos(a-3,DT)
has_pos(heavy-4,JJ)
has_pos(based-5,VBN)
has_pos(frying_pan-6,NN)
has_pos(olive_oil-8,NN)
has_sense(heavy-4, null)
has_sense(based-5, null)
has_sense(a-3, null)
---
// place straight into ice water to stop the cooking process immediately .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(straight-2,straight-2-sense)
is_a(straight-2-sense,directly.r.01)
has_sense(ice-4,ice-4-sense)
is_a(ice-4-sense,ice.v.02)
has_sense(water-5,water-5-sense)
is_a(water-5-sense,water.n.06)
has_sense(stop-7,stop-7-sense)
is_a(stop-7-sense,discontinue.v.01)
has_sense(cooking-9,cooking-9-sense)
is_a(cooking-9-sense,cooking.n.01)
has_sense(process-10,process-10-sense)
is_a(process-10-sense,procedure.n.01)
has_sense(immediately-11,immediately-11-sense)
is_a(immediately-11-sense,immediately.r.01)
root(ROOT-0, place-1)
advmod(place-1, straight-2)
nn(water-5, ice-4)
prep_into(place-1, water-5)
aux(stop-7, to-6)
xcomp(place-1, stop-7)
det(process-10, the-8)
amod(process-10, cooking-9)
dobj(stop-7, process-10)
advmod(stop-7, immediately-11)
has_pos(place-1,VB)
has_pos(straight-2,RB)
has_pos(ice-4,NN)
has_pos(water-5,NN)
has_pos(to-6,TO)
has_pos(stop-7,VB)
has_pos(the-8,DT)
has_pos(cooking-9,JJ)
has_pos(process-10,NN)
has_pos(immediately-11,RB)
has_sense(to-6, null)
has_sense(the-8, null)
---
// Now get back to your place and open up your bad ass waffle_iron !
has_sense(get-2,get-2-sense)
is_a(get-2-sense,become.v.01)
has_sense(open-8,open-8-sense)
is_a(open-8-sense,open.v.01)
has_sense(waffle_iron-13,waffle_iron-13-sense)
is_a(waffle_iron-13-sense,waffle_iron.n.01)
advmod(get-2, Now-1)
root(ROOT-0, get-2)
prt(get-2, back-3)
poss(place-6, your-5)
prep_to(get-2, place-6)
conj_and(get-2, open-8)
prt(open-8, up-9)
poss(waffle_iron-13, your-10)
amod(waffle_iron-13, bad-11)
nn(waffle_iron-13, ass-12)
dobj(open-8, waffle_iron-13)
has_pos(Now-1,RB)
has_pos(get-2,VB)
has_pos(back-3,RP)
has_pos(your-5,PRP$)
has_pos(place-6,NN)
has_pos(open-8,VB)
has_pos(up-9,RP)
has_pos(your-10,PRP$)
has_pos(bad-11,JJ)
has_pos(ass-12,NN)
has_pos(waffle_iron-13,NN)
has_sense(your-5, null)
has_sense(ass-12, null)
has_sense(place-6, null)
has_sense(your-10, null)
has_sense(bad-11, null)
has_sense(back-3, null)
has_sense(Now-1, null)
has_sense(up-9, null)
---
// place a small amount of flour in a shallow bowl .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(small-3,small-3-sense)
is_a(small-3-sense,small.a.01)
has_sense(amount-4,amount-4-sense)
is_a(amount-4-sense,measure.n.02)
has_sense(flour-6,flour-6-sense)
is_a(flour-6-sense,flour.n.01)
has_sense(shallow-9,shallow-9-sense)
is_a(shallow-9-sense,shallow.a.01)
has_sense(bowl-10,bowl-10-sense)
is_a(bowl-10-sense,bowl.n.01)
root(ROOT-0, place-1)
det(amount-4, a-2)
amod(amount-4, small-3)
dobj(place-1, amount-4)
prep_of(amount-4, flour-6)
det(bowl-10, a-8)
amod(bowl-10, shallow-9)
prep_in(flour-6, bowl-10)
has_pos(place-1,VB)
has_pos(a-2,DT)
has_pos(small-3,JJ)
has_pos(amount-4,NN)
has_pos(flour-6,NN)
has_pos(a-8,DT)
has_pos(shallow-9,JJ)
has_pos(bowl-10,NN)
has_sense(a-8, null)
has_sense(a-2, null)
---
// place the soup_spoon right next to the knife .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(soup_spoon-3,soup_spoon-3-sense)
is_a(soup_spoon-3-sense,soupspoon.n.01)
has_sense(right-4,right-4-sense)
is_a(right-4-sense,right.r.01)
has_sense(next-5,next-5-sense)
is_a(next-5-sense,adjacent.s.01)
has_sense(knife-8,knife-8-sense)
is_a(knife-8-sense,knife.n.01)
root(ROOT-0, place-1)
det(soup_spoon-3, the-2)
dobj(place-1, soup_spoon-3)
advmod(place-1, right-4)
det(knife-8, the-7)
prep_next_to(place-1, knife-8)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(soup_spoon-3,NN)
has_pos(right-4,RB)
has_pos(the-7,DT)
has_pos(knife-8,NN)
has_sense(the-7, null)
has_sense(the-2, null)
---
// place the fish in a thick bottomed frying_pan with head all one way .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(fish-3,fish-3-sense)
is_a(fish-3-sense,fish.n.02)
has_sense(thick-6,thick-6-sense)
is_a(thick-6-sense,thick.a.01)
has_sense(bottomed-7,bottomed-7-sense)
is_a(bottomed-7-sense,bottomed.a.01)
has_sense(frying_pan-8,frying_pan-8-sense)
is_a(frying_pan-8-sense,frying_pan.n.01)
has_sense(head-10,head-10-sense)
is_a(head-10-sense,head.n.01)
has_sense(all-11,all-11-sense)
is_a(all-11-sense,wholly.r.01)
has_sense(way-13,way-13-sense)
is_a(way-13-sense,manner.n.01)
root(ROOT-0, place-1)
det(fish-3, the-2)
dobj(place-1, fish-3)
det(frying_pan-8, a-5)
amod(frying_pan-8, thick-6)
amod(frying_pan-8, bottomed-7)
prep_in(fish-3, frying_pan-8)
prep_with(frying_pan-8, head-10)
advmod(frying_pan-8, all-11)
num(way-13, one-12)
pobj(all-11, way-13)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(fish-3,NN)
has_pos(a-5,DT)
has_pos(thick-6,JJ)
has_pos(bottomed-7,JJ)
has_pos(frying_pan-8,NN)
has_pos(head-10,NN)
has_pos(all-11,RB)
has_pos(one-12,CD)
has_pos(way-13,NN)
has_sense(the-2, null)
has_sense(a-5, null)
has_sense(one-12, null)
---
// place in an oven at 425 degree f for 10-15 minutes .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(oven-4,oven-4-sense)
is_a(oven-4-sense,oven.n.01)
has_sense(degree-7,degree-7-sense)
is_a(degree-7-sense,degree.n.06)
has_sense(f-8,f-8-sense)
is_a(f-8-sense,degree_fahrenheit.n.01)
root(ROOT-0, place-1)
det(oven-4, an-3)
prep_in(place-1, oven-4)
num(degree-7, 425-6)
prep_at(oven-4, degree-7)
dep(oven-4, f-8)
num(minutes-11, 10-15-10)
prep_for(oven-4, minutes-11)
has_pos(place-1,VB)
has_pos(an-3,DT)
has_pos(oven-4,NN)
has_pos(425-6,CD)
has_pos(degree-7,NN)
has_pos(f-8,SYM)
has_pos(10-15-10,CD)
has_pos(minutes-11,NNS)
has_sense(425-6, null)
has_sense(10-15-10, null)
has_sense(an-3, null)
has_sense(minutes-11, null)
---
// place a few pieces at a time in the dry mixture .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(few-3,few-3-sense)
is_a(few-3-sense,few.a.01)
has_sense(time-7,time-7-sense)
is_a(time-7-sense,time.n.01)
has_sense(dry-10,dry-10-sense)
is_a(dry-10-sense,dry.a.01)
has_sense(mixture-11,mixture-11-sense)
is_a(mixture-11-sense,concoction.n.01)
root(ROOT-0, place-1)
det(pieces-4, a-2)
amod(pieces-4, few-3)
dobj(place-1, pieces-4)
det(time-7, a-6)
prep_at(place-1, time-7)
det(mixture-11, the-9)
amod(mixture-11, dry-10)
prep_in(time-7, mixture-11)
has_pos(place-1,VB)
has_pos(a-2,DT)
has_pos(few-3,JJ)
has_pos(pieces-4,NNS)
has_pos(a-6,DT)
has_pos(time-7,NN)
has_pos(the-9,DT)
has_pos(dry-10,JJ)
has_pos(mixture-11,NN)
has_sense(the-9, null)
has_sense(a-2, null)
has_sense(pieces-4, null)
has_sense(a-6, null)
---
// Rinse the chicken in cold water and place on a cutting_board breast face up .
has_sense(chicken-3,chicken-3-sense)
is_a(chicken-3-sense,chicken.n.01)
has_sense(cutting_board-11,cutting_board-11-sense)
is_a(cutting_board-11-sense,chopping_board.n.01)
has_sense(breast-12,breast-12-sense)
is_a(breast-12-sense,breast.n.03)
has_sense(face-13,face-13-sense)
is_a(face-13-sense,front.v.01)
root(ROOT-0, Rinse-1)
det(chicken-3, the-2)
dobj(Rinse-1, chicken-3)
amod(water-6, cold-5)
prep_in(chicken-3, water-6)
conj_and(water-6, place-8)
det(face-13, a-10)
amod(face-13, cutting_board-11)
nn(face-13, breast-12)
prep_on(chicken-3, face-13)
prt(Rinse-1, up-14)
has_pos(Rinse-1,VB)
has_pos(the-2,DT)
has_pos(chicken-3,NN)
has_pos(cold-5,JJ)
has_pos(water-6,NN)
has_pos(place-8,NN)
has_pos(a-10,DT)
has_pos(cutting_board-11,JJ)
has_pos(breast-12,NN)
has_pos(face-13,NN)
has_pos(up-14,RP)
has_sense(Rinse-1, null)
has_sense(the-2, null)
has_sense(water-6, null)
has_sense(a-10, null)
has_sense(up-14, null)
has_sense(cold-5, null)
has_sense(place-8, null)
---
// place the side of the egg on a counter and roll forward .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(side-3,side-3-sense)
is_a(side-3-sense,side.n.04)
has_sense(egg-6,egg-6-sense)
is_a(egg-6-sense,egg.n.02)
has_sense(counter-9,counter-9-sense)
is_a(counter-9-sense,buffet.n.01)
has_sense(roll-11,roll-11-sense)
is_a(roll-11-sense,roll.v.01)
has_sense(forward-12,forward-12-sense)
is_a(forward-12-sense,ahead.r.03)
root(ROOT-0, place-1)
det(side-3, the-2)
dobj(place-1, side-3)
det(egg-6, the-5)
prep_of(side-3, egg-6)
det(counter-9, a-8)
prep_on(egg-6, counter-9)
conj_and(place-1, roll-11)
advmod(roll-11, forward-12)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(side-3,NN)
has_pos(the-5,DT)
has_pos(egg-6,NN)
has_pos(a-8,DT)
has_pos(counter-9,NN)
has_pos(roll-11,VB)
has_pos(forward-12,RB)
has_sense(the-5, null)
has_sense(the-2, null)
has_sense(a-8, null)
---
// Place jar in a canner , leave 1-2 inch of water above the jar .
has_sense(jar-2,jar-2-sense)
is_a(jar-2-sense,jar.n.01)
has_sense(leave-7,leave-7-sense)
is_a(leave-7-sense,leave.v.11)
has_sense(inch-9,inch-9-sense)
is_a(inch-9-sense,inch.n.01)
has_sense(water-11,water-11-sense)
is_a(water-11-sense,water.n.06)
has_sense(jar-14,jar-14-sense)
is_a(jar-14-sense,jar.n.01)
nn(jar-2, Place-1)
nsubj(leave-7, jar-2)
det(canner-5, a-4)
prep_in(jar-2, canner-5)
root(ROOT-0, leave-7)
num(inch-9, 1-2-8)
dobj(leave-7, inch-9)
prep_of(inch-9, water-11)
det(jar-14, the-13)
prep_above(water-11, jar-14)
has_pos(Place-1,NN)
has_pos(jar-2,NN)
has_pos(a-4,DT)
has_pos(canner-5,NN)
has_pos(leave-7,VBP)
has_pos(1-2-8,CD)
has_pos(inch-9,NN)
has_pos(water-11,NN)
has_pos(the-13,DT)
has_pos(jar-14,NN)
has_sense(1-2-8, null)
has_sense(canner-5, null)
has_sense(Place-1, null)
has_sense(the-13, null)
has_sense(a-4, null)
---
// place desire amount of cabbage in bowl .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(desire-2,desire-2-sense)
is_a(desire-2-sense,desire.v.01)
has_sense(amount-3,amount-3-sense)
is_a(amount-3-sense,measure.n.02)
has_sense(cabbage-5,cabbage-5-sense)
is_a(cabbage-5-sense,cabbage.n.01)
has_sense(bowl-7,bowl-7-sense)
is_a(bowl-7-sense,bowl.n.01)
nn(amount-3, place-1)
nn(amount-3, desire-2)
root(ROOT-0, amount-3)
prep_of(amount-3, cabbage-5)
prep_in(amount-3, bowl-7)
has_pos(place-1,NN)
has_pos(desire-2,NN)
has_pos(amount-3,NN)
has_pos(cabbage-5,NN)
has_pos(bowl-7,NN)
---
// place a lid on the pot and bring it up to a slow boil .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(lid-3,lid-3-sense)
is_a(lid-3-sense,lid.n.02)
has_sense(pot-6,pot-6-sense)
is_a(pot-6-sense,pot.n.01)
has_sense(bring-8,bring-8-sense)
is_a(bring-8-sense,bring.v.02)
has_sense(slow-13,slow-13-sense)
is_a(slow-13-sense,slow.a.01)
has_sense(boil-14,boil-14-sense)
is_a(boil-14-sense,boiling_point.n.01)
root(ROOT-0, place-1)
det(lid-3, a-2)
dobj(place-1, lid-3)
det(pot-6, the-5)
prep_on(place-1, pot-6)
conj_and(place-1, bring-8)
dobj(bring-8, it-9)
prt(bring-8, up-10)
det(boil-14, a-12)
amod(boil-14, slow-13)
prep_to(bring-8, boil-14)
has_pos(place-1,VB)
has_pos(a-2,DT)
has_pos(lid-3,NN)
has_pos(the-5,DT)
has_pos(pot-6,NN)
has_pos(bring-8,VB)
has_pos(it-9,PRP)
has_pos(up-10,RP)
has_pos(a-12,DT)
has_pos(slow-13,JJ)
has_pos(boil-14,NN)
has_sense(the-5, null)
has_sense(up-10, null)
has_sense(a-12, null)
has_sense(a-2, null)
has_sense(it-9, null)
---
// place dutch_oven on stove top on med high heat and add oil .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(dutch_oven-2,dutch_oven-2-sense)
is_a(dutch_oven-2-sense,dutch_oven.n.02)
has_sense(stove-4,stove-4-sense)
is_a(stove-4-sense,stove.n.01)
has_sense(top-5,top-5-sense)
is_a(top-5-sense,top.n.01)
has_sense(high-8,high-8-sense)
is_a(high-8-sense,high.a.01)
has_sense(heat-9,heat-9-sense)
is_a(heat-9-sense,heat.n.01)
has_sense(add-11,add-11-sense)
is_a(add-11-sense,add.v.01)
has_sense(oil-12,oil-12-sense)
is_a(oil-12-sense,vegetable_oil.n.01)
root(ROOT-0, place-1)
dobj(place-1, dutch_oven-2)
nn(top-5, stove-4)
prep_on(place-1, top-5)
amod(heat-9, med-7)
amod(heat-9, high-8)
prep_on(top-5, heat-9)
conj_and(place-1, add-11)
dobj(add-11, oil-12)
has_pos(place-1,VB)
has_pos(dutch_oven-2,NN)
has_pos(stove-4,NN)
has_pos(top-5,NN)
has_pos(med-7,JJ)
has_pos(high-8,JJ)
has_pos(heat-9,NN)
has_pos(add-11,VB)
has_pos(oil-12,NN)
has_sense(med-7, null)
---
// place the turkey in a large bowl or pan .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(turkey-3,turkey-3-sense)
is_a(turkey-3-sense,turkey.n.04)
has_sense(large-6,large-6-sense)
is_a(large-6-sense,large.a.01)
has_sense(bowl-7,bowl-7-sense)
is_a(bowl-7-sense,bowl.n.01)
root(ROOT-0, place-1)
det(turkey-3, the-2)
dobj(place-1, turkey-3)
det(bowl-7, a-5)
amod(bowl-7, large-6)
prep_in(turkey-3, bowl-7)
conj_or(place-1, pan-9)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(turkey-3,NN)
has_pos(a-5,DT)
has_pos(large-6,JJ)
has_pos(bowl-7,NN)
has_pos(pan-9,VB)
has_sense(the-2, null)
has_sense(pan-9, null)
has_sense(a-5, null)
---
// place veal on top of onions .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(veal-2,veal-2-sense)
is_a(veal-2-sense,veal.n.01)
has_sense(top-4,top-4-sense)
is_a(top-4-sense,top.n.02)
nn(veal-2, place-1)
root(ROOT-0, veal-2)
prep_on(veal-2, top-4)
prep_of(veal-2, onions-6)
has_pos(place-1,NN)
has_pos(veal-2,NN)
has_pos(top-4,NN)
has_pos(onions-6,NNS)
has_sense(onions-6, null)
---
// place the dinner spoon right next to the soup_spoon .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(dinner-3,dinner-3-sense)
is_a(dinner-3-sense,dinner.n.01)
has_sense(spoon-4,spoon-4-sense)
is_a(spoon-4-sense,spoon.n.01)
has_sense(right-5,right-5-sense)
is_a(right-5-sense,right.r.01)
has_sense(next-6,next-6-sense)
is_a(next-6-sense,adjacent.s.01)
has_sense(soup_spoon-9,soup_spoon-9-sense)
is_a(soup_spoon-9-sense,soupspoon.n.01)
root(ROOT-0, place-1)
det(spoon-4, the-2)
nn(spoon-4, dinner-3)
dobj(place-1, spoon-4)
advmod(place-1, right-5)
det(soup_spoon-9, the-8)
prep_next_to(place-1, soup_spoon-9)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(dinner-3,NN)
has_pos(spoon-4,NN)
has_pos(right-5,RB)
has_pos(the-8,DT)
has_pos(soup_spoon-9,NN)
has_sense(the-8, null)
has_sense(the-2, null)
---
// place about 2 heaping tablespoon of your meat on next .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(about-2,about-2-sense)
is_a(about-2-sense,approximately.r.01)
has_sense(tablespoon-5,tablespoon-5-sense)
is_a(tablespoon-5-sense,tablespoon.n.01)
has_sense(meat-8,meat-8-sense)
is_a(meat-8-sense,meat.n.01)
has_sense(next-10,next-10-sense)
is_a(next-10-sense,following.s.02)
root(ROOT-0, place-1)
quantmod(2-3, about-2)
num(tablespoon-5, 2-3)
amod(tablespoon-5, heaping-4)
dobj(place-1, tablespoon-5)
poss(meat-8, your-7)
prep_of(tablespoon-5, meat-8)
prep_on(meat-8, next-10)
has_pos(place-1,VB)
has_pos(about-2,RB)
has_pos(2-3,CD)
has_pos(heaping-4,JJ)
has_pos(tablespoon-5,NNS)
has_pos(your-7,PRP$)
has_pos(meat-8,NN)
has_pos(next-10,JJ)
has_sense(2-3, null)
has_sense(your-7, null)
has_sense(heaping-4, null)
---
// place several layer of paper_towel over the dish .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(several-2,several-2-sense)
is_a(several-2-sense,several.s.01)
has_sense(layer-3,layer-3-sense)
is_a(layer-3-sense,layer.n.01)
has_sense(paper_towel-5,paper_towel-5-sense)
is_a(paper_towel-5-sense,paper_towel.n.01)
has_sense(dish-8,dish-8-sense)
is_a(dish-8-sense,dish.n.01)
nn(layer-3, place-1)
amod(layer-3, several-2)
root(ROOT-0, layer-3)
prep_of(layer-3, paper_towel-5)
det(dish-8, the-7)
prep_over(layer-3, dish-8)
has_pos(place-1,NN)
has_pos(several-2,JJ)
has_pos(layer-3,NN)
has_pos(paper_towel-5,NN)
has_pos(the-7,DT)
has_pos(dish-8,NN)
has_sense(the-7, null)
---
// When they be fried and light_brown in color , place a dinner_plate over the pan .
has_sense(be-3,be-3-sense)
is_a(be-3-sense,be.v.01)
has_sense(fried-4,fried-4-sense)
is_a(fried-4-sense,fried.s.01)
has_sense(light_brown-6,light_brown-6-sense)
is_a(light_brown-6-sense,light_brown.n.01)
has_sense(color-8,color-8-sense)
is_a(color-8-sense,color.n.01)
has_sense(place-10,place-10-sense)
is_a(place-10-sense,put.v.01)
has_sense(dinner_plate-12,dinner_plate-12-sense)
is_a(dinner_plate-12-sense,dinner_plate.n.01)
has_sense(pan-15,pan-15-sense)
is_a(pan-15-sense,pan.n.01)
advmod(fried-4, When-1)
nsubjpass(fried-4, they-2)
auxpass(fried-4, be-3)
advcl(place-10, fried-4)
conj_and(fried-4, light_brown-6)
prep_in(fried-4, color-8)
root(ROOT-0, place-10)
det(dinner_plate-12, a-11)
dobj(place-10, dinner_plate-12)
det(pan-15, the-14)
prep_over(dinner_plate-12, pan-15)
has_pos(When-1,WRB)
has_pos(they-2,PRP)
has_pos(be-3,VB)
has_pos(fried-4,VBN)
has_pos(light_brown-6,VBN)
has_pos(color-8,NN)
has_pos(place-10,VB)
has_pos(a-11,DT)
has_pos(dinner_plate-12,NN)
has_pos(the-14,DT)
has_pos(pan-15,NN)
has_sense(a-11, null)
has_sense(they-2, null)
has_sense(When-1, null)
has_sense(the-14, null)
---
// place the bowl into the saucepan .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(bowl-3,bowl-3-sense)
is_a(bowl-3-sense,bowl.n.01)
has_sense(saucepan-6,saucepan-6-sense)
is_a(saucepan-6-sense,saucepan.n.01)
root(ROOT-0, place-1)
det(bowl-3, the-2)
dobj(place-1, bowl-3)
det(saucepan-6, the-5)
prep_into(place-1, saucepan-6)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(bowl-3,NN)
has_pos(the-5,DT)
has_pos(saucepan-6,NN)
has_sense(the-5, null)
has_sense(the-2, null)
---
// place the turkey breast side down in the roasting pan .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(turkey-3,turkey-3-sense)
is_a(turkey-3-sense,turkey.n.04)
has_sense(breast-4,breast-4-sense)
is_a(breast-4-sense,breast.n.04)
has_sense(down-6,down-6-sense)
is_a(down-6-sense,down.r.01)
has_sense(roasting-9,roasting-9-sense)
is_a(roasting-9-sense,roasting.n.01)
root(ROOT-0, place-1)
det(side-5, the-2)
nn(side-5, turkey-3)
nn(side-5, breast-4)
dobj(place-1, side-5)
advmod(place-1, down-6)
det(roasting-9, the-8)
prep_in(down-6, roasting-9)
dep(place-1, pan-10)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(turkey-3,NN)
has_pos(breast-4,NN)
has_pos(side-5,NN)
has_pos(down-6,RB)
has_pos(the-8,DT)
has_pos(roasting-9,NN)
has_pos(pan-10,VB)
has_sense(side-5, null)
has_sense(the-2, null)
has_sense(pan-10, null)
has_sense(the-8, null)
---
// place into an airtight cake container with a lid .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(airtight-4,airtight-4-sense)
is_a(airtight-4-sense,airtight.s.02)
has_sense(cake-5,cake-5-sense)
is_a(cake-5-sense,cake.n.03)
has_sense(container-6,container-6-sense)
is_a(container-6-sense,container.n.01)
has_sense(lid-9,lid-9-sense)
is_a(lid-9-sense,lid.n.02)
root(ROOT-0, place-1)
det(container-6, an-3)
amod(container-6, airtight-4)
nn(container-6, cake-5)
prep_into(place-1, container-6)
det(lid-9, a-8)
prep_with(container-6, lid-9)
has_pos(place-1,VB)
has_pos(an-3,DT)
has_pos(airtight-4,JJ)
has_pos(cake-5,NN)
has_pos(container-6,NN)
has_pos(a-8,DT)
has_pos(lid-9,NN)
has_sense(a-8, null)
has_sense(an-3, null)
---
// place in a pan of water and slightly blanch .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(pan-4,pan-4-sense)
is_a(pan-4-sense,pan.n.01)
has_sense(water-6,water-6-sense)
is_a(water-6-sense,water.n.06)
has_sense(slightly-8,slightly-8-sense)
is_a(slightly-8-sense,slightly.r.01)
has_sense(blanch-9,blanch-9-sense)
is_a(blanch-9-sense,blanch.v.02)
root(ROOT-0, place-1)
det(pan-4, a-3)
prep_in(place-1, pan-4)
prep_of(pan-4, water-6)
advmod(blanch-9, slightly-8)
conj_and(place-1, blanch-9)
has_pos(place-1,VB)
has_pos(a-3,DT)
has_pos(pan-4,NN)
has_pos(water-6,NN)
has_pos(slightly-8,RB)
has_pos(blanch-9,VB)
has_sense(a-3, null)
---
// place your burger on hot grill .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(burger-3,burger-3-sense)
is_a(burger-3-sense,hamburger.n.01)
has_sense(hot-5,hot-5-sense)
is_a(hot-5-sense,hot.a.01)
has_sense(grill-6,grill-6-sense)
is_a(grill-6-sense,grill.n.02)
root(ROOT-0, place-1)
poss(burger-3, your-2)
dobj(place-1, burger-3)
amod(grill-6, hot-5)
prep_on(place-1, grill-6)
has_pos(place-1,VB)
has_pos(your-2,PRP$)
has_pos(burger-3,NN)
has_pos(hot-5,JJ)
has_pos(grill-6,NN)
has_sense(your-2, null)
---
// place the hamburger on the grill use the spatula .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(hamburger-3,hamburger-3-sense)
is_a(hamburger-3-sense,hamburger.n.01)
has_sense(grill-6,grill-6-sense)
is_a(grill-6-sense,grill.n.02)
has_sense(use-7,use-7-sense)
is_a(use-7-sense,use.v.01)
has_sense(spatula-9,spatula-9-sense)
is_a(spatula-9-sense,spatula.n.01)
root(ROOT-0, place-1)
det(hamburger-3, the-2)
dobj(place-1, hamburger-3)
det(use-7, the-5)
amod(use-7, grill-6)
prep_on(place-1, use-7)
det(spatula-9, the-8)
dep(use-7, spatula-9)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(hamburger-3,NN)
has_pos(the-5,DT)
has_pos(grill-6,JJ)
has_pos(use-7,NN)
has_pos(the-8,DT)
has_pos(spatula-9,NN)
has_sense(the-5, null)
has_sense(the-2, null)
has_sense(the-8, null)
---
// place the flank_steak in the hot oil .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(flank_steak-3,flank_steak-3-sense)
is_a(flank_steak-3-sense,flank_steak.n.01)
has_sense(hot-6,hot-6-sense)
is_a(hot-6-sense,hot.a.01)
has_sense(oil-7,oil-7-sense)
is_a(oil-7-sense,vegetable_oil.n.01)
root(ROOT-0, place-1)
det(flank_steak-3, the-2)
dobj(place-1, flank_steak-3)
det(oil-7, the-5)
amod(oil-7, hot-6)
prep_in(flank_steak-3, oil-7)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(flank_steak-3,NN)
has_pos(the-5,DT)
has_pos(hot-6,JJ)
has_pos(oil-7,NN)
has_sense(the-5, null)
has_sense(the-2, null)
---
// place the pan on the stove .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(pan-3,pan-3-sense)
is_a(pan-3-sense,pan.n.01)
has_sense(stove-6,stove-6-sense)
is_a(stove-6-sense,stove.n.01)
root(ROOT-0, place-1)
det(pan-3, the-2)
dobj(place-1, pan-3)
det(stove-6, the-5)
prep_on(place-1, stove-6)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(pan-3,NN)
has_pos(the-5,DT)
has_pos(stove-6,NN)
has_sense(the-5, null)
has_sense(the-2, null)
---
// place the bird into the preheated oven .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(bird-3,bird-3-sense)
is_a(bird-3-sense,bird.n.02)
has_sense(oven-7,oven-7-sense)
is_a(oven-7-sense,oven.n.01)
root(ROOT-0, place-1)
det(bird-3, the-2)
dobj(place-1, bird-3)
det(oven-7, the-5)
amod(oven-7, preheated-6)
prep_into(place-1, oven-7)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(bird-3,NN)
has_pos(the-5,DT)
has_pos(preheated-6,JJ)
has_pos(oven-7,NN)
has_sense(the-5, null)
has_sense(preheated-6, null)
has_sense(the-2, null)
---
// place mushrooms in a colander .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(colander-5,colander-5-sense)
is_a(colander-5-sense,colander.n.01)
nn(mushrooms-2, place-1)
root(ROOT-0, mushrooms-2)
det(colander-5, a-4)
prep_in(mushrooms-2, colander-5)
has_pos(place-1,NN)
has_pos(mushrooms-2,NNS)
has_pos(a-4,DT)
has_pos(colander-5,NN)
has_sense(mushrooms-2, null)
has_sense(a-4, null)
---
// place the saucepan onto a high heat and bring the water to a boil .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(saucepan-3,saucepan-3-sense)
is_a(saucepan-3-sense,saucepan.n.01)
has_sense(high-6,high-6-sense)
is_a(high-6-sense,high.a.01)
has_sense(heat-7,heat-7-sense)
is_a(heat-7-sense,hotness.n.01)
has_sense(bring-9,bring-9-sense)
is_a(bring-9-sense,bring.v.02)
has_sense(water-11,water-11-sense)
is_a(water-11-sense,water.n.06)
has_sense(boil-14,boil-14-sense)
is_a(boil-14-sense,boiling_point.n.01)
root(ROOT-0, place-1)
det(saucepan-3, the-2)
dobj(place-1, saucepan-3)
det(heat-7, a-5)
amod(heat-7, high-6)
prep_onto(place-1, heat-7)
conj_and(place-1, bring-9)
det(water-11, the-10)
dobj(bring-9, water-11)
det(boil-14, a-13)
prep_to(bring-9, boil-14)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(saucepan-3,NN)
has_pos(a-5,DT)
has_pos(high-6,JJ)
has_pos(heat-7,NN)
has_pos(bring-9,VB)
has_pos(the-10,DT)
has_pos(water-11,NN)
has_pos(a-13,DT)
has_pos(boil-14,NN)
has_sense(the-2, null)
has_sense(a-13, null)
has_sense(a-5, null)
has_sense(the-10, null)
---
// place half of the stuffing on each of the two flank_steak piece .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(half-2,half-2-sense)
is_a(half-2-sense,one-half.n.01)
has_sense(stuffing-5,stuffing-5-sense)
is_a(stuffing-5-sense,stuffing.n.01)
has_sense(flank_steak-11,flank_steak-11-sense)
is_a(flank_steak-11-sense,flank_steak.n.01)
has_sense(piece-12,piece-12-sense)
is_a(piece-12-sense,piece.n.01)
nn(half-2, place-1)
root(ROOT-0, half-2)
det(stuffing-5, the-4)
prep_of(half-2, stuffing-5)
prep_on(half-2, each-7)
det(piece-12, the-9)
num(piece-12, two-10)
nn(piece-12, flank_steak-11)
prep_of(each-7, piece-12)
has_pos(place-1,NN)
has_pos(half-2,NN)
has_pos(the-4,DT)
has_pos(stuffing-5,NN)
has_pos(each-7,DT)
has_pos(the-9,DT)
has_pos(two-10,CD)
has_pos(flank_steak-11,NN)
has_pos(piece-12,NN)
has_sense(the-4, null)
has_sense(each-7, null)
has_sense(the-9, null)
has_sense(two-10, null)
---
// place inside refrigerator overnight -LRB- at least 4 hours -RRB- .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(refrigerator-3,refrigerator-3-sense)
is_a(refrigerator-3-sense,refrigerator.n.01)
has_sense(overnight-4,overnight-4-sense)
is_a(overnight-4-sense,nightlong.s.01)
has_sense(least-7,least-7-sense)
is_a(least-7-sense,least.a.01)
has_sense(hours-9,hours-9-sense)
is_a(hours-9-sense,hours.n.01)
root(ROOT-0, place-1)
prep_inside(place-1, refrigerator-3)
amod(refrigerator-3, overnight-4)
quantmod(4-8, at-6)
mwe(at-6, least-7)
num(hours-9, 4-8)
appos(refrigerator-3, hours-9)
has_pos(place-1,NN)
has_pos(refrigerator-3,NN)
has_pos(overnight-4,JJ)
has_pos(at-6,IN)
has_pos(least-7,JJS)
has_pos(4-8,CD)
has_pos(hours-9,NNS)
has_sense(4-8, null)
has_sense(at-6, null)
---
// place the burger on the grill over direct heat .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(burger-3,burger-3-sense)
is_a(burger-3-sense,hamburger.n.01)
has_sense(grill-6,grill-6-sense)
is_a(grill-6-sense,grill.n.02)
has_sense(direct-8,direct-8-sense)
is_a(direct-8-sense,direct.a.01)
has_sense(heat-9,heat-9-sense)
is_a(heat-9-sense,hotness.n.01)
root(ROOT-0, place-1)
det(burger-3, the-2)
dobj(place-1, burger-3)
det(grill-6, the-5)
prep_on(place-1, grill-6)
amod(heat-9, direct-8)
prep_over(grill-6, heat-9)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(burger-3,NN)
has_pos(the-5,DT)
has_pos(grill-6,NN)
has_pos(direct-8,JJ)
has_pos(heat-9,NN)
has_sense(the-5, null)
has_sense(the-2, null)
---
// place two flank_steak on a cutting_board .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(flank_steak-3,flank_steak-3-sense)
is_a(flank_steak-3-sense,flank_steak.n.01)
has_sense(cutting_board-6,cutting_board-6-sense)
is_a(cutting_board-6-sense,chopping_board.n.01)
nsubj(flank_steak-3, place-1)
num(place-1, two-2)
root(ROOT-0, flank_steak-3)
det(cutting_board-6, a-5)
prep_on(flank_steak-3, cutting_board-6)
has_pos(place-1,NN)
has_pos(two-2,CD)
has_pos(flank_steak-3,VBP)
has_pos(a-5,DT)
has_pos(cutting_board-6,NN)
has_sense(a-5, null)
has_sense(two-2, null)
---
// place the lobster_tail on the hot grill with the flesh side down .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(lobster_tail-3,lobster_tail-3-sense)
is_a(lobster_tail-3-sense,lobster_tail.n.01)
has_sense(hot-6,hot-6-sense)
is_a(hot-6-sense,hot.a.01)
has_sense(grill-7,grill-7-sense)
is_a(grill-7-sense,grill.n.02)
has_sense(flesh-10,flesh-10-sense)
is_a(flesh-10-sense,flesh.n.01)
has_sense(side-11,side-11-sense)
is_a(side-11-sense,side.n.01)
root(ROOT-0, place-1)
det(lobster_tail-3, the-2)
dobj(place-1, lobster_tail-3)
det(grill-7, the-5)
amod(grill-7, hot-6)
prep_on(lobster_tail-3, grill-7)
det(side-11, the-9)
nn(side-11, flesh-10)
prep_with(grill-7, side-11)
prt(place-1, down-12)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(lobster_tail-3,NN)
has_pos(the-5,DT)
has_pos(hot-6,JJ)
has_pos(grill-7,NN)
has_pos(the-9,DT)
has_pos(flesh-10,NN)
has_pos(side-11,NN)
has_pos(down-12,RP)
has_sense(the-5, null)
has_sense(the-2, null)
has_sense(the-9, null)
has_sense(down-12, null)
---
// place a lid on top of the jar , and screw on the band with your hands .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(lid-3,lid-3-sense)
is_a(lid-3-sense,lid.n.02)
has_sense(top-5,top-5-sense)
is_a(top-5-sense,top.n.02)
has_sense(jar-8,jar-8-sense)
is_a(jar-8-sense,jar.n.01)
has_sense(screw-11,screw-11-sense)
is_a(screw-11-sense,screw.v.04)
has_sense(band-14,band-14-sense)
is_a(band-14-sense,band.n.11)
root(ROOT-0, place-1)
det(lid-3, a-2)
dobj(place-1, lid-3)
det(jar-8, the-7)
prep_on_top_of(place-1, jar-8)
conj_and(place-1, screw-11)
det(band-14, the-13)
prep_on(screw-11, band-14)
poss(hands-17, your-16)
prep_with(band-14, hands-17)
has_pos(place-1,VB)
has_pos(a-2,DT)
has_pos(lid-3,NN)
has_pos(the-7,DT)
has_pos(jar-8,NN)
has_pos(screw-11,VB)
has_pos(the-13,DT)
has_pos(band-14,NN)
has_pos(your-16,PRP$)
has_pos(hands-17,NNS)
has_sense(the-7, null)
has_sense(your-16, null)
has_sense(the-13, null)
has_sense(a-2, null)
has_sense(hands-17, null)
---
// remove the tenderloin from the skillet and place it on a cutting_board .
has_sense(remove-1,remove-1-sense)
is_a(remove-1-sense,remove.v.01)
has_sense(tenderloin-3,tenderloin-3-sense)
is_a(tenderloin-3-sense,tenderloin.n.02)
has_sense(skillet-6,skillet-6-sense)
is_a(skillet-6-sense,frying_pan.n.01)
has_sense(place-8,place-8-sense)
is_a(place-8-sense,put.v.01)
has_sense(cutting_board-12,cutting_board-12-sense)
is_a(cutting_board-12-sense,chopping_board.n.01)
root(ROOT-0, remove-1)
det(tenderloin-3, the-2)
dobj(remove-1, tenderloin-3)
det(skillet-6, the-5)
prep_from(remove-1, skillet-6)
conj_and(remove-1, place-8)
dobj(place-8, it-9)
det(cutting_board-12, a-11)
prep_on(place-8, cutting_board-12)
has_pos(remove-1,VB)
has_pos(the-2,DT)
has_pos(tenderloin-3,NN)
has_pos(the-5,DT)
has_pos(skillet-6,NN)
has_pos(place-8,VB)
has_pos(it-9,PRP)
has_pos(a-11,DT)
has_pos(cutting_board-12,NN)
has_sense(a-11, null)
has_sense(the-2, null)
has_sense(the-5, null)
has_sense(it-9, null)
---
// place the piece of fish in the pan when it get to medium heat .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(piece-3,piece-3-sense)
is_a(piece-3-sense,piece.n.01)
has_sense(fish-5,fish-5-sense)
is_a(fish-5-sense,fish.n.02)
has_sense(pan-8,pan-8-sense)
is_a(pan-8-sense,pan.n.01)
has_sense(get-11,get-11-sense)
is_a(get-11-sense,become.v.01)
has_sense(medium-13,medium-13-sense)
is_a(medium-13-sense,medium.n.08)
has_sense(heat-14,heat-14-sense)
is_a(heat-14-sense,hotness.n.01)
root(ROOT-0, place-1)
det(piece-3, the-2)
dobj(place-1, piece-3)
prep_of(piece-3, fish-5)
det(pan-8, the-7)
prep_in(place-1, pan-8)
advmod(get-11, when-9)
nsubj(get-11, it-10)
dep(pan-8, get-11)
nn(heat-14, medium-13)
prep_to(get-11, heat-14)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(piece-3,NN)
has_pos(fish-5,NN)
has_pos(the-7,DT)
has_pos(pan-8,NN)
has_pos(when-9,WRB)
has_pos(it-10,PRP)
has_pos(get-11,VBP)
has_pos(medium-13,NN)
has_pos(heat-14,NN)
has_sense(the-7, null)
has_sense(when-9, null)
has_sense(the-2, null)
has_sense(it-10, null)
---
// place a softened seal on each jar .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(softened-3,softened-3-sense)
is_a(softened-3-sense,dull.s.03)
has_sense(seal-4,seal-4-sense)
is_a(seal-4-sense,seal.n.08)
has_sense(jar-7,jar-7-sense)
is_a(jar-7-sense,jar.n.01)
root(ROOT-0, place-1)
det(seal-4, a-2)
amod(seal-4, softened-3)
dobj(place-1, seal-4)
det(jar-7, each-6)
prep_on(seal-4, jar-7)
has_pos(place-1,VB)
has_pos(a-2,DT)
has_pos(softened-3,JJ)
has_pos(seal-4,NN)
has_pos(each-6,DT)
has_pos(jar-7,NN)
has_sense(a-2, null)
has_sense(each-6, null)
---
// If the lobster_tail be small , place the tails on wood or metal skewer .
has_sense(lobster_tail-3,lobster_tail-3-sense)
is_a(lobster_tail-3-sense,lobster_tail.n.01)
has_sense(be-4,be-4-sense)
is_a(be-4-sense,be.v.01)
has_sense(small-5,small-5-sense)
is_a(small-5-sense,small.a.01)
has_sense(place-7,place-7-sense)
is_a(place-7-sense,put.v.01)
has_sense(wood-11,wood-11-sense)
is_a(wood-11-sense,wood.n.01)
has_sense(metal-13,metal-13-sense)
is_a(metal-13-sense,metallic_element.n.01)
has_sense(skewer-14,skewer-14-sense)
is_a(skewer-14-sense,skewer.n.01)
mark(small-5, If-1)
det(lobster_tail-3, the-2)
nsubj(small-5, lobster_tail-3)
cop(small-5, be-4)
advcl(place-7, small-5)
root(ROOT-0, place-7)
det(tails-9, the-8)
dobj(place-7, tails-9)
nn(skewer-14, wood-11)
conj_or(wood-11, metal-13)
prep_on(place-7, skewer-14)
has_pos(If-1,IN)
has_pos(the-2,DT)
has_pos(lobster_tail-3,NN)
has_pos(be-4,VB)
has_pos(small-5,JJ)
has_pos(place-7,VB)
has_pos(the-8,DT)
has_pos(tails-9,NNS)
has_pos(wood-11,NN)
has_pos(metal-13,NN)
has_pos(skewer-14,NN)
has_sense(tails-9, null)
has_sense(the-2, null)
has_sense(the-8, null)
has_sense(If-1, null)
---
// place the bagel back in the grill .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(bagel-3,bagel-3-sense)
is_a(bagel-3-sense,bagel.n.01)
has_sense(back-4,back-4-sense)
is_a(back-4-sense,back.r.01)
has_sense(grill-7,grill-7-sense)
is_a(grill-7-sense,grill.n.02)
root(ROOT-0, place-1)
det(bagel-3, the-2)
dobj(place-1, bagel-3)
advmod(place-1, back-4)
det(grill-7, the-6)
prep_in(place-1, grill-7)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(bagel-3,NN)
has_pos(back-4,RB)
has_pos(the-6,DT)
has_pos(grill-7,NN)
has_sense(the-6, null)
has_sense(the-2, null)
---
// place the cubes of rhubarb into medium saucepan .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(rhubarb-5,rhubarb-5-sense)
is_a(rhubarb-5-sense,pieplant.n.01)
has_sense(saucepan-8,saucepan-8-sense)
is_a(saucepan-8-sense,saucepan.n.01)
root(ROOT-0, place-1)
det(cubes-3, the-2)
dobj(place-1, cubes-3)
prep_of(cubes-3, rhubarb-5)
nn(saucepan-8, medium-7)
prep_into(place-1, saucepan-8)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(cubes-3,NNS)
has_pos(rhubarb-5,NN)
has_pos(medium-7,NN)
has_pos(saucepan-8,NN)
has_sense(the-2, null)
has_sense(cubes-3, null)
has_sense(medium-7, null)
---
// place the bacon cover bowl into the microwave .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(bacon-3,bacon-3-sense)
is_a(bacon-3-sense,bacon.n.01)
has_sense(cover-4,cover-4-sense)
is_a(cover-4-sense,cover.v.01)
has_sense(bowl-5,bowl-5-sense)
is_a(bowl-5-sense,bowl.n.01)
has_sense(microwave-8,microwave-8-sense)
is_a(microwave-8-sense,microwave.n.02)
root(ROOT-0, place-1)
det(bowl-5, the-2)
nn(bowl-5, bacon-3)
nn(bowl-5, cover-4)
dobj(place-1, bowl-5)
det(microwave-8, the-7)
prep_into(place-1, microwave-8)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(bacon-3,NN)
has_pos(cover-4,NN)
has_pos(bowl-5,NN)
has_pos(the-7,DT)
has_pos(microwave-8,NN)
has_sense(the-7, null)
has_sense(the-2, null)
---
// For the last hour of smoking , wrap the rib in aluminum_foil and place them back on the smoker .
has_sense(last-3,last-3-sense)
is_a(last-3-sense,concluding.s.01)
has_sense(hour-4,hour-4-sense)
is_a(hour-4-sense,hour.n.01)
has_sense(rib-10,rib-10-sense)
is_a(rib-10-sense,rib.n.03)
has_sense(aluminum_foil-12,aluminum_foil-12-sense)
is_a(aluminum_foil-12-sense,aluminum_foil.n.01)
has_sense(place-14,place-14-sense)
is_a(place-14-sense,put.v.01)
det(hour-4, the-2)
amod(hour-4, last-3)
prep_for(wrap-8, hour-4)
prep_of(hour-4, smoking-6)
root(ROOT-0, wrap-8)
det(rib-10, the-9)
dobj(wrap-8, rib-10)
prep_in(rib-10, aluminum_foil-12)
conj_and(wrap-8, place-14)
dobj(place-14, them-15)
prt(place-14, back-16)
det(smoker-19, the-18)
prep_on(place-14, smoker-19)
has_pos(the-2,DT)
has_pos(last-3,JJ)
has_pos(hour-4,NN)
has_pos(smoking-6,NN)
has_pos(wrap-8,VB)
has_pos(the-9,DT)
has_pos(rib-10,NN)
has_pos(aluminum_foil-12,NN)
has_pos(place-14,VB)
has_pos(them-15,PRP)
has_pos(back-16,RP)
has_pos(the-18,DT)
has_pos(smoker-19,NN)
has_sense(the-2, null)
has_sense(back-16, null)
has_sense(the-9, null)
has_sense(wrap-8, null)
has_sense(them-15, null)
has_sense(the-18, null)
has_sense(smoking-6, null)
has_sense(smoker-19, null)
---
// Place chicken , breast up , on cutting_board .
has_sense(chicken-2,chicken-2-sense)
is_a(chicken-2-sense,chicken.n.01)
has_sense(up-5,up-5-sense)
is_a(up-5-sense,up.r.01)
has_sense(cutting_board-8,cutting_board-8-sense)
is_a(cutting_board-8-sense,chopping_board.n.01)
nn(chicken-2, Place-1)
nsubj(cutting_board-8, chicken-2)
partmod(chicken-2, breast-4)
prt(breast-4, up-5)
advmod(cutting_board-8, on-7)
root(ROOT-0, cutting_board-8)
has_pos(Place-1,NN)
has_pos(chicken-2,NN)
has_pos(breast-4,VBN)
has_pos(up-5,RP)
has_pos(on-7,RB)
has_pos(cutting_board-8,VBD)
has_sense(breast-4, null)
has_sense(Place-1, null)
has_sense(on-7, null)
---
// place the dried_fruit ingredient into a large mixing_bowl .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(dried_fruit-3,dried_fruit-3-sense)
is_a(dried_fruit-3-sense,dried_fruit.n.01)
has_sense(ingredient-4,ingredient-4-sense)
is_a(ingredient-4-sense,ingredient.n.03)
has_sense(large-7,large-7-sense)
is_a(large-7-sense,large.a.01)
has_sense(mixing_bowl-8,mixing_bowl-8-sense)
is_a(mixing_bowl-8-sense,mixing_bowl.n.01)
root(ROOT-0, place-1)
det(ingredient-4, the-2)
amod(ingredient-4, dried_fruit-3)
dobj(place-1, ingredient-4)
det(mixing_bowl-8, a-6)
amod(mixing_bowl-8, large-7)
prep_into(place-1, mixing_bowl-8)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(dried_fruit-3,JJ)
has_pos(ingredient-4,NN)
has_pos(a-6,DT)
has_pos(large-7,JJ)
has_pos(mixing_bowl-8,NN)
has_sense(the-2, null)
has_sense(a-6, null)
---
// place the bag on the roast pan .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(bag-3,bag-3-sense)
is_a(bag-3-sense,bag.n.01)
has_sense(pan-7,pan-7-sense)
is_a(pan-7-sense,pan.n.01)
root(ROOT-0, place-1)
det(bag-3, the-2)
dobj(place-1, bag-3)
det(pan-7, the-5)
nn(pan-7, roast-6)
prep_on(place-1, pan-7)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(bag-3,NN)
has_pos(the-5,DT)
has_pos(roast-6,NN)
has_pos(pan-7,NN)
has_sense(the-5, null)
has_sense(the-2, null)
has_sense(roast-6, null)