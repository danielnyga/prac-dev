/* **************************************************************************** 
 * WIKIHOW.COM -- NATURAL-LANGUAGE INSTRUCTIONS
 * 
 * (C) 2011-2013 by Daniel Nyga (nyga@cs.uni-bremen.edu)
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 ******************************************************************************/

// Stir in milk .
has_sense(milk-3,milk-3-sense)
is_a(milk-3-sense,milk.n.01)
root(ROOT-0, Stir-1)
prep_in(Stir-1, milk-3)
has_pos(Stir-1,NNP)
has_pos(milk-3,NN)
has_sense(Stir-1, null)
---
// stir in 2 teaspoon vanilla flavoring , 1\/2 cup peanut_butter -LRB- optional -RRB- , and 2 cup uncooked oat .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(teaspoon-4,teaspoon-4-sense)
is_a(teaspoon-4-sense,teaspoon.n.01)
has_sense(vanilla-5,vanilla-5-sense)
is_a(vanilla-5-sense,vanilla.n.02)
has_sense(flavoring-6,flavoring-6-sense)
is_a(flavoring-6-sense,flavorer.n.01)
has_sense(cup-9,cup-9-sense)
is_a(cup-9-sense,cup.n.02)
has_sense(peanut_butter-10,peanut_butter-10-sense)
is_a(peanut_butter-10-sense,peanut_butter.n.01)
has_sense(optional-12,optional-12-sense)
is_a(optional-12-sense,optional.a.01)
has_sense(cup-17,cup-17-sense)
is_a(cup-17-sense,cup.n.04)
has_sense(uncooked-18,uncooked-18-sense)
is_a(uncooked-18-sense,uncooked.s.01)
has_sense(oat-19,oat-19-sense)
is_a(oat-19-sense,oat.n.01)
root(ROOT-0, stir-1)
number(vanilla-5, 2-3)
dep(vanilla-5, teaspoon-4)
amod(flavoring-6, vanilla-5)
prep_in(stir-1, flavoring-6)
num(peanut_butter-10, 1\/2-8)
nn(peanut_butter-10, cup-9)
conj_and(flavoring-6, peanut_butter-10)
appos(peanut_butter-10, optional-12)
num(cup-17, 2-16)
npadvmod(uncooked-18, cup-17)
amod(oat-19, uncooked-18)
conj_and(flavoring-6, oat-19)
has_pos(stir-1,VB)
has_pos(2-3,CD)
has_pos(teaspoon-4,NN)
has_pos(vanilla-5,NN)
has_pos(flavoring-6,NN)
has_pos(1\/2-8,CD)
has_pos(cup-9,NN)
has_pos(peanut_butter-10,NN)
has_pos(optional-12,NNP)
has_pos(2-16,CD)
has_pos(cup-17,NN)
has_pos(uncooked-18,JJ)
has_pos(oat-19,NN)
has_sense(2-3, null)
has_sense(1\/2-8, null)
has_sense(2-16, null)
---
// do not stir mixture at this point .
has_sense(do-1,do-1-sense)
is_a(do-1-sense,perform.v.01)
has_sense(not-2,not-2-sense)
is_a(not-2-sense,not.r.01)
has_sense(stir-3,stir-3-sense)
is_a(stir-3-sense,stir.v.01)
has_sense(mixture-4,mixture-4-sense)
is_a(mixture-4-sense,concoction.n.01)
has_sense(point-7,point-7-sense)
is_a(point-7-sense,point.n.06)
aux(stir-3, do-1)
neg(stir-3, not-2)
root(ROOT-0, stir-3)
dobj(stir-3, mixture-4)
det(point-7, this-6)
prep_at(stir-3, point-7)
has_pos(do-1,VB)
has_pos(not-2,RB)
has_pos(stir-3,VB)
has_pos(mixture-4,NN)
has_pos(this-6,DT)
has_pos(point-7,NN)
has_sense(this-6, null)
---
// stir until there be no lump .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(be-4,be-4-sense)
is_a(be-4-sense,be.v.01)
has_sense(lump-6,lump-6-sense)
is_a(lump-6-sense,hunk.n.02)
root(ROOT-0, stir-1)
mark(be-4, until-2)
expl(be-4, there-3)
advcl(stir-1, be-4)
det(lump-6, no-5)
nsubj(be-4, lump-6)
has_pos(stir-1,VB)
has_pos(until-2,IN)
has_pos(there-3,EX)
has_pos(be-4,VB)
has_pos(no-5,DT)
has_pos(lump-6,NN)
has_sense(there-3, null)
has_sense(until-2, null)
has_sense(no-5, null)
---
// add another 1 1\/2 to 2 cup flour and blend until too stiff to stir with a spoon .
has_sense(add-1,add-1-sense)
is_a(add-1-sense,add.v.01)
has_sense(cup-6,cup-6-sense)
is_a(cup-6-sense,cup.n.04)
has_sense(flour-7,flour-7-sense)
is_a(flour-7-sense,flour.n.01)
has_sense(blend-9,blend-9-sense)
is_a(blend-9-sense,blend.v.01)
has_sense(too-11,too-11-sense)
is_a(too-11-sense,excessively.r.01)
has_sense(stiff-12,stiff-12-sense)
is_a(stiff-12-sense,stiff.s.01)
has_sense(stir-14,stir-14-sense)
is_a(stir-14-sense,stir.v.01)
has_sense(spoon-17,spoon-17-sense)
is_a(spoon-17-sense,spoon.n.01)
root(ROOT-0, add-1)
det(flour-7, another-2)
number(2-5, 1 1\/2-3)
dep(2-5, to-4)
num(flour-7, 2-5)
nn(flour-7, cup-6)
dobj(add-1, flour-7)
conj_and(add-1, blend-9)
advmod(stiff-12, too-11)
prep_until(blend-9, stiff-12)
aux(stir-14, to-13)
dep(stiff-12, stir-14)
det(spoon-17, a-16)
prep_with(stir-14, spoon-17)
has_pos(add-1,VB)
has_pos(another-2,DT)
has_pos(1 1\/2-3,CD)
has_pos(to-4,TO)
has_pos(2-5,CD)
has_pos(cup-6,NN)
has_pos(flour-7,NN)
has_pos(blend-9,VB)
has_pos(too-11,RB)
has_pos(stiff-12,JJ)
has_pos(to-13,TO)
has_pos(stir-14,VB)
has_pos(a-16,DT)
has_pos(spoon-17,NN)
has_sense(another-2, null)
has_sense(a-16, null)
has_sense(2-5, null)
has_sense(to-4, null)
has_sense(1 1\/2-3, null)
has_sense(to-13, null)
---
// stir the pasta every now and then , taste when the color change from a dry yellow color to a soft white color .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(pasta-3,pasta-3-sense)
is_a(pasta-3-sense,pasta.n.02)
has_sense(now-5,now-5-sense)
is_a(now-5-sense,now.r.04)
has_sense(then-7,then-7-sense)
is_a(then-7-sense,then.r.01)
has_sense(taste-9,taste-9-sense)
is_a(taste-9-sense,sample.v.01)
has_sense(change-13,change-13-sense)
is_a(change-13-sense,change.v.02)
has_sense(dry-16,dry-16-sense)
is_a(dry-16-sense,dry.a.01)
has_sense(yellow-17,yellow-17-sense)
is_a(yellow-17-sense,yellow.s.01)
has_sense(soft-21,soft-21-sense)
is_a(soft-21-sense,soft.s.19)
has_sense(white-22,white-22-sense)
is_a(white-22-sense,white.a.01)
has_sense(color-23,color-23-sense)
is_a(color-23-sense,color.n.01)
ccomp(taste-9, stir-1)
det(pasta-3, the-2)
dobj(stir-1, pasta-3)
dep(now-5, every-4)
advmod(stir-1, now-5)
conj_and(now-5, then-7)
root(ROOT-0, taste-9)
advmod(change-13, when-10)
det(color-12, the-11)
nsubj(change-13, color-12)
advcl(taste-9, change-13)
det(color-18, a-15)
amod(color-18, dry-16)
amod(color-18, yellow-17)
prep_from(change-13, color-18)
det(color-23, a-20)
amod(color-23, soft-21)
amod(color-23, white-22)
prep_to(change-13, color-23)
has_pos(stir-1,VB)
has_pos(the-2,DT)
has_pos(pasta-3,NN)
has_pos(every-4,DT)
has_pos(now-5,RB)
has_pos(then-7,RB)
has_pos(taste-9,VBP)
has_pos(when-10,WRB)
has_pos(the-11,DT)
has_pos(color-12,NN)
has_pos(change-13,VBP)
has_pos(a-15,DT)
has_pos(dry-16,JJ)
has_pos(yellow-17,JJ)
has_pos(color-18,NN)
has_pos(a-20,DT)
has_pos(soft-21,JJ)
has_pos(white-22,JJ)
has_pos(color-23,NN)
has_sense(a-15, null)
has_sense(the-2, null)
has_sense(every-4, null)
has_sense(color-18, null)
has_sense(color-12, null)
has_sense(a-20, null)
has_sense(when-10, null)
has_sense(the-11, null)
---
// Stir the finished coffee and the caramel together well .
has_sense(finished-3,finished-3-sense)
is_a(finished-3-sense,finished.a.01)
has_sense(coffee-4,coffee-4-sense)
is_a(coffee-4-sense,coffee.n.01)
has_sense(caramel-7,caramel-7-sense)
is_a(caramel-7-sense,caramel.n.02)
has_sense(together-8,together-8-sense)
is_a(together-8-sense,together.r.02)
has_sense(well-9,well-9-sense)
is_a(well-9-sense,well.r.02)
root(ROOT-0, Stir-1)
det(coffee-4, the-2)
amod(coffee-4, finished-3)
dobj(Stir-1, coffee-4)
det(caramel-7, the-6)
conj_and(coffee-4, caramel-7)
advmod(well-9, together-8)
advmod(Stir-1, well-9)
has_pos(Stir-1,VB)
has_pos(the-2,DT)
has_pos(finished-3,JJ)
has_pos(coffee-4,NN)
has_pos(the-6,DT)
has_pos(caramel-7,NN)
has_pos(together-8,RB)
has_pos(well-9,RB)
has_sense(Stir-1, null)
has_sense(the-6, null)
has_sense(the-2, null)
---
// stir ingredient and cover with lid .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(ingredient-2,ingredient-2-sense)
is_a(ingredient-2-sense,ingredient.n.03)
has_sense(cover-4,cover-4-sense)
is_a(cover-4-sense,cover.v.01)
has_sense(lid-6,lid-6-sense)
is_a(lid-6-sense,lid.n.02)
root(ROOT-0, stir-1)
dobj(stir-1, ingredient-2)
conj_and(stir-1, cover-4)
prep_with(cover-4, lid-6)
has_pos(stir-1,VB)
has_pos(ingredient-2,NN)
has_pos(cover-4,VB)
has_pos(lid-6,NN)
---
// stir now and then .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(now-2,now-2-sense)
is_a(now-2-sense,now.r.01)
has_sense(then-4,then-4-sense)
is_a(then-4-sense,then.r.01)
root(ROOT-0, stir-1)
advmod(stir-1, now-2)
conj_and(now-2, then-4)
has_pos(stir-1,VB)
has_pos(now-2,RB)
has_pos(then-4,RB)
---
// Stir everything with a spoon .
has_sense(spoon-5,spoon-5-sense)
is_a(spoon-5-sense,spoon.n.01)
root(ROOT-0, Stir-1)
dobj(Stir-1, everything-2)
det(spoon-5, a-4)
prep_with(Stir-1, spoon-5)
has_pos(Stir-1,VB)
has_pos(everything-2,NN)
has_pos(a-4,DT)
has_pos(spoon-5,NN)
has_sense(Stir-1, null)
has_sense(everything-2, null)
has_sense(a-4, null)
---
// stir in basil and remove from heat .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(basil-3,basil-3-sense)
is_a(basil-3-sense,basil.n.03)
has_sense(remove-5,remove-5-sense)
is_a(remove-5-sense,remove.v.01)
has_sense(heat-7,heat-7-sense)
is_a(heat-7-sense,hotness.n.01)
root(ROOT-0, stir-1)
prep_in(stir-1, basil-3)
conj_and(stir-1, remove-5)
prep_from(remove-5, heat-7)
has_pos(stir-1,VB)
has_pos(basil-3,NN)
has_pos(remove-5,VB)
has_pos(heat-7,NN)
---
// Stir in all ingredient except the chicken and paprika .
has_sense(ingredient-4,ingredient-4-sense)
is_a(ingredient-4-sense,ingredient.n.03)
has_sense(chicken-7,chicken-7-sense)
is_a(chicken-7-sense,chicken.n.01)
has_sense(paprika-9,paprika-9-sense)
is_a(paprika-9-sense,paprika.n.02)
root(ROOT-0, Stir-1)
det(ingredient-4, all-3)
prep_in(Stir-1, ingredient-4)
det(chicken-7, the-6)
prep_except(Stir-1, chicken-7)
conj_and(chicken-7, paprika-9)
has_pos(Stir-1,NNP)
has_pos(all-3,DT)
has_pos(ingredient-4,NN)
has_pos(the-6,DT)
has_pos(chicken-7,NN)
has_pos(paprika-9,NN)
has_sense(the-6, null)
has_sense(Stir-1, null)
has_sense(all-3, null)
---
// use a fork to stir the spaghetti for a few second , then allow the water to return to boil .
has_sense(use-1,use-1-sense)
is_a(use-1-sense,use.v.01)
has_sense(fork-3,fork-3-sense)
is_a(fork-3-sense,fork.n.01)
has_sense(stir-5,stir-5-sense)
is_a(stir-5-sense,stir.v.01)
has_sense(spaghetti-7,spaghetti-7-sense)
is_a(spaghetti-7-sense,spaghetti.n.02)
has_sense(few-10,few-10-sense)
is_a(few-10-sense,few.a.01)
has_sense(second-11,second-11-sense)
is_a(second-11-sense,second.n.01)
has_sense(then-13,then-13-sense)
is_a(then-13-sense,then.r.01)
has_sense(allow-14,allow-14-sense)
is_a(allow-14-sense,let.v.01)
has_sense(water-16,water-16-sense)
is_a(water-16-sense,water.n.06)
has_sense(return-18,return-18-sense)
is_a(return-18-sense,return.v.01)
has_sense(boil-20,boil-20-sense)
is_a(boil-20-sense,boiling_point.n.01)
root(ROOT-0, use-1)
det(fork-3, a-2)
dobj(use-1, fork-3)
aux(stir-5, to-4)
infmod(fork-3, stir-5)
det(spaghetti-7, the-6)
dobj(stir-5, spaghetti-7)
det(second-11, a-9)
amod(second-11, few-10)
prep_for(stir-5, second-11)
advmod(use-1, then-13)
dep(use-1, allow-14)
det(water-16, the-15)
dobj(allow-14, water-16)
aux(return-18, to-17)
infmod(water-16, return-18)
prep_to(return-18, boil-20)
has_pos(use-1,VB)
has_pos(a-2,DT)
has_pos(fork-3,NN)
has_pos(to-4,TO)
has_pos(stir-5,VB)
has_pos(the-6,DT)
has_pos(spaghetti-7,NNS)
has_pos(a-9,DT)
has_pos(few-10,JJ)
has_pos(second-11,NN)
has_pos(then-13,RB)
has_pos(allow-14,VB)
has_pos(the-15,DT)
has_pos(water-16,NN)
has_pos(to-17,TO)
has_pos(return-18,VB)
has_pos(boil-20,NN)
has_sense(the-6, null)
has_sense(to-4, null)
has_sense(a-9, null)
has_sense(to-17, null)
has_sense(the-15, null)
has_sense(a-2, null)
---
// stir gently and leave to activate for about five or ten minutes .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(gently-2,gently-2-sense)
is_a(gently-2-sense,gently.r.02)
has_sense(leave-4,leave-4-sense)
is_a(leave-4-sense,leave.v.04)
has_sense(activate-6,activate-6-sense)
is_a(activate-6-sense,trip.v.04)
has_sense(about-8,about-8-sense)
is_a(about-8-sense,approximately.r.01)
root(ROOT-0, stir-1)
advmod(stir-1, gently-2)
conj_and(stir-1, leave-4)
aux(activate-6, to-5)
xcomp(leave-4, activate-6)
quantmod(five-9, about-8)
num(minutes-12, five-9)
conj_or(five-9, ten-11)
prep_for(activate-6, minutes-12)
has_pos(stir-1,VB)
has_pos(gently-2,RB)
has_pos(leave-4,VB)
has_pos(to-5,TO)
has_pos(activate-6,VB)
has_pos(about-8,RB)
has_pos(five-9,CD)
has_pos(ten-11,CD)
has_pos(minutes-12,NNS)
has_sense(five-9, null)
has_sense(to-5, null)
has_sense(ten-11, null)
has_sense(minutes-12, null)
---
// stir one more time , quickly and only until all ingredient become smooth .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.08)
has_sense(time-4,time-4-sense)
is_a(time-4-sense,time.n.01)
has_sense(quickly-6,quickly-6-sense)
is_a(quickly-6-sense,quickly.r.01)
has_sense(only-8,only-8-sense)
is_a(only-8-sense,merely.r.01)
has_sense(ingredient-11,ingredient-11-sense)
is_a(ingredient-11-sense,ingredient.n.03)
has_sense(become-12,become-12-sense)
is_a(become-12-sense,become.v.01)
has_sense(smooth-13,smooth-13-sense)
is_a(smooth-13-sense,smooth.a.01)
root(ROOT-0, stir-1)
num(time-4, one-2)
amod(time-4, more-3)
dobj(stir-1, time-4)
advmod(stir-1, quickly-6)
conj_and(quickly-6, only-8)
mark(smooth-13, until-9)
det(ingredient-11, all-10)
nsubj(smooth-13, ingredient-11)
cop(smooth-13, become-12)
advcl(stir-1, smooth-13)
has_pos(stir-1,VB)
has_pos(one-2,CD)
has_pos(more-3,JJR)
has_pos(time-4,NN)
has_pos(quickly-6,RB)
has_pos(only-8,RB)
has_pos(until-9,IN)
has_pos(all-10,DT)
has_pos(ingredient-11,NN)
has_pos(become-12,VBP)
has_pos(smooth-13,JJ)
has_sense(more-3, null)
has_sense(all-10, null)
has_sense(one-2, null)
has_sense(until-9, null)
---
// stir the eggs and then add the noodle .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(eggs-3,eggs-3-sense)
is_a(eggs-3-sense,egg.n.02)
has_sense(then-5,then-5-sense)
is_a(then-5-sense,then.r.01)
has_sense(add-6,add-6-sense)
is_a(add-6-sense,add.v.01)
has_sense(noodle-8,noodle-8-sense)
is_a(noodle-8-sense,noodle.n.01)
root(ROOT-0, stir-1)
det(eggs-3, the-2)
dobj(stir-1, eggs-3)
advmod(add-6, then-5)
conj_and(stir-1, add-6)
det(noodle-8, the-7)
dobj(add-6, noodle-8)
has_pos(stir-1,VB)
has_pos(the-2,DT)
has_pos(eggs-3,NNS)
has_pos(then-5,RB)
has_pos(add-6,VB)
has_pos(the-7,DT)
has_pos(noodle-8,NN)
has_sense(the-7, null)
has_sense(the-2, null)
---
// stir in the raisin -LRB- sultana -RRB- and the zucchini .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.08)
has_sense(raisin-4,raisin-4-sense)
is_a(raisin-4-sense,raisin.n.01)
has_sense(sultana-6,sultana-6-sense)
is_a(sultana-6-sense,sultana.n.01)
has_sense(zucchini-10,zucchini-10-sense)
is_a(zucchini-10-sense,zucchini.n.02)
root(ROOT-0, stir-1)
det(raisin-4, the-3)
prep_in(stir-1, raisin-4)
appos(raisin-4, sultana-6)
det(zucchini-10, the-9)
conj_and(raisin-4, zucchini-10)
has_pos(stir-1,VB)
has_pos(the-3,DT)
has_pos(raisin-4,NN)
has_pos(sultana-6,NNP)
has_pos(the-9,DT)
has_pos(zucchini-10,NN)
has_sense(the-3, null)
has_sense(the-9, null)
---
// stir in the cheese
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.08)
has_sense(cheese-4,cheese-4-sense)
is_a(cheese-4-sense,cheese.n.01)
root(ROOT-0, stir-1)
det(cheese-4, the-3)
prep_in(stir-1, cheese-4)
has_pos(stir-1,VB)
has_pos(the-3,DT)
has_pos(cheese-4,NN)
has_sense(the-3, null)
---
// Stir in the milk .
has_sense(milk-4,milk-4-sense)
is_a(milk-4-sense,milk.n.01)
root(ROOT-0, Stir-1)
det(milk-4, the-3)
prep_in(Stir-1, milk-4)
has_pos(Stir-1,NNP)
has_pos(the-3,DT)
has_pos(milk-4,NN)
has_sense(Stir-1, null)
has_sense(the-3, null)
---
// give it a little stir and mix it very well .
has_sense(give-1,give-1-sense)
is_a(give-1-sense,give.v.01)
has_sense(little-4,little-4-sense)
is_a(little-4-sense,small.a.01)
has_sense(mix-7,mix-7-sense)
is_a(mix-7-sense,blend.v.03)
has_sense(very-9,very-9-sense)
is_a(very-9-sense,very.r.01)
has_sense(well-10,well-10-sense)
is_a(well-10-sense,well.r.02)
root(ROOT-0, give-1)
iobj(give-1, it-2)
det(stir-5, a-3)
amod(stir-5, little-4)
dobj(give-1, stir-5)
conj_and(give-1, mix-7)
dobj(mix-7, it-8)
advmod(well-10, very-9)
advmod(mix-7, well-10)
has_pos(give-1,VB)
has_pos(it-2,PRP)
has_pos(a-3,DT)
has_pos(little-4,JJ)
has_pos(stir-5,NN)
has_pos(mix-7,VB)
has_pos(it-8,PRP)
has_pos(very-9,RB)
has_pos(well-10,RB)
has_sense(stir-5, null)
has_sense(it-2, null)
has_sense(a-3, null)
has_sense(it-8, null)
---
// add more flour until this stage be reach , taking care to stir the batter as little as possible .
has_sense(add-1,add-1-sense)
is_a(add-1-sense,add.v.01)
has_sense(more-2,more-2-sense)
is_a(more-2-sense,more.a.01)
has_sense(flour-3,flour-3-sense)
is_a(flour-3-sense,flour.n.01)
has_sense(stage-6,stage-6-sense)
is_a(stage-6-sense,degree.n.02)
has_sense(be-7,be-7-sense)
is_a(be-7-sense,be.v.01)
has_sense(reach-8,reach-8-sense)
is_a(reach-8-sense,reach.v.02)
has_sense(stir-13,stir-13-sense)
is_a(stir-13-sense,stir.v.01)
has_sense(batter-15,batter-15-sense)
is_a(batter-15-sense,batter.n.02)
has_sense(little-17,little-17-sense)
is_a(little-17-sense,little.r.01)
has_sense(as-18,as-18-sense)
is_a(as-18-sense,equally.r.01)
has_sense(possible-19,possible-19-sense)
is_a(possible-19-sense,possible.a.01)
root(ROOT-0, add-1)
amod(flour-3, more-2)
dobj(add-1, flour-3)
mark(be-7, until-4)
det(stage-6, this-5)
nsubj(be-7, stage-6)
advcl(add-1, be-7)
ccomp(be-7, reach-8)
dep(reach-8, taking-10)
dobj(taking-10, care-11)
aux(stir-13, to-12)
xcomp(taking-10, stir-13)
det(batter-15, the-14)
dobj(stir-13, batter-15)
prep(stir-13, as-16)
pobj(as-16, little-17)
advmod(possible-19, as-18)
dep(taking-10, possible-19)
has_pos(add-1,VB)
has_pos(more-2,JJR)
has_pos(flour-3,NN)
has_pos(until-4,IN)
has_pos(this-5,DT)
has_pos(stage-6,NN)
has_pos(be-7,VB)
has_pos(reach-8,VB)
has_pos(taking-10,VBG)
has_pos(care-11,NN)
has_pos(to-12,TO)
has_pos(stir-13,VB)
has_pos(the-14,DT)
has_pos(batter-15,NN)
has_pos(as-16,IN)
has_pos(little-17,RB)
has_pos(as-18,RB)
has_pos(possible-19,JJ)
has_sense(taking-10, null)
has_sense(this-5, null)
has_sense(as-16, null)
has_sense(to-12, null)
has_sense(care-11, null)
has_sense(the-14, null)
has_sense(until-4, null)
---
// stir in the egg , salt , and pepper .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.08)
has_sense(egg-4,egg-4-sense)
is_a(egg-4-sense,egg.n.02)
has_sense(salt-6,salt-6-sense)
is_a(salt-6-sense,salt.n.02)
has_sense(pepper-9,pepper-9-sense)
is_a(pepper-9-sense,pepper.n.03)
root(ROOT-0, stir-1)
det(egg-4, the-3)
prep_in(stir-1, egg-4)
conj_and(egg-4, salt-6)
conj_and(egg-4, pepper-9)
has_pos(stir-1,VB)
has_pos(the-3,DT)
has_pos(egg-4,NN)
has_pos(salt-6,NN)
has_pos(pepper-9,NN)
has_sense(the-3, null)
---
// stir well and add to the soup .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(well-2,well-2-sense)
is_a(well-2-sense,well.r.02)
has_sense(add-4,add-4-sense)
is_a(add-4-sense,add.v.01)
has_sense(soup-7,soup-7-sense)
is_a(soup-7-sense,soup.n.01)
root(ROOT-0, stir-1)
advmod(stir-1, well-2)
conj_and(stir-1, add-4)
det(soup-7, the-6)
prep_to(add-4, soup-7)
has_pos(stir-1,VB)
has_pos(well-2,RB)
has_pos(add-4,VB)
has_pos(the-6,DT)
has_pos(soup-7,NN)
has_sense(the-6, null)
---
// alternatively , you can add cold liquid , stir the oatmeal around , and stick it in the microwave for a minute or two .
has_sense(alternatively-1,alternatively-1-sense)
is_a(alternatively-1-sense,alternatively.r.01)
has_sense(add-5,add-5-sense)
is_a(add-5-sense,add.v.01)
has_sense(cold-6,cold-6-sense)
is_a(cold-6-sense,cold.a.01)
has_sense(stir-9,stir-9-sense)
is_a(stir-9-sense,stir.v.01)
has_sense(oatmeal-11,oatmeal-11-sense)
is_a(oatmeal-11-sense,oatmeal.n.02)
has_sense(stick-15,stick-15-sense)
is_a(stick-15-sense,lodge.v.02)
has_sense(microwave-19,microwave-19-sense)
is_a(microwave-19-sense,microwave.n.02)
has_sense(minute-22,minute-22-sense)
is_a(minute-22-sense,minute.n.01)
advmod(add-5, alternatively-1)
nsubj(add-5, you-3)
aux(add-5, can-4)
root(ROOT-0, add-5)
amod(liquid-7, cold-6)
dobj(add-5, liquid-7)
conj_and(add-5, stir-9)
det(oatmeal-11, the-10)
dobj(stir-9, oatmeal-11)
advmod(stir-9, around-12)
conj_and(add-5, stick-15)
dobj(stick-15, it-16)
det(microwave-19, the-18)
prep_in(stick-15, microwave-19)
det(minute-22, a-21)
prep_for(microwave-19, minute-22)
conj_or(minute-22, two-24)
has_pos(alternatively-1,RB)
has_pos(you-3,PRP)
has_pos(can-4,MD)
has_pos(add-5,VB)
has_pos(cold-6,JJ)
has_pos(liquid-7,NN)
has_pos(stir-9,VB)
has_pos(the-10,DT)
has_pos(oatmeal-11,NN)
has_pos(around-12,RB)
has_pos(stick-15,VB)
has_pos(it-16,PRP)
has_pos(the-18,DT)
has_pos(microwave-19,NN)
has_pos(a-21,DT)
has_pos(minute-22,NN)
has_pos(two-24,CD)
has_sense(it-16, null)
has_sense(you-3, null)
has_sense(two-24, null)
has_sense(around-12, null)
has_sense(a-21, null)
has_sense(the-18, null)
has_sense(liquid-7, null)
has_sense(can-4, null)
has_sense(the-10, null)
---
// stir occasionally for 5-10 minutes .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(occasionally-2,occasionally-2-sense)
is_a(occasionally-2-sense,occasionally.r.01)
root(ROOT-0, stir-1)
advmod(stir-1, occasionally-2)
amod(minutes-5, 5-10-4)
prep_for(stir-1, minutes-5)
has_pos(stir-1,VB)
has_pos(occasionally-2,RB)
has_pos(5-10-4,JJ)
has_pos(minutes-5,NNS)
has_sense(minutes-5, null)
has_sense(5-10-4, null)
---
// stir it around .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(around-3,around-3-sense)
is_a(around-3-sense,around.r.04)
root(ROOT-0, stir-1)
dobj(stir-1, it-2)
advmod(stir-1, around-3)
has_pos(stir-1,VB)
has_pos(it-2,PRP)
has_pos(around-3,RB)
has_sense(it-2, null)
---
// stir through well .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(well-3,well-3-sense)
is_a(well-3-sense,well.r.02)
root(ROOT-0, stir-1)
prep(stir-1, through-2)
pcomp(through-2, well-3)
has_pos(stir-1,VB)
has_pos(through-2,IN)
has_pos(well-3,RB)
has_sense(through-2, null)
---
// then stir once more .
has_sense(then-1,then-1-sense)
is_a(then-1-sense,then.r.01)
has_sense(stir-2,stir-2-sense)
is_a(stir-2-sense,stir.v.01)
has_sense(once-3,once-3-sense)
is_a(once-3-sense,once.r.01)
has_sense(more-4,more-4-sense)
is_a(more-4-sense,more.r.02)
advmod(stir-2, then-1)
root(ROOT-0, stir-2)
advmod(more-4, once-3)
advmod(stir-2, more-4)
has_pos(then-1,RB)
has_pos(stir-2,VB)
has_pos(once-3,RB)
has_pos(more-4,RBR)
---
// remove the pot from the heat , and stir in the lemon_juice and the light corn_syrup .
has_sense(remove-1,remove-1-sense)
is_a(remove-1-sense,remove.v.01)
has_sense(pot-3,pot-3-sense)
is_a(pot-3-sense,pot.n.01)
has_sense(heat-6,heat-6-sense)
is_a(heat-6-sense,hotness.n.01)
has_sense(stir-9,stir-9-sense)
is_a(stir-9-sense,stir.v.08)
has_sense(lemon_juice-12,lemon_juice-12-sense)
is_a(lemon_juice-12-sense,lemon_juice.n.01)
has_sense(corn_syrup-16,corn_syrup-16-sense)
is_a(corn_syrup-16-sense,corn_syrup.n.01)
root(ROOT-0, remove-1)
det(pot-3, the-2)
dobj(remove-1, pot-3)
det(heat-6, the-5)
prep_from(remove-1, heat-6)
conj_and(remove-1, stir-9)
det(lemon_juice-12, the-11)
prep_in(stir-9, lemon_juice-12)
det(corn_syrup-16, the-14)
amod(corn_syrup-16, light-15)
conj_and(lemon_juice-12, corn_syrup-16)
has_pos(remove-1,VB)
has_pos(the-2,DT)
has_pos(pot-3,NN)
has_pos(the-5,DT)
has_pos(heat-6,NN)
has_pos(stir-9,VB)
has_pos(the-11,DT)
has_pos(lemon_juice-12,NN)
has_pos(the-14,DT)
has_pos(light-15,JJ)
has_pos(corn_syrup-16,NN)
has_sense(the-5, null)
has_sense(light-15, null)
has_sense(the-2, null)
has_sense(the-14, null)
has_sense(the-11, null)
---
// stir now and then to ensure all the fruit be cover .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(now-2,now-2-sense)
is_a(now-2-sense,now.r.04)
has_sense(then-4,then-4-sense)
is_a(then-4-sense,then.r.01)
has_sense(ensure-6,ensure-6-sense)
is_a(ensure-6-sense,guarantee.v.02)
has_sense(fruit-9,fruit-9-sense)
is_a(fruit-9-sense,fruit.n.01)
has_sense(be-10,be-10-sense)
is_a(be-10-sense,be.v.01)
has_sense(cover-11,cover-11-sense)
is_a(cover-11-sense,cover.v.01)
root(ROOT-0, stir-1)
advmod(stir-1, now-2)
advmod(ensure-6, then-4)
aux(ensure-6, to-5)
conj_and(stir-1, ensure-6)
predet(fruit-9, all-7)
det(fruit-9, the-8)
nsubj(cover-11, fruit-9)
cop(cover-11, be-10)
ccomp(ensure-6, cover-11)
has_pos(stir-1,VB)
has_pos(now-2,RB)
has_pos(then-4,RB)
has_pos(to-5,TO)
has_pos(ensure-6,VB)
has_pos(all-7,PDT)
has_pos(the-8,DT)
has_pos(fruit-9,NN)
has_pos(be-10,VB)
has_pos(cover-11,NN)
has_sense(all-7, null)
has_sense(to-5, null)
has_sense(the-8, null)
---
// When the rice be cooked and of a creamy consistency , stir in the parmesan and the thyme and remove from the heat .
has_sense(rice-3,rice-3-sense)
is_a(rice-3-sense,rice.n.01)
has_sense(be-4,be-4-sense)
is_a(be-4-sense,be.v.01)
has_sense(creamy-9,creamy-9-sense)
is_a(creamy-9-sense,creamy.s.02)
has_sense(consistency-10,consistency-10-sense)
is_a(consistency-10-sense,consistency.n.01)
has_sense(stir-12,stir-12-sense)
is_a(stir-12-sense,stir.v.01)
has_sense(parmesan-15,parmesan-15-sense)
is_a(parmesan-15-sense,parmesan.n.01)
has_sense(thyme-18,thyme-18-sense)
is_a(thyme-18-sense,thyme.n.02)
has_sense(remove-20,remove-20-sense)
is_a(remove-20-sense,remove.v.01)
has_sense(heat-23,heat-23-sense)
is_a(heat-23-sense,hotness.n.01)
advmod(cooked-5, When-1)
det(rice-3, the-2)
nsubjpass(cooked-5, rice-3)
auxpass(cooked-5, be-4)
advcl(stir-12, cooked-5)
dep(of-7, and-6)
dep(cooked-5, of-7)
det(consistency-10, a-8)
amod(consistency-10, creamy-9)
pobj(of-7, consistency-10)
root(ROOT-0, stir-12)
det(parmesan-15, the-14)
prep_in(stir-12, parmesan-15)
det(thyme-18, the-17)
conj_and(parmesan-15, thyme-18)
conj_and(stir-12, remove-20)
det(heat-23, the-22)
prep_from(remove-20, heat-23)
has_pos(When-1,WRB)
has_pos(the-2,DT)
has_pos(rice-3,NN)
has_pos(be-4,VB)
has_pos(cooked-5,VBN)
has_pos(and-6,CC)
has_pos(of-7,IN)
has_pos(a-8,DT)
has_pos(creamy-9,JJ)
has_pos(consistency-10,NN)
has_pos(stir-12,VB)
has_pos(the-14,DT)
has_pos(parmesan-15,NN)
has_pos(the-17,DT)
has_pos(thyme-18,NN)
has_pos(remove-20,VB)
has_pos(the-22,DT)
has_pos(heat-23,NN)
has_sense(cooked-5, null)
has_sense(the-2, null)
has_sense(When-1, null)
has_sense(a-8, null)
has_sense(the-22, null)
has_sense(of-7, null)
has_sense(the-17, null)
has_sense(the-14, null)
has_sense(and-6, null)
---
// Stir in 2\/3 of the cream_cheese .
has_sense(cream_cheese-6,cream_cheese-6-sense)
is_a(cream_cheese-6-sense,cream_cheese.n.01)
root(ROOT-0, Stir-1)
prep_in(Stir-1, 2\/3-3)
det(cream_cheese-6, the-5)
prep_of(Stir-1, cream_cheese-6)
has_pos(Stir-1,NNP)
has_pos(2\/3-3,NNP)
has_pos(the-5,DT)
has_pos(cream_cheese-6,NN)
has_sense(the-5, null)
has_sense(2\/3-3, null)
has_sense(Stir-1, null)
---
// stir them around until they be coated with the syrup .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(be-6,be-6-sense)
is_a(be-6-sense,be.v.01)
has_sense(syrup-10,syrup-10-sense)
is_a(syrup-10-sense,syrup.n.01)
root(ROOT-0, stir-1)
dobj(stir-1, them-2)
prt(stir-1, around-3)
mark(coated-7, until-4)
nsubjpass(coated-7, they-5)
auxpass(coated-7, be-6)
advcl(stir-1, coated-7)
det(syrup-10, the-9)
prep_with(coated-7, syrup-10)
has_pos(stir-1,VB)
has_pos(them-2,PRP)
has_pos(around-3,RP)
has_pos(until-4,IN)
has_pos(they-5,PRP)
has_pos(be-6,VB)
has_pos(coated-7,VBN)
has_pos(the-9,DT)
has_pos(syrup-10,NN)
has_sense(they-5, null)
has_sense(them-2, null)
has_sense(the-9, null)
has_sense(around-3, null)
has_sense(until-4, null)
has_sense(coated-7, null)
---
// use a ladle , add a cup or two of simmer broth to the rice , then stir the rice until it have absorb the broth .
has_sense(use-1,use-1-sense)
is_a(use-1-sense,use.v.01)
has_sense(ladle-3,ladle-3-sense)
is_a(ladle-3-sense,ladle.n.01)
has_sense(add-5,add-5-sense)
is_a(add-5-sense,add.v.01)
has_sense(cup-7,cup-7-sense)
is_a(cup-7-sense,cup.n.02)
has_sense(simmer-11,simmer-11-sense)
is_a(simmer-11-sense,simmer.v.01)
has_sense(broth-12,broth-12-sense)
is_a(broth-12-sense,broth.n.01)
has_sense(rice-15,rice-15-sense)
is_a(rice-15-sense,rice.n.01)
has_sense(then-17,then-17-sense)
is_a(then-17-sense,then.r.01)
has_sense(stir-18,stir-18-sense)
is_a(stir-18-sense,stir.v.01)
has_sense(rice-20,rice-20-sense)
is_a(rice-20-sense,rice.n.01)
has_sense(have-23,have-23-sense)
is_a(have-23-sense,have.v.01)
has_sense(absorb-24,absorb-24-sense)
is_a(absorb-24-sense,absorb.v.04)
has_sense(broth-26,broth-26-sense)
is_a(broth-26-sense,broth.n.01)
root(ROOT-0, use-1)
det(ladle-3, a-2)
dobj(use-1, ladle-3)
dep(use-1, add-5)
det(cup-7, a-6)
dobj(add-5, cup-7)
conj_or(cup-7, two-9)
nn(broth-12, simmer-11)
prep_of(two-9, broth-12)
det(rice-15, the-14)
prep_to(add-5, rice-15)
advmod(stir-18, then-17)
dep(use-1, stir-18)
det(rice-20, the-19)
dobj(stir-18, rice-20)
mark(have-23, until-21)
nsubj(have-23, it-22)
advcl(stir-18, have-23)
ccomp(have-23, absorb-24)
det(broth-26, the-25)
dobj(absorb-24, broth-26)
has_pos(use-1,VB)
has_pos(a-2,DT)
has_pos(ladle-3,NN)
has_pos(add-5,VB)
has_pos(a-6,DT)
has_pos(cup-7,NN)
has_pos(two-9,CD)
has_pos(simmer-11,NN)
has_pos(broth-12,NN)
has_pos(the-14,DT)
has_pos(rice-15,NN)
has_pos(then-17,RB)
has_pos(stir-18,VB)
has_pos(the-19,DT)
has_pos(rice-20,NN)
has_pos(until-21,IN)
has_pos(it-22,PRP)
has_pos(have-23,VBP)
has_pos(absorb-24,VB)
has_pos(the-25,DT)
has_pos(broth-26,NN)
has_sense(it-22, null)
has_sense(the-14, null)
has_sense(until-21, null)
has_sense(the-25, null)
has_sense(the-19, null)
has_sense(two-9, null)
has_sense(a-2, null)
has_sense(a-6, null)
---
// stir about 2 minutes .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(about-2,about-2-sense)
is_a(about-2-sense,approximately.r.01)
root(ROOT-0, stir-1)
quantmod(2-3, about-2)
num(minutes-4, 2-3)
dobj(stir-1, minutes-4)
has_pos(stir-1,VB)
has_pos(about-2,RB)
has_pos(2-3,CD)
has_pos(minutes-4,NNS)
has_sense(2-3, null)
has_sense(minutes-4, null)
---
// Stir in the water .
has_sense(water-4,water-4-sense)
is_a(water-4-sense,water.n.06)
root(ROOT-0, Stir-1)
det(water-4, the-3)
prep_in(Stir-1, water-4)
has_pos(Stir-1,NNP)
has_pos(the-3,DT)
has_pos(water-4,NN)
has_sense(Stir-1, null)
has_sense(the-3, null)
---
// do not stir but let stand while prepare the other ingredient .
has_sense(do-1,do-1-sense)
is_a(do-1-sense,perform.v.01)
has_sense(not-2,not-2-sense)
is_a(not-2-sense,not.r.01)
has_sense(stir-3,stir-3-sense)
is_a(stir-3-sense,stir.v.01)
has_sense(let-5,let-5-sense)
is_a(let-5-sense,let.v.05)
has_sense(prepare-8,prepare-8-sense)
is_a(prepare-8-sense,fix.v.12)
has_sense(other-10,other-10-sense)
is_a(other-10-sense,other.a.01)
has_sense(ingredient-11,ingredient-11-sense)
is_a(ingredient-11-sense,ingredient.n.03)
aux(stir-3, do-1)
neg(stir-3, not-2)
root(ROOT-0, stir-3)
conj_but(stir-3, let-5)
dobj(stir-3, stand-6)
mark(prepare-8, while-7)
advcl(stir-3, prepare-8)
det(ingredient-11, the-9)
amod(ingredient-11, other-10)
dobj(prepare-8, ingredient-11)
has_pos(do-1,VB)
has_pos(not-2,RB)
has_pos(stir-3,VB)
has_pos(let-5,VB)
has_pos(stand-6,NN)
has_pos(while-7,IN)
has_pos(prepare-8,VBP)
has_pos(the-9,DT)
has_pos(other-10,JJ)
has_pos(ingredient-11,NN)
has_sense(while-7, null)
has_sense(the-9, null)
has_sense(stand-6, null)
---
// add cooked chicken and stir until all of the chicken be coat .
has_sense(add-1,add-1-sense)
is_a(add-1-sense,add.v.01)
has_sense(cooked-2,cooked-2-sense)
is_a(cooked-2-sense,cooked.a.01)
has_sense(chicken-3,chicken-3-sense)
is_a(chicken-3-sense,chicken.n.01)
has_sense(stir-5,stir-5-sense)
is_a(stir-5-sense,stir.v.08)
has_sense(chicken-10,chicken-10-sense)
is_a(chicken-10-sense,chicken.n.01)
has_sense(be-11,be-11-sense)
is_a(be-11-sense,be.v.01)
has_sense(coat-12,coat-12-sense)
is_a(coat-12-sense,coat.v.01)
root(ROOT-0, add-1)
amod(chicken-3, cooked-2)
dobj(add-1, chicken-3)
conj_and(add-1, stir-5)
mark(coat-12, until-6)
nsubj(coat-12, all-7)
det(chicken-10, the-9)
prep_of(all-7, chicken-10)
cop(coat-12, be-11)
advcl(stir-5, coat-12)
has_pos(add-1,VB)
has_pos(cooked-2,JJ)
has_pos(chicken-3,NN)
has_pos(stir-5,VB)
has_pos(until-6,IN)
has_pos(all-7,DT)
has_pos(the-9,DT)
has_pos(chicken-10,NN)
has_pos(be-11,VB)
has_pos(coat-12,NN)
has_sense(the-9, null)
has_sense(all-7, null)
has_sense(until-6, null)
---
// add the remaining flour to the mixture and stir till smooth .
has_sense(add-1,add-1-sense)
is_a(add-1-sense,add.v.01)
has_sense(flour-4,flour-4-sense)
is_a(flour-4-sense,flour.n.01)
has_sense(mixture-7,mixture-7-sense)
is_a(mixture-7-sense,concoction.n.01)
has_sense(stir-9,stir-9-sense)
is_a(stir-9-sense,stir.v.01)
has_sense(smooth-11,smooth-11-sense)
is_a(smooth-11-sense,smooth.a.01)
root(ROOT-0, add-1)
det(flour-4, the-2)
amod(flour-4, remaining-3)
dobj(add-1, flour-4)
det(mixture-7, the-6)
prep_to(add-1, mixture-7)
conj_and(add-1, stir-9)
prep_till(stir-9, smooth-11)
has_pos(add-1,VB)
has_pos(the-2,DT)
has_pos(remaining-3,VBG)
has_pos(flour-4,NN)
has_pos(the-6,DT)
has_pos(mixture-7,NN)
has_pos(stir-9,VB)
has_pos(smooth-11,JJ)
has_sense(the-6, null)
has_sense(the-2, null)
has_sense(remaining-3, null)
---
// add the next cup when it be absorb continue to stir , but aim not to mash or stir furiously , its a gentle stir .
has_sense(add-1,add-1-sense)
is_a(add-1-sense,add.v.01)
has_sense(next-3,next-3-sense)
is_a(next-3-sense,following.s.02)
has_sense(be-7,be-7-sense)
is_a(be-7-sense,be.v.01)
has_sense(absorb-8,absorb-8-sense)
is_a(absorb-8-sense,absorb.v.04)
has_sense(continue-9,continue-9-sense)
is_a(continue-9-sense,continue.v.01)
has_sense(stir-11,stir-11-sense)
is_a(stir-11-sense,stir.v.01)
has_sense(aim-14,aim-14-sense)
is_a(aim-14-sense,aim.v.02)
has_sense(not-15,not-15-sense)
is_a(not-15-sense,not.r.01)
has_sense(stir-19,stir-19-sense)
is_a(stir-19-sense,stir.v.01)
has_sense(furiously-20,furiously-20-sense)
is_a(furiously-20-sense,furiously.r.02)
has_sense(gentle-24,gentle-24-sense)
is_a(gentle-24-sense,gentle.s.01)
root(ROOT-0, add-1)
det(cup-4, the-2)
amod(cup-4, next-3)
dobj(add-1, cup-4)
advmod(absorb-8, when-5)
nsubj(absorb-8, it-6)
aux(absorb-8, be-7)
advcl(add-1, absorb-8)
dep(absorb-8, continue-9)
aux(stir-11, to-10)
xcomp(continue-9, stir-11)
conj_but(stir-11, aim-14)
neg(mash-17, not-15)
aux(mash-17, to-16)
xcomp(aim-14, mash-17)
conj_or(mash-17, stir-19)
advmod(mash-17, furiously-20)
poss(stir-25, its-22)
dep(gentle-24, a-23)
amod(stir-25, gentle-24)
dobj(absorb-8, stir-25)
has_pos(add-1,VB)
has_pos(the-2,DT)
has_pos(next-3,JJ)
has_pos(cup-4,NN)
has_pos(when-5,WRB)
has_pos(it-6,PRP)
has_pos(be-7,VB)
has_pos(absorb-8,VB)
has_pos(continue-9,VB)
has_pos(to-10,TO)
has_pos(stir-11,VB)
has_pos(aim-14,VB)
has_pos(not-15,RB)
has_pos(to-16,TO)
has_pos(mash-17,VB)
has_pos(stir-19,VB)
has_pos(furiously-20,RB)
has_pos(its-22,PRP$)
has_pos(a-23,DT)
has_pos(gentle-24,JJ)
has_pos(stir-25,NN)
has_sense(the-2, null)
has_sense(when-5, null)
has_sense(cup-4, null)
has_sense(mash-17, null)
has_sense(stir-25, null)
has_sense(its-22, null)
has_sense(it-6, null)
has_sense(to-16, null)
has_sense(a-23, null)
has_sense(to-10, null)
---
// Stir in sesame_oil and orange_zest if desire .
has_sense(sesame_oil-3,sesame_oil-3-sense)
is_a(sesame_oil-3-sense,sesame_oil.n.01)
has_sense(orange_zest-5,orange_zest-5-sense)
is_a(orange_zest-5-sense,orange_zest.n.01)
has_sense(desire-7,desire-7-sense)
is_a(desire-7-sense,desire.v.01)
root(ROOT-0, Stir-1)
prep_in(Stir-1, sesame_oil-3)
conj_and(sesame_oil-3, orange_zest-5)
mark(desire-7, if-6)
advcl(Stir-1, desire-7)
has_pos(Stir-1,VB)
has_pos(sesame_oil-3,NN)
has_pos(orange_zest-5,NN)
has_pos(if-6,IN)
has_pos(desire-7,VBP)
has_sense(Stir-1, null)
has_sense(if-6, null)
---
// add egg and vanilla and stir well .
has_sense(add-1,add-1-sense)
is_a(add-1-sense,add.v.01)
has_sense(egg-2,egg-2-sense)
is_a(egg-2-sense,egg.n.02)
has_sense(vanilla-4,vanilla-4-sense)
is_a(vanilla-4-sense,vanilla.n.02)
has_sense(stir-6,stir-6-sense)
is_a(stir-6-sense,stir.v.08)
has_sense(well-7,well-7-sense)
is_a(well-7-sense,well.r.01)
root(ROOT-0, add-1)
dobj(add-1, egg-2)
conj_and(egg-2, vanilla-4)
conj_and(add-1, stir-6)
advmod(stir-6, well-7)
has_pos(add-1,VB)
has_pos(egg-2,NN)
has_pos(vanilla-4,NN)
has_pos(stir-6,VB)
has_pos(well-7,RB)
---
// Stir everything together well use a wooden_spoon .
has_sense(together-3,together-3-sense)
is_a(together-3-sense,together.r.02)
has_sense(well-4,well-4-sense)
is_a(well-4-sense,well.r.01)
has_sense(use-5,use-5-sense)
is_a(use-5-sense,use.v.01)
has_sense(wooden_spoon-7,wooden_spoon-7-sense)
is_a(wooden_spoon-7-sense,wooden_spoon.n.02)
nn(everything-2, Stir-1)
nsubj(use-5, everything-2)
advmod(well-4, together-3)
advmod(use-5, well-4)
root(ROOT-0, use-5)
det(wooden_spoon-7, a-6)
dobj(use-5, wooden_spoon-7)
has_pos(Stir-1,NNP)
has_pos(everything-2,NN)
has_pos(together-3,RB)
has_pos(well-4,RB)
has_pos(use-5,VBP)
has_pos(a-6,DT)
has_pos(wooden_spoon-7,NN)
has_sense(Stir-1, null)
has_sense(everything-2, null)
has_sense(a-6, null)
---
// add 1 cup of flour to wet mix -LRB- egg , water , oil , and salt -RRB- and stir with fork until it ? s well mixed .
has_sense(add-1,add-1-sense)
is_a(add-1-sense,add.v.01)
has_sense(cup-3,cup-3-sense)
is_a(cup-3-sense,cup.n.04)
has_sense(flour-5,flour-5-sense)
is_a(flour-5-sense,flour.n.01)
has_sense(wet-7,wet-7-sense)
is_a(wet-7-sense,wet.a.01)
has_sense(egg-10,egg-10-sense)
is_a(egg-10-sense,egg.n.02)
has_sense(water-12,water-12-sense)
is_a(water-12-sense,water.n.06)
has_sense(oil-14,oil-14-sense)
is_a(oil-14-sense,vegetable_oil.n.01)
has_sense(salt-17,salt-17-sense)
is_a(salt-17-sense,salt.n.02)
has_sense(stir-20,stir-20-sense)
is_a(stir-20-sense,stir.v.01)
has_sense(well-27,well-27-sense)
is_a(well-27-sense,well.r.02)
csubj(mixed-28, add-1)
num(cup-3, 1-2)
dobj(add-1, cup-3)
prep_of(cup-3, flour-5)
amod(mix-8, wet-7)
prep_to(add-1, mix-8)
dep(mix-8, egg-10)
nn(salt-17, water-12)
conj_and(salt-17, oil-14)
appos(egg-10, salt-17)
conj_and(add-1, stir-20)
prep_with(stir-20, fork-22)
mark(it-24, until-23)
advcl(stir-20, it-24)
cop(mixed-28, s-26)
advmod(mixed-28, well-27)
root(ROOT-0, mixed-28)
has_pos(add-1,VB)
has_pos(1-2,CD)
has_pos(cup-3,NN)
has_pos(flour-5,NN)
has_pos(wet-7,JJ)
has_pos(mix-8,NN)
has_pos(egg-10,NN)
has_pos(water-12,NN)
has_pos(oil-14,NN)
has_pos(salt-17,NN)
has_pos(stir-20,VB)
has_pos(fork-22,NN)
has_pos(until-23,IN)
has_pos(it-24,PRP)
has_pos(s-26,VBZ)
has_pos(well-27,RB)
has_pos(mixed-28,JJ)
has_sense(1-2, null)
has_sense(mixed-28, null)
has_sense(fork-22, null)
has_sense(mix-8, null)
has_sense(it-24, null)
has_sense(until-23, null)
has_sense(s-26, null)
---
// After roughly 5 minutes add the noodle -LRB- drain -RRB- , stir and cook for a couple of minutes .
has_sense(roughly-2,roughly-2-sense)
is_a(roughly-2-sense,approximately.r.01)
has_sense(add-5,add-5-sense)
is_a(add-5-sense,add.v.01)
has_sense(noodle-7,noodle-7-sense)
is_a(noodle-7-sense,noodle.n.01)
has_sense(drain-9,drain-9-sense)
is_a(drain-9-sense,drain.v.03)
has_sense(stir-12,stir-12-sense)
is_a(stir-12-sense,stir.v.08)
has_sense(cook-14,cook-14-sense)
is_a(cook-14-sense,cook.v.02)
has_sense(couple-17,couple-17-sense)
is_a(couple-17-sense,couple.n.03)
mark(add-5, After-1)
quantmod(5-3, roughly-2)
num(minutes-4, 5-3)
nsubj(add-5, minutes-4)
advcl(stir-12, add-5)
det(noodle-7, the-6)
dobj(add-5, noodle-7)
appos(noodle-7, drain-9)
root(ROOT-0, stir-12)
conj_and(stir-12, cook-14)
det(couple-17, a-16)
prep_for(cook-14, couple-17)
prep_of(couple-17, minutes-19)
has_pos(After-1,IN)
has_pos(roughly-2,RB)
has_pos(5-3,CD)
has_pos(minutes-4,NNS)
has_pos(add-5,VBP)
has_pos(the-6,DT)
has_pos(noodle-7,NN)
has_pos(drain-9,NN)
has_pos(stir-12,VB)
has_pos(cook-14,VB)
has_pos(a-16,DT)
has_pos(couple-17,NN)
has_pos(minutes-19,NNS)
has_sense(the-6, null)
has_sense(After-1, null)
has_sense(5-3, null)
has_sense(minutes-4, null)
has_sense(a-16, null)
has_sense(minutes-19, null)
---
// Stir very well but do n't allow to brown .
has_sense(very-2,very-2-sense)
is_a(very-2-sense,very.r.01)
has_sense(well-3,well-3-sense)
is_a(well-3-sense,well.r.02)
has_sense(but-4,but-4-sense)
is_a(but-4-sense,merely.r.01)
has_sense(do-5,do-5-sense)
is_a(do-5-sense,make.v.01)
has_sense(allow-7,allow-7-sense)
is_a(allow-7-sense,let.v.01)
has_sense(brown-9,brown-9-sense)
is_a(brown-9-sense,brown.s.01)
nsubj(allow-7, Stir-1)
advmod(but-4, very-2)
advmod(but-4, well-3)
advmod(allow-7, but-4)
aux(allow-7, do-5)
neg(allow-7, n't-6)
root(ROOT-0, allow-7)
prep_to(allow-7, brown-9)
has_pos(Stir-1,NNP)
has_pos(very-2,RB)
has_pos(well-3,RB)
has_pos(but-4,RB)
has_pos(do-5,VBP)
has_pos(n't-6,RB)
has_pos(allow-7,VB)
has_pos(brown-9,JJ)
has_sense(Stir-1, null)
has_sense(n't-6, null)
---
// If cool at room_temperature , or in the refrigerator , you must stir it more frequently .
has_sense(cool-2,cool-2-sense)
is_a(cool-2-sense,cool.v.01)
has_sense(room_temperature-4,room_temperature-4-sense)
is_a(room_temperature-4-sense,room_temperature.n.01)
has_sense(refrigerator-9,refrigerator-9-sense)
is_a(refrigerator-9-sense,refrigerator.n.01)
has_sense(more-15,more-15-sense)
is_a(more-15-sense,more.r.01)
has_sense(frequently-16,frequently-16-sense)
is_a(frequently-16-sense,frequently.r.01)
mark(cool-2, If-1)
advcl(stir-13, cool-2)
dep(cool-2, at-3)
pobj(at-3, room_temperature-4)
conj_or(at-3, in-7)
det(refrigerator-9, the-8)
pobj(in-7, refrigerator-9)
nsubj(stir-13, you-11)
aux(stir-13, must-12)
root(ROOT-0, stir-13)
dobj(stir-13, it-14)
advmod(frequently-16, more-15)
advmod(stir-13, frequently-16)
has_pos(If-1,IN)
has_pos(cool-2,JJ)
has_pos(at-3,IN)
has_pos(room_temperature-4,NN)
has_pos(in-7,IN)
has_pos(the-8,DT)
has_pos(refrigerator-9,NN)
has_pos(you-11,PRP)
has_pos(must-12,MD)
has_pos(stir-13,VB)
has_pos(it-14,PRP)
has_pos(more-15,RBR)
has_pos(frequently-16,RB)
has_sense(in-7, null)
has_sense(stir-13, null)
has_sense(the-8, null)
has_sense(it-14, null)
has_sense(at-3, null)
has_sense(must-12, null)
has_sense(If-1, null)
has_sense(you-11, null)
---
// pour 2 tablespoon of milk inside the bowl and stir well until it form a dough .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,decant.v.01)
has_sense(tablespoon-3,tablespoon-3-sense)
is_a(tablespoon-3-sense,tablespoon.n.01)
has_sense(milk-5,milk-5-sense)
is_a(milk-5-sense,milk.n.01)
has_sense(bowl-8,bowl-8-sense)
is_a(bowl-8-sense,bowl.n.01)
has_sense(stir-10,stir-10-sense)
is_a(stir-10-sense,stir.v.01)
has_sense(well-11,well-11-sense)
is_a(well-11-sense,well.r.01)
has_sense(form-14,form-14-sense)
is_a(form-14-sense,shape.v.03)
has_sense(dough-16,dough-16-sense)
is_a(dough-16-sense,dough.n.01)
root(ROOT-0, pour-1)
num(tablespoon-3, 2-2)
dobj(pour-1, tablespoon-3)
prep_of(tablespoon-3, milk-5)
det(bowl-8, the-7)
prep_inside(milk-5, bowl-8)
conj_and(pour-1, stir-10)
advmod(stir-10, well-11)
mark(form-14, until-12)
nsubj(form-14, it-13)
advcl(stir-10, form-14)
det(dough-16, a-15)
dobj(form-14, dough-16)
has_pos(pour-1,VB)
has_pos(2-2,CD)
has_pos(tablespoon-3,NN)
has_pos(milk-5,NN)
has_pos(the-7,DT)
has_pos(bowl-8,NN)
has_pos(stir-10,VB)
has_pos(well-11,RB)
has_pos(until-12,IN)
has_pos(it-13,PRP)
has_pos(form-14,VBP)
has_pos(a-15,DT)
has_pos(dough-16,NN)
has_sense(2-2, null)
has_sense(the-7, null)
has_sense(a-15, null)
has_sense(until-12, null)
has_sense(it-13, null)
---
// stir before serve and add salt and pepper to taste , or a little cream if desire for extra creaminess .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(serve-3,serve-3-sense)
is_a(serve-3-sense,serve.v.05)
has_sense(add-5,add-5-sense)
is_a(add-5-sense,add.v.01)
has_sense(salt-6,salt-6-sense)
is_a(salt-6-sense,salt.n.02)
has_sense(pepper-8,pepper-8-sense)
is_a(pepper-8-sense,pepper.n.03)
has_sense(taste-10,taste-10-sense)
is_a(taste-10-sense,taste.n.01)
has_sense(little-14,little-14-sense)
is_a(little-14-sense,little.a.02)
has_sense(cream-15,cream-15-sense)
is_a(cream-15-sense,cream.n.02)
has_sense(desire-17,desire-17-sense)
is_a(desire-17-sense,desire.v.01)
has_sense(extra-19,extra-19-sense)
is_a(extra-19-sense,excess.s.01)
has_sense(creaminess-20,creaminess-20-sense)
is_a(creaminess-20-sense,creaminess.n.01)
root(ROOT-0, stir-1)
advmod(stir-1, before-2)
dep(stir-1, serve-3)
conj_and(serve-3, add-5)
dobj(serve-3, salt-6)
conj_and(salt-6, pepper-8)
prep_to(salt-6, taste-10)
det(cream-15, a-13)
amod(cream-15, little-14)
conj_or(salt-6, cream-15)
prep_if(serve-3, desire-17)
amod(creaminess-20, extra-19)
prep_for(desire-17, creaminess-20)
has_pos(stir-1,VB)
has_pos(before-2,RB)
has_pos(serve-3,VB)
has_pos(add-5,VB)
has_pos(salt-6,NN)
has_pos(pepper-8,NN)
has_pos(taste-10,NN)
has_pos(a-13,DT)
has_pos(little-14,JJ)
has_pos(cream-15,NN)
has_pos(desire-17,NN)
has_pos(extra-19,JJ)
has_pos(creaminess-20,NNS)
has_sense(a-13, null)
has_sense(before-2, null)
---
// keep a close eye on them , as they burn easily , and stir them frequently .
has_sense(keep-1,keep-1-sense)
is_a(keep-1-sense,continue.v.01)
has_sense(close-3,close-3-sense)
is_a(close-3-sense,close.s.04)
has_sense(eye-4,eye-4-sense)
is_a(eye-4-sense,eye.n.03)
has_sense(burn-10,burn-10-sense)
is_a(burn-10-sense,burn.v.15)
has_sense(easily-11,easily-11-sense)
is_a(easily-11-sense,easily.r.01)
has_sense(stir-14,stir-14-sense)
is_a(stir-14-sense,stir.v.01)
has_sense(frequently-16,frequently-16-sense)
is_a(frequently-16-sense,frequently.r.01)
root(ROOT-0, keep-1)
det(eye-4, a-2)
amod(eye-4, close-3)
dobj(keep-1, eye-4)
prep_on(keep-1, them-6)
mark(burn-10, as-8)
nsubj(burn-10, they-9)
advcl(keep-1, burn-10)
advmod(burn-10, easily-11)
conj_and(keep-1, stir-14)
dobj(stir-14, them-15)
advmod(stir-14, frequently-16)
has_pos(keep-1,VB)
has_pos(a-2,DT)
has_pos(close-3,JJ)
has_pos(eye-4,NN)
has_pos(them-6,PRP)
has_pos(as-8,IN)
has_pos(they-9,PRP)
has_pos(burn-10,VBP)
has_pos(easily-11,RB)
has_pos(stir-14,VB)
has_pos(them-15,PRP)
has_pos(frequently-16,RB)
has_sense(as-8, null)
has_sense(them-6, null)
has_sense(they-9, null)
has_sense(them-15, null)
has_sense(a-2, null)
---
// Stir in the butter and vanilla .
has_sense(butter-4,butter-4-sense)
is_a(butter-4-sense,butter.n.01)
has_sense(vanilla-6,vanilla-6-sense)
is_a(vanilla-6-sense,vanilla.n.02)
root(ROOT-0, Stir-1)
det(butter-4, the-3)
prep_in(Stir-1, butter-4)
conj_and(butter-4, vanilla-6)
has_pos(Stir-1,NNP)
has_pos(the-3,DT)
has_pos(butter-4,NN)
has_pos(vanilla-6,NN)
has_sense(Stir-1, null)
has_sense(the-3, null)
---
// stir gently but well .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(well-4,well-4-sense)
is_a(well-4-sense,well.r.02)
root(ROOT-0, stir-1)
advmod(stir-1, gently-2)
conj_but(gently-2, well-4)
has_pos(stir-1,VB)
has_pos(gently-2,RB)
has_pos(well-4,RB)
has_sense(gently-2, null)
---
// stir gently to combine .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(gently-2,gently-2-sense)
is_a(gently-2-sense,gently.r.02)
has_sense(combine-4,combine-4-sense)
is_a(combine-4-sense,compound.v.05)
root(ROOT-0, stir-1)
advmod(stir-1, gently-2)
aux(combine-4, to-3)
xcomp(stir-1, combine-4)
has_pos(stir-1,VB)
has_pos(gently-2,RB)
has_pos(to-3,TO)
has_pos(combine-4,VB)
has_sense(to-3, null)
---
// place the frying_pan on the heat , add the oil , onion , rice and stir well .
has_sense(place-1,place-1-sense)
is_a(place-1-sense,put.v.01)
has_sense(frying_pan-3,frying_pan-3-sense)
is_a(frying_pan-3-sense,frying_pan.n.01)
has_sense(heat-6,heat-6-sense)
is_a(heat-6-sense,hotness.n.01)
has_sense(add-8,add-8-sense)
is_a(add-8-sense,add.v.01)
has_sense(oil-10,oil-10-sense)
is_a(oil-10-sense,vegetable_oil.n.01)
has_sense(rice-14,rice-14-sense)
is_a(rice-14-sense,rice.n.01)
has_sense(stir-16,stir-16-sense)
is_a(stir-16-sense,stir.v.01)
has_sense(well-17,well-17-sense)
is_a(well-17-sense,well.r.02)
root(ROOT-0, place-1)
det(frying_pan-3, the-2)
dobj(place-1, frying_pan-3)
det(heat-6, the-5)
prep_on(place-1, heat-6)
conj_and(place-1, add-8)
det(oil-10, the-9)
dobj(add-8, oil-10)
appos(oil-10, onion-12)
appos(onion-12, rice-14)
conj_and(place-1, stir-16)
advmod(stir-16, well-17)
has_pos(place-1,VB)
has_pos(the-2,DT)
has_pos(frying_pan-3,NN)
has_pos(the-5,DT)
has_pos(heat-6,NN)
has_pos(add-8,VB)
has_pos(the-9,DT)
has_pos(oil-10,NN)
has_pos(onion-12,NN)
has_pos(rice-14,NN)
has_pos(stir-16,VB)
has_pos(well-17,RB)
has_sense(the-5, null)
has_sense(the-2, null)
has_sense(onion-12, null)
has_sense(the-9, null)
---
// add the cooked eggs and stir gently .
has_sense(add-1,add-1-sense)
is_a(add-1-sense,add.v.01)
has_sense(cooked-3,cooked-3-sense)
is_a(cooked-3-sense,cooked.a.01)
has_sense(eggs-4,eggs-4-sense)
is_a(eggs-4-sense,egg.n.02)
has_sense(stir-6,stir-6-sense)
is_a(stir-6-sense,stir.v.01)
root(ROOT-0, add-1)
det(eggs-4, the-2)
amod(eggs-4, cooked-3)
dobj(add-1, eggs-4)
conj_and(add-1, stir-6)
advmod(stir-6, gently-7)
has_pos(add-1,VB)
has_pos(the-2,DT)
has_pos(cooked-3,JJ)
has_pos(eggs-4,NNS)
has_pos(stir-6,VB)
has_pos(gently-7,RB)
has_sense(gently-7, null)
has_sense(the-2, null)
---
// add the honey and stir until all the ingredient be coat .
has_sense(add-1,add-1-sense)
is_a(add-1-sense,add.v.01)
has_sense(honey-3,honey-3-sense)
is_a(honey-3-sense,honey.n.01)
has_sense(stir-5,stir-5-sense)
is_a(stir-5-sense,stir.v.01)
has_sense(ingredient-9,ingredient-9-sense)
is_a(ingredient-9-sense,ingredient.n.03)
has_sense(be-10,be-10-sense)
is_a(be-10-sense,be.v.01)
has_sense(coat-11,coat-11-sense)
is_a(coat-11-sense,coat.v.01)
root(ROOT-0, add-1)
det(honey-3, the-2)
dobj(add-1, honey-3)
conj_and(add-1, stir-5)
mark(coat-11, until-6)
predet(ingredient-9, all-7)
det(ingredient-9, the-8)
nsubj(coat-11, ingredient-9)
cop(coat-11, be-10)
advcl(stir-5, coat-11)
has_pos(add-1,VB)
has_pos(the-2,DT)
has_pos(honey-3,NN)
has_pos(stir-5,VB)
has_pos(until-6,IN)
has_pos(all-7,PDT)
has_pos(the-8,DT)
has_pos(ingredient-9,NN)
has_pos(be-10,VB)
has_pos(coat-11,NN)
has_sense(the-2, null)
has_sense(the-8, null)
has_sense(all-7, null)
has_sense(until-6, null)
---
// add about 1 tablespoon of chocolate chips into the bowl and give it a good stir also .
has_sense(add-1,add-1-sense)
is_a(add-1-sense,add.v.01)
has_sense(about-2,about-2-sense)
is_a(about-2-sense,approximately.r.01)
has_sense(tablespoon-4,tablespoon-4-sense)
is_a(tablespoon-4-sense,tablespoon.n.01)
has_sense(chocolate-6,chocolate-6-sense)
is_a(chocolate-6-sense,chocolate.n.02)
has_sense(bowl-10,bowl-10-sense)
is_a(bowl-10-sense,bowl.n.01)
has_sense(give-12,give-12-sense)
is_a(give-12-sense,give.v.01)
has_sense(stir-16,stir-16-sense)
is_a(stir-16-sense,stir.v.01)
has_sense(also-17,also-17-sense)
is_a(also-17-sense,besides.r.02)
root(ROOT-0, add-1)
quantmod(1-3, about-2)
num(tablespoon-4, 1-3)
dobj(add-1, tablespoon-4)
nn(chips-7, chocolate-6)
prep_of(tablespoon-4, chips-7)
det(bowl-10, the-9)
prep_into(add-1, bowl-10)
conj_and(add-1, give-12)
iobj(give-12, it-13)
det(good-15, a-14)
dobj(give-12, good-15)
dep(good-15, stir-16)
advmod(stir-16, also-17)
has_pos(add-1,VB)
has_pos(about-2,RB)
has_pos(1-3,CD)
has_pos(tablespoon-4,NN)
has_pos(chocolate-6,NN)
has_pos(chips-7,NNS)
has_pos(the-9,DT)
has_pos(bowl-10,NN)
has_pos(give-12,VB)
has_pos(it-13,PRP)
has_pos(a-14,DT)
has_pos(good-15,NN)
has_pos(stir-16,VB)
has_pos(also-17,RB)
has_sense(a-14, null)
has_sense(chips-7, null)
has_sense(it-13, null)
has_sense(1-3, null)
has_sense(the-9, null)
has_sense(good-15, null)
---
// Stir until dry ingredient be barely moisten .
has_sense(dry-3,dry-3-sense)
is_a(dry-3-sense,dry.a.01)
has_sense(ingredient-4,ingredient-4-sense)
is_a(ingredient-4-sense,ingredient.n.03)
has_sense(be-5,be-5-sense)
is_a(be-5-sense,be.v.01)
has_sense(barely-6,barely-6-sense)
is_a(barely-6-sense,scantily.r.01)
has_sense(moisten-7,moisten-7-sense)
is_a(moisten-7-sense,moisten.v.01)
root(ROOT-0, Stir-1)
mark(moisten-7, until-2)
amod(ingredient-4, dry-3)
nsubj(moisten-7, ingredient-4)
cop(moisten-7, be-5)
advmod(moisten-7, barely-6)
advcl(Stir-1, moisten-7)
has_pos(Stir-1,VB)
has_pos(until-2,IN)
has_pos(dry-3,JJ)
has_pos(ingredient-4,NN)
has_pos(be-5,VB)
has_pos(barely-6,RB)
has_pos(moisten-7,JJ)
has_sense(Stir-1, null)
has_sense(until-2, null)
---
// You will need to stir most of the time to stop the rice from stick to the pan .
has_sense(need-3,need-3-sense)
is_a(need-3-sense,necessitate.v.01)
has_sense(stir-5,stir-5-sense)
is_a(stir-5-sense,stir.v.01)
has_sense(most-6,most-6-sense)
is_a(most-6-sense,most.a.01)
has_sense(time-9,time-9-sense)
is_a(time-9-sense,time.n.02)
has_sense(stop-11,stop-11-sense)
is_a(stop-11-sense,stop.v.03)
has_sense(rice-13,rice-13-sense)
is_a(rice-13-sense,rice.n.01)
has_sense(stick-15,stick-15-sense)
is_a(stick-15-sense,adhere.v.06)
has_sense(pan-18,pan-18-sense)
is_a(pan-18-sense,pan.n.01)
nsubj(need-3, You-1)
aux(need-3, will-2)
root(ROOT-0, need-3)
aux(stir-5, to-4)
xcomp(need-3, stir-5)
dobj(stir-5, most-6)
det(time-9, the-8)
prep_of(most-6, time-9)
aux(stop-11, to-10)
infmod(time-9, stop-11)
det(rice-13, the-12)
dobj(stop-11, rice-13)
prep_from(stop-11, stick-15)
det(pan-18, the-17)
prep_to(stop-11, pan-18)
has_pos(You-1,PRP)
has_pos(will-2,MD)
has_pos(need-3,VB)
has_pos(to-4,TO)
has_pos(stir-5,VB)
has_pos(most-6,JJS)
has_pos(the-8,DT)
has_pos(time-9,NN)
has_pos(to-10,TO)
has_pos(stop-11,VB)
has_pos(the-12,DT)
has_pos(rice-13,NN)
has_pos(stick-15,NN)
has_pos(the-17,DT)
has_pos(pan-18,NN)
has_sense(You-1, null)
has_sense(will-2, null)
has_sense(to-4, null)
has_sense(the-8, null)
has_sense(to-10, null)
has_sense(the-17, null)
has_sense(the-12, null)
---
// When the oil be hot , add the broccoli stems and stir fry for 1 minute .
has_sense(oil-3,oil-3-sense)
is_a(oil-3-sense,vegetable_oil.n.01)
has_sense(be-4,be-4-sense)
is_a(be-4-sense,be.v.01)
has_sense(hot-5,hot-5-sense)
is_a(hot-5-sense,hot.a.01)
has_sense(add-7,add-7-sense)
is_a(add-7-sense,add.v.01)
has_sense(broccoli-9,broccoli-9-sense)
is_a(broccoli-9-sense,broccoli.n.01)
has_sense(minute-16,minute-16-sense)
is_a(minute-16-sense,minute.n.01)
advmod(hot-5, When-1)
det(oil-3, the-2)
nsubj(hot-5, oil-3)
cop(hot-5, be-4)
advcl(add-7, hot-5)
root(ROOT-0, add-7)
det(broccoli-9, the-8)
nsubj(stems-10, broccoli-9)
ccomp(add-7, stems-10)
conj_and(add-7, stir-12)
dobj(stir-12, fry-13)
num(minute-16, 1-15)
prep_for(stir-12, minute-16)
has_pos(When-1,WRB)
has_pos(the-2,DT)
has_pos(oil-3,NN)
has_pos(be-4,VB)
has_pos(hot-5,JJ)
has_pos(add-7,VB)
has_pos(the-8,DT)
has_pos(broccoli-9,NNS)
has_pos(stems-10,VBZ)
has_pos(stir-12,VB)
has_pos(fry-13,NN)
has_pos(1-15,CD)
has_pos(minute-16,NN)
has_sense(the-2, null)
has_sense(When-1, null)
has_sense(the-8, null)
has_sense(1-15, null)
has_sense(stems-10, null)
has_sense(stir-12, null)
has_sense(fry-13, null)
---
// finally add the spring_onion and stir again .
has_sense(finally-1,finally-1-sense)
is_a(finally-1-sense,ultimately.r.01)
has_sense(add-2,add-2-sense)
is_a(add-2-sense,add.v.01)
has_sense(spring_onion-4,spring_onion-4-sense)
is_a(spring_onion-4-sense,green_onion.n.01)
has_sense(stir-6,stir-6-sense)
is_a(stir-6-sense,stir.v.01)
has_sense(again-7,again-7-sense)
is_a(again-7-sense,again.r.01)
advmod(add-2, finally-1)
root(ROOT-0, add-2)
det(spring_onion-4, the-3)
dobj(add-2, spring_onion-4)
conj_and(add-2, stir-6)
advmod(stir-6, again-7)
has_pos(finally-1,RB)
has_pos(add-2,VB)
has_pos(the-3,DT)
has_pos(spring_onion-4,NN)
has_pos(stir-6,VB)
has_pos(again-7,RB)
has_sense(the-3, null)
---
// When the butter be melt , take it out and stir it .
has_sense(butter-3,butter-3-sense)
is_a(butter-3-sense,butter.n.01)
has_sense(be-4,be-4-sense)
is_a(be-4-sense,be.v.01)
has_sense(melt-5,melt-5-sense)
is_a(melt-5-sense,melt.v.01)
has_sense(take-7,take-7-sense)
is_a(take-7-sense,take.v.04)
has_sense(stir-11,stir-11-sense)
is_a(stir-11-sense,stir.v.01)
advmod(melt-5, When-1)
det(butter-3, the-2)
nsubjpass(melt-5, butter-3)
auxpass(melt-5, be-4)
advcl(take-7, melt-5)
root(ROOT-0, take-7)
dobj(take-7, it-8)
prt(take-7, out-9)
conj_and(take-7, stir-11)
dobj(stir-11, it-12)
has_pos(When-1,WRB)
has_pos(the-2,DT)
has_pos(butter-3,NN)
has_pos(be-4,VB)
has_pos(melt-5,VBN)
has_pos(take-7,VB)
has_pos(it-8,PRP)
has_pos(out-9,RP)
has_pos(stir-11,VB)
has_pos(it-12,PRP)
has_sense(it-12, null)
has_sense(the-2, null)
has_sense(When-1, null)
has_sense(out-9, null)
has_sense(it-8, null)
---
// stir the soup until it thicken .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(soup-3,soup-3-sense)
is_a(soup-3-sense,soup.n.01)
has_sense(thicken-6,thicken-6-sense)
is_a(thicken-6-sense,thicken.v.02)
root(ROOT-0, stir-1)
det(soup-3, the-2)
dobj(stir-1, soup-3)
mark(thicken-6, until-4)
nsubj(thicken-6, it-5)
advcl(stir-1, thicken-6)
has_pos(stir-1,VB)
has_pos(the-2,DT)
has_pos(soup-3,NN)
has_pos(until-4,IN)
has_pos(it-5,PRP)
has_pos(thicken-6,VBP)
has_sense(it-5, null)
has_sense(until-4, null)
has_sense(the-2, null)
---
// Stir constantly over medium heat until mixture come to a full rolling boil .
has_sense(constantly-2,constantly-2-sense)
is_a(constantly-2-sense,constantly.r.02)
has_sense(medium-4,medium-4-sense)
is_a(medium-4-sense,medium.n.08)
has_sense(heat-5,heat-5-sense)
is_a(heat-5-sense,hotness.n.01)
has_sense(mixture-7,mixture-7-sense)
is_a(mixture-7-sense,concoction.n.01)
has_sense(come-8,come-8-sense)
is_a(come-8-sense,come.v.04)
has_sense(full-11,full-11-sense)
is_a(full-11-sense,entire.s.01)
has_sense(boil-13,boil-13-sense)
is_a(boil-13-sense,boiling_point.n.01)
nsubj(come-8, Stir-1)
advmod(Stir-1, constantly-2)
nn(heat-5, medium-4)
prep_over(Stir-1, heat-5)
prep_until(Stir-1, mixture-7)
root(ROOT-0, come-8)
det(boil-13, a-10)
amod(boil-13, full-11)
amod(boil-13, rolling-12)
prep_to(come-8, boil-13)
has_pos(Stir-1,NNP)
has_pos(constantly-2,RB)
has_pos(medium-4,NN)
has_pos(heat-5,NN)
has_pos(mixture-7,NN)
has_pos(come-8,VBP)
has_pos(a-10,DT)
has_pos(full-11,JJ)
has_pos(rolling-12,JJ)
has_pos(boil-13,NN)
has_sense(a-10, null)
has_sense(Stir-1, null)
has_sense(rolling-12, null)
---
// stir and serve .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(serve-3,serve-3-sense)
is_a(serve-3-sense,serve.v.05)
root(ROOT-0, stir-1)
conj_and(stir-1, serve-3)
has_pos(stir-1,VB)
has_pos(serve-3,VB)
---
// then while the pasta be still in the drainer run cool water over the pasta while you stir the pasta around .
has_sense(then-1,then-1-sense)
is_a(then-1-sense,then.r.01)
has_sense(pasta-4,pasta-4-sense)
is_a(pasta-4-sense,pasta.n.02)
has_sense(be-5,be-5-sense)
is_a(be-5-sense,be.v.01)
has_sense(still-6,still-6-sense)
is_a(still-6-sense,still.r.01)
has_sense(run-10,run-10-sense)
is_a(run-10-sense,run.v.06)
has_sense(cool-11,cool-11-sense)
is_a(cool-11-sense,cool.a.01)
has_sense(water-12,water-12-sense)
is_a(water-12-sense,water.n.06)
has_sense(pasta-15,pasta-15-sense)
is_a(pasta-15-sense,pasta.n.02)
has_sense(stir-18,stir-18-sense)
is_a(stir-18-sense,stir.v.01)
has_sense(pasta-20,pasta-20-sense)
is_a(pasta-20-sense,pasta.n.02)
has_sense(around-21,around-21-sense)
is_a(around-21-sense,around.r.02)
root(ROOT-0, then-1)
mark(run-10, while-2)
det(pasta-4, the-3)
nsubjpass(run-10, pasta-4)
auxpass(run-10, be-5)
advmod(run-10, still-6)
det(drainer-9, the-8)
prep_in(still-6, drainer-9)
dep(then-1, run-10)
amod(water-12, cool-11)
dobj(run-10, water-12)
det(pasta-15, the-14)
prep_over(run-10, pasta-15)
mark(stir-18, while-16)
nsubj(stir-18, you-17)
advcl(run-10, stir-18)
det(pasta-20, the-19)
dobj(stir-18, pasta-20)
advmod(stir-18, around-21)
has_pos(then-1,RB)
has_pos(while-2,IN)
has_pos(the-3,DT)
has_pos(pasta-4,NN)
has_pos(be-5,VB)
has_pos(still-6,RB)
has_pos(the-8,DT)
has_pos(drainer-9,NN)
has_pos(run-10,VBN)
has_pos(cool-11,JJ)
has_pos(water-12,NN)
has_pos(the-14,DT)
has_pos(pasta-15,NN)
has_pos(while-16,IN)
has_pos(you-17,PRP)
has_pos(stir-18,VBP)
has_pos(the-19,DT)
has_pos(pasta-20,NN)
has_pos(around-21,RB)
has_sense(the-3, null)
has_sense(drainer-9, null)
has_sense(while-2, null)
has_sense(the-8, null)
has_sense(you-17, null)
has_sense(the-19, null)
has_sense(the-14, null)
has_sense(while-16, null)
---
// stir gently , leaving some small clump of dry ingredient in the batter .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(small-6,small-6-sense)
is_a(small-6-sense,small.a.01)
has_sense(clump-7,clump-7-sense)
is_a(clump-7-sense,bunch.n.01)
has_sense(dry-9,dry-9-sense)
is_a(dry-9-sense,dry.a.01)
has_sense(ingredient-10,ingredient-10-sense)
is_a(ingredient-10-sense,ingredient.n.03)
has_sense(batter-13,batter-13-sense)
is_a(batter-13-sense,batter.n.02)
root(ROOT-0, stir-1)
advmod(stir-1, gently-2)
xcomp(stir-1, leaving-4)
det(clump-7, some-5)
amod(clump-7, small-6)
dobj(leaving-4, clump-7)
amod(ingredient-10, dry-9)
prep_of(clump-7, ingredient-10)
det(batter-13, the-12)
prep_in(leaving-4, batter-13)
has_pos(stir-1,VB)
has_pos(gently-2,RB)
has_pos(leaving-4,VBG)
has_pos(some-5,DT)
has_pos(small-6,JJ)
has_pos(clump-7,NN)
has_pos(dry-9,JJ)
has_pos(ingredient-10,NN)
has_pos(the-12,DT)
has_pos(batter-13,NN)
has_sense(leaving-4, null)
has_sense(some-5, null)
has_sense(the-12, null)
has_sense(gently-2, null)
---
// stir the sugar and whiskey mix as you go .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.08)
has_sense(sugar-3,sugar-3-sense)
is_a(sugar-3-sense,sugar.n.01)
has_sense(whiskey-5,whiskey-5-sense)
is_a(whiskey-5-sense,whiskey.n.01)
has_sense(mix-6,mix-6-sense)
is_a(mix-6-sense,mix.n.03)
has_sense(go-9,go-9-sense)
is_a(go-9-sense,go.v.02)
root(ROOT-0, stir-1)
det(mix-6, the-2)
nn(mix-6, sugar-3)
conj_and(sugar-3, whiskey-5)
dobj(stir-1, mix-6)
mark(go-9, as-7)
nsubj(go-9, you-8)
advcl(stir-1, go-9)
has_pos(stir-1,VB)
has_pos(the-2,DT)
has_pos(sugar-3,NN)
has_pos(whiskey-5,NN)
has_pos(mix-6,NN)
has_pos(as-7,IN)
has_pos(you-8,PRP)
has_pos(go-9,VBP)
has_sense(you-8, null)
has_sense(as-7, null)
has_sense(the-2, null)
---
// return them to the bowl of sauce and stir to coat with sauce .
has_sense(return-1,return-1-sense)
is_a(return-1-sense,return.v.01)
has_sense(bowl-5,bowl-5-sense)
is_a(bowl-5-sense,bowl.n.01)
has_sense(sauce-7,sauce-7-sense)
is_a(sauce-7-sense,sauce.n.01)
has_sense(stir-9,stir-9-sense)
is_a(stir-9-sense,stir.v.01)
has_sense(sauce-13,sauce-13-sense)
is_a(sauce-13-sense,sauce.n.01)
root(ROOT-0, return-1)
dobj(return-1, them-2)
det(bowl-5, the-4)
prep_to(return-1, bowl-5)
prep_of(bowl-5, sauce-7)
conj_and(return-1, stir-9)
prep_to(stir-9, coat-11)
prep_with(stir-9, sauce-13)
has_pos(return-1,VB)
has_pos(them-2,PRP)
has_pos(the-4,DT)
has_pos(bowl-5,NN)
has_pos(sauce-7,NN)
has_pos(stir-9,VB)
has_pos(coat-11,NN)
has_pos(sauce-13,NN)
has_sense(the-4, null)
has_sense(them-2, null)
has_sense(coat-11, null)
---
// When the rice have absorb most of the stock , add another couple of ladle and stir again .
has_sense(rice-3,rice-3-sense)
is_a(rice-3-sense,rice.n.01)
has_sense(have-4,have-4-sense)
is_a(have-4-sense,experience.v.03)
has_sense(absorb-5,absorb-5-sense)
is_a(absorb-5-sense,absorb.v.04)
has_sense(most-6,most-6-sense)
is_a(most-6-sense,most.a.01)
has_sense(stock-9,stock-9-sense)
is_a(stock-9-sense,broth.n.01)
has_sense(add-11,add-11-sense)
is_a(add-11-sense,add.v.01)
has_sense(ladle-15,ladle-15-sense)
is_a(ladle-15-sense,ladle.n.01)
has_sense(stir-17,stir-17-sense)
is_a(stir-17-sense,stir.v.01)
has_sense(again-18,again-18-sense)
is_a(again-18-sense,again.r.01)
advmod(have-4, When-1)
det(rice-3, the-2)
nsubj(have-4, rice-3)
advcl(add-11, have-4)
ccomp(have-4, absorb-5)
dobj(absorb-5, most-6)
det(stock-9, the-8)
prep_of(most-6, stock-9)
root(ROOT-0, add-11)
det(couple-13, another-12)
dobj(add-11, couple-13)
prep_of(couple-13, ladle-15)
conj_and(add-11, stir-17)
advmod(stir-17, again-18)
has_pos(When-1,WRB)
has_pos(the-2,DT)
has_pos(rice-3,NN)
has_pos(have-4,VBP)
has_pos(absorb-5,VB)
has_pos(most-6,JJS)
has_pos(the-8,DT)
has_pos(stock-9,NN)
has_pos(add-11,VB)
has_pos(another-12,DT)
has_pos(couple-13,NN)
has_pos(ladle-15,NN)
has_pos(stir-17,VB)
has_pos(again-18,RB)
has_sense(couple-13, null)
has_sense(the-2, null)
has_sense(When-1, null)
has_sense(the-8, null)
has_sense(another-12, null)
---
// Stir gently until the sugar be dissolve .
has_sense(gently-2,gently-2-sense)
is_a(gently-2-sense,gently.r.02)
has_sense(sugar-5,sugar-5-sense)
is_a(sugar-5-sense,sugar.n.01)
has_sense(be-6,be-6-sense)
is_a(be-6-sense,be.v.01)
has_sense(dissolve-7,dissolve-7-sense)
is_a(dissolve-7-sense,dissolve.v.08)
nsubjpass(dissolve-7, Stir-1)
advmod(dissolve-7, gently-2)
det(sugar-5, the-4)
prep_until(gently-2, sugar-5)
auxpass(dissolve-7, be-6)
root(ROOT-0, dissolve-7)
has_pos(Stir-1,NNP)
has_pos(gently-2,RB)
has_pos(the-4,DT)
has_pos(sugar-5,NN)
has_pos(be-6,VB)
has_pos(dissolve-7,VBN)
has_sense(Stir-1, null)
has_sense(the-4, null)
---
// put the two eggs into the bowl and stir them together to make the egg sauce .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(eggs-4,eggs-4-sense)
is_a(eggs-4-sense,egg.n.02)
has_sense(bowl-7,bowl-7-sense)
is_a(bowl-7-sense,bowl.n.01)
has_sense(stir-9,stir-9-sense)
is_a(stir-9-sense,stir.v.01)
has_sense(together-11,together-11-sense)
is_a(together-11-sense,together.r.01)
has_sense(make-13,make-13-sense)
is_a(make-13-sense,make.v.18)
has_sense(egg-15,egg-15-sense)
is_a(egg-15-sense,egg.n.02)
has_sense(sauce-16,sauce-16-sense)
is_a(sauce-16-sense,sauce.n.01)
root(ROOT-0, put-1)
det(eggs-4, the-2)
num(eggs-4, two-3)
dobj(put-1, eggs-4)
det(bowl-7, the-6)
prep_into(put-1, bowl-7)
conj_and(put-1, stir-9)
nsubj(make-13, them-10)
advmod(make-13, together-11)
aux(make-13, to-12)
xcomp(stir-9, make-13)
det(sauce-16, the-14)
nn(sauce-16, egg-15)
dobj(make-13, sauce-16)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(two-3,CD)
has_pos(eggs-4,NNS)
has_pos(the-6,DT)
has_pos(bowl-7,NN)
has_pos(stir-9,VB)
has_pos(them-10,PRP)
has_pos(together-11,RB)
has_pos(to-12,TO)
has_pos(make-13,VB)
has_pos(the-14,DT)
has_pos(egg-15,NN)
has_pos(sauce-16,NN)
has_sense(the-6, null)
has_sense(two-3, null)
has_sense(the-2, null)
has_sense(to-12, null)
has_sense(them-10, null)
has_sense(the-14, null)
---
// stir until blended .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(blended-3,blended-3-sense)
is_a(blended-3-sense,blended.a.01)
root(ROOT-0, stir-1)
prep_until(stir-1, blended-3)
has_pos(stir-1,VB)
has_pos(blended-3,NNP)
---
// stir the yolk mixture into the dry ingredient until everything be moist .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(yolk-3,yolk-3-sense)
is_a(yolk-3-sense,egg_yolk.n.01)
has_sense(mixture-4,mixture-4-sense)
is_a(mixture-4-sense,concoction.n.01)
has_sense(dry-7,dry-7-sense)
is_a(dry-7-sense,dry.a.01)
has_sense(ingredient-8,ingredient-8-sense)
is_a(ingredient-8-sense,ingredient.n.03)
has_sense(be-11,be-11-sense)
is_a(be-11-sense,be.v.01)
has_sense(moist-12,moist-12-sense)
is_a(moist-12-sense,damp.s.01)
root(ROOT-0, stir-1)
det(mixture-4, the-2)
nn(mixture-4, yolk-3)
dobj(stir-1, mixture-4)
det(ingredient-8, the-6)
amod(ingredient-8, dry-7)
prep_into(stir-1, ingredient-8)
mark(moist-12, until-9)
nsubj(moist-12, everything-10)
cop(moist-12, be-11)
advcl(stir-1, moist-12)
has_pos(stir-1,VB)
has_pos(the-2,DT)
has_pos(yolk-3,NN)
has_pos(mixture-4,NN)
has_pos(the-6,DT)
has_pos(dry-7,JJ)
has_pos(ingredient-8,NN)
has_pos(until-9,IN)
has_pos(everything-10,NN)
has_pos(be-11,VB)
has_pos(moist-12,JJ)
has_sense(the-6, null)
has_sense(the-2, null)
has_sense(until-9, null)
has_sense(everything-10, null)
---
// slowly stir in the sugar .
has_sense(slowly-1,slowly-1-sense)
is_a(slowly-1-sense,slowly.r.01)
has_sense(stir-2,stir-2-sense)
is_a(stir-2-sense,stir.v.01)
has_sense(sugar-5,sugar-5-sense)
is_a(sugar-5-sense,sugar.n.01)
advmod(stir-2, slowly-1)
root(ROOT-0, stir-2)
det(sugar-5, the-4)
prep_in(stir-2, sugar-5)
has_pos(slowly-1,RB)
has_pos(stir-2,VB)
has_pos(the-4,DT)
has_pos(sugar-5,NN)
has_sense(the-4, null)
---
// stir in flour , baking_soda , and salt .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.08)
has_sense(flour-3,flour-3-sense)
is_a(flour-3-sense,flour.n.01)
has_sense(baking_soda-5,baking_soda-5-sense)
is_a(baking_soda-5-sense,bicarbonate_of_soda.n.01)
has_sense(salt-8,salt-8-sense)
is_a(salt-8-sense,salt.n.02)
root(ROOT-0, stir-1)
prep_in(stir-1, flour-3)
conj_and(flour-3, baking_soda-5)
conj_and(flour-3, salt-8)
has_pos(stir-1,VB)
has_pos(flour-3,NN)
has_pos(baking_soda-5,NN)
has_pos(salt-8,NN)
---
// Once it have cool a bit , stir in the prepared egg replacer .
has_sense(have-3,have-3-sense)
is_a(have-3-sense,have.v.01)
has_sense(cool-4,cool-4-sense)
is_a(cool-4-sense,cool.v.02)
has_sense(bit-6,bit-6-sense)
is_a(bit-6-sense,moment.n.02)
has_sense(stir-8,stir-8-sense)
is_a(stir-8-sense,stir.v.01)
has_sense(prepared-11,prepared-11-sense)
is_a(prepared-11-sense,prepared.a.01)
has_sense(egg-12,egg-12-sense)
is_a(egg-12-sense,egg.n.02)
mark(have-3, Once-1)
nsubj(have-3, it-2)
advcl(stir-8, have-3)
dobj(have-3, cool-4)
det(bit-6, a-5)
dep(cool-4, bit-6)
root(ROOT-0, stir-8)
det(replacer-13, the-10)
amod(replacer-13, prepared-11)
nn(replacer-13, egg-12)
prep_in(stir-8, replacer-13)
has_pos(Once-1,IN)
has_pos(it-2,PRP)
has_pos(have-3,VBP)
has_pos(cool-4,NN)
has_pos(a-5,DT)
has_pos(bit-6,NN)
has_pos(stir-8,VB)
has_pos(the-10,DT)
has_pos(prepared-11,JJ)
has_pos(egg-12,NN)
has_pos(replacer-13,NN)
has_sense(replacer-13, null)
has_sense(Once-1, null)
has_sense(it-2, null)
has_sense(a-5, null)
has_sense(the-10, null)
---
// Stir and simmer for 1 minute .
has_sense(minute-6,minute-6-sense)
is_a(minute-6-sense,minute.n.01)
root(ROOT-0, Stir-1)
conj_and(Stir-1, simmer-3)
num(minute-6, 1-5)
prep_for(Stir-1, minute-6)
has_pos(Stir-1,NN)
has_pos(simmer-3,NN)
has_pos(1-5,CD)
has_pos(minute-6,NN)
has_sense(simmer-3, null)
has_sense(1-5, null)
has_sense(Stir-1, null)
---
// sprinkle the yeast into a medium bowl contain 1 1\/4 cup warm water and stir until yeast dissolves .
has_sense(sprinkle-1,sprinkle-1-sense)
is_a(sprinkle-1-sense,scatter.v.03)
has_sense(yeast-3,yeast-3-sense)
is_a(yeast-3-sense,yeast.n.01)
has_sense(medium-6,medium-6-sense)
is_a(medium-6-sense,average.s.04)
has_sense(bowl-7,bowl-7-sense)
is_a(bowl-7-sense,bowl.n.01)
has_sense(contain-8,contain-8-sense)
is_a(contain-8-sense,hold.v.11)
has_sense(cup-10,cup-10-sense)
is_a(cup-10-sense,cup.n.04)
has_sense(warm-11,warm-11-sense)
is_a(warm-11-sense,warm.a.01)
has_sense(water-12,water-12-sense)
is_a(water-12-sense,water.n.06)
has_sense(stir-14,stir-14-sense)
is_a(stir-14-sense,stir.v.01)
has_sense(yeast-16,yeast-16-sense)
is_a(yeast-16-sense,yeast.n.01)
csubj(contain-8, sprinkle-1)
det(yeast-3, the-2)
dobj(sprinkle-1, yeast-3)
det(bowl-7, a-5)
nn(bowl-7, medium-6)
prep_into(sprinkle-1, bowl-7)
root(ROOT-0, contain-8)
num(cup-10, 1 1\/4-9)
nsubj(warm-11, cup-10)
ccomp(contain-8, warm-11)
dobj(warm-11, water-12)
conj_and(warm-11, stir-14)
nn(dissolves-17, yeast-16)
prep_until(stir-14, dissolves-17)
has_pos(sprinkle-1,VBP)
has_pos(the-2,DT)
has_pos(yeast-3,NN)
has_pos(a-5,DT)
has_pos(medium-6,NN)
has_pos(bowl-7,NN)
has_pos(contain-8,VBP)
has_pos(1 1\/4-9,CD)
has_pos(cup-10,NN)
has_pos(warm-11,VB)
has_pos(water-12,NN)
has_pos(stir-14,VB)
has_pos(yeast-16,NN)
has_pos(dissolves-17,NNS)
has_sense(the-2, null)
has_sense(a-5, null)
has_sense(1 1\/4-9, null)
has_sense(dissolves-17, null)
---
// Stir in egg_yolk and enough chilled water to bind to a fairly soft dough .
has_sense(egg_yolk-3,egg_yolk-3-sense)
is_a(egg_yolk-3-sense,egg_yolk.n.01)
has_sense(enough-5,enough-5-sense)
is_a(enough-5-sense,enough.n.01)
has_sense(water-7,water-7-sense)
is_a(water-7-sense,water.n.06)
has_sense(fairly-12,fairly-12-sense)
is_a(fairly-12-sense,reasonably.r.01)
has_sense(soft-13,soft-13-sense)
is_a(soft-13-sense,soft.a.01)
has_sense(dough-14,dough-14-sense)
is_a(dough-14-sense,dough.n.01)
nsubj(chilled-6, Stir-1)
prep_in(Stir-1, egg_yolk-3)
conj_and(egg_yolk-3, enough-5)
root(ROOT-0, chilled-6)
dobj(chilled-6, water-7)
prep_to(chilled-6, bind-9)
det(dough-14, a-11)
advmod(soft-13, fairly-12)
amod(dough-14, soft-13)
prep_to(chilled-6, dough-14)
has_pos(Stir-1,NNP)
has_pos(egg_yolk-3,NN)
has_pos(enough-5,NN)
has_pos(chilled-6,VBN)
has_pos(water-7,NN)
has_pos(bind-9,NN)
has_pos(a-11,DT)
has_pos(fairly-12,RB)
has_pos(soft-13,JJ)
has_pos(dough-14,NN)
has_sense(bind-9, null)
has_sense(a-11, null)
has_sense(Stir-1, null)
has_sense(chilled-6, null)
---
// put the hob on a low heat , place the saucepan full of pasta on it and stir while add cheese .
has_sense(put-1,put-1-sense)
is_a(put-1-sense,put.v.01)
has_sense(hob-3,hob-3-sense)
is_a(hob-3-sense,hob.n.04)
has_sense(low-6,low-6-sense)
is_a(low-6-sense,low.a.01)
has_sense(heat-7,heat-7-sense)
is_a(heat-7-sense,hotness.n.01)
has_sense(place-9,place-9-sense)
is_a(place-9-sense,put.v.01)
has_sense(saucepan-11,saucepan-11-sense)
is_a(saucepan-11-sense,saucepan.n.01)
has_sense(full-12,full-12-sense)
is_a(full-12-sense,full.a.01)
has_sense(pasta-14,pasta-14-sense)
is_a(pasta-14-sense,pasta.n.02)
has_sense(stir-18,stir-18-sense)
is_a(stir-18-sense,stir.v.08)
has_sense(add-20,add-20-sense)
is_a(add-20-sense,add.v.01)
has_sense(cheese-21,cheese-21-sense)
is_a(cheese-21-sense,cheese.n.01)
root(ROOT-0, put-1)
det(hob-3, the-2)
dobj(put-1, hob-3)
det(heat-7, a-5)
amod(heat-7, low-6)
prep_on(put-1, heat-7)
conj_and(put-1, place-9)
det(saucepan-11, the-10)
dobj(place-9, saucepan-11)
dep(saucepan-11, full-12)
prep_of(saucepan-11, pasta-14)
prep_on(pasta-14, it-16)
conj_and(put-1, stir-18)
mark(add-20, while-19)
advcl(stir-18, add-20)
dobj(add-20, cheese-21)
has_pos(put-1,VB)
has_pos(the-2,DT)
has_pos(hob-3,NN)
has_pos(a-5,DT)
has_pos(low-6,JJ)
has_pos(heat-7,NN)
has_pos(place-9,VB)
has_pos(the-10,DT)
has_pos(saucepan-11,NN)
has_pos(full-12,JJ)
has_pos(pasta-14,NN)
has_pos(it-16,PRP)
has_pos(stir-18,VB)
has_pos(while-19,IN)
has_pos(add-20,VBP)
has_pos(cheese-21,NN)
has_sense(it-16, null)
has_sense(while-19, null)
has_sense(the-10, null)
has_sense(a-5, null)
has_sense(the-2, null)
---
// stir until it be completely mixed , there be no lumps left and the consistency be quite stiff .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(be-4,be-4-sense)
is_a(be-4-sense,be.v.01)
has_sense(completely-5,completely-5-sense)
is_a(completely-5-sense,wholly.r.01)
has_sense(be-9,be-9-sense)
is_a(be-9-sense,be.v.01)
has_sense(consistency-15,consistency-15-sense)
is_a(consistency-15-sense,consistency.n.01)
has_sense(be-16,be-16-sense)
is_a(be-16-sense,be.v.01)
has_sense(quite-17,quite-17-sense)
is_a(quite-17-sense,quite.r.01)
has_sense(stiff-18,stiff-18-sense)
is_a(stiff-18-sense,stiff.s.01)
root(ROOT-0, stir-1)
mark(left-12, until-2)
nsubj(mixed-6, it-3)
cop(mixed-6, be-4)
advmod(mixed-6, completely-5)
ccomp(left-12, mixed-6)
expl(left-12, there-8)
auxpass(left-12, be-9)
advmod(lumps-11, no-10)
advmod(left-12, lumps-11)
advcl(stir-1, left-12)
det(consistency-15, the-14)
nsubj(stiff-18, consistency-15)
cop(stiff-18, be-16)
advmod(stiff-18, quite-17)
conj_and(left-12, stiff-18)
has_pos(stir-1,VB)
has_pos(until-2,IN)
has_pos(it-3,PRP)
has_pos(be-4,VB)
has_pos(completely-5,RB)
has_pos(mixed-6,JJ)
has_pos(there-8,EX)
has_pos(be-9,VB)
has_pos(no-10,RB)
has_pos(lumps-11,RB)
has_pos(left-12,VBN)
has_pos(the-14,DT)
has_pos(consistency-15,NN)
has_pos(be-16,VB)
has_pos(quite-17,RB)
has_pos(stiff-18,JJ)
has_sense(there-8, null)
has_sense(no-10, null)
has_sense(lumps-11, null)
has_sense(it-3, null)
has_sense(until-2, null)
has_sense(the-14, null)
has_sense(left-12, null)
has_sense(mixed-6, null)
---
// make sure to stir all the way to the bottom of the bowl .
has_sense(make-1,make-1-sense)
is_a(make-1-sense,make.v.03)
has_sense(sure-2,sure-2-sense)
is_a(sure-2-sense,certain.a.02)
has_sense(stir-4,stir-4-sense)
is_a(stir-4-sense,stir.v.01)
has_sense(way-7,way-7-sense)
is_a(way-7-sense,direction.n.01)
has_sense(bottom-10,bottom-10-sense)
is_a(bottom-10-sense,bottom.n.01)
has_sense(bowl-13,bowl-13-sense)
is_a(bowl-13-sense,bowl.n.01)
root(ROOT-0, make-1)
acomp(make-1, sure-2)
aux(stir-4, to-3)
xcomp(sure-2, stir-4)
predet(way-7, all-5)
det(way-7, the-6)
dobj(stir-4, way-7)
det(bottom-10, the-9)
prep_to(stir-4, bottom-10)
det(bowl-13, the-12)
prep_of(bottom-10, bowl-13)
has_pos(make-1,VB)
has_pos(sure-2,JJ)
has_pos(to-3,TO)
has_pos(stir-4,VB)
has_pos(all-5,PDT)
has_pos(the-6,DT)
has_pos(way-7,NN)
has_pos(the-9,DT)
has_pos(bottom-10,NN)
has_pos(the-12,DT)
has_pos(bowl-13,NN)
has_sense(the-6, null)
has_sense(to-3, null)
has_sense(the-9, null)
has_sense(all-5, null)
has_sense(the-12, null)
---
// Stir batter down and pour into greased loaf pan .
has_sense(pour-5,pour-5-sense)
is_a(pour-5-sense,decant.v.01)
has_sense(greased-7,greased-7-sense)
is_a(greased-7-sense,lubricated.a.01)
has_sense(pan-9,pan-9-sense)
is_a(pan-9-sense,pan.n.01)
nsubj(batter-2, Stir-1)
root(ROOT-0, batter-2)
prt(batter-2, down-3)
conj_and(batter-2, pour-5)
amod(pan-9, greased-7)
nn(pan-9, loaf-8)
prep_into(pour-5, pan-9)
has_pos(Stir-1,NNP)
has_pos(batter-2,VB)
has_pos(down-3,RP)
has_pos(pour-5,VB)
has_pos(greased-7,JJ)
has_pos(loaf-8,NN)
has_pos(pan-9,NNS)
has_sense(loaf-8, null)
has_sense(down-3, null)
has_sense(batter-2, null)
has_sense(Stir-1, null)
---
// In another large bowl , stir in egg , salt , pepper and 1 tablespoon of vegetable_oil and mix well .
has_sense(large-3,large-3-sense)
is_a(large-3-sense,large.a.01)
has_sense(bowl-4,bowl-4-sense)
is_a(bowl-4-sense,bowl.n.01)
has_sense(stir-6,stir-6-sense)
is_a(stir-6-sense,stir.v.01)
has_sense(egg-8,egg-8-sense)
is_a(egg-8-sense,egg.n.02)
has_sense(salt-10,salt-10-sense)
is_a(salt-10-sense,salt.n.02)
has_sense(pepper-12,pepper-12-sense)
is_a(pepper-12-sense,pepper.n.03)
has_sense(tablespoon-15,tablespoon-15-sense)
is_a(tablespoon-15-sense,tablespoon.n.01)
has_sense(vegetable_oil-17,vegetable_oil-17-sense)
is_a(vegetable_oil-17-sense,vegetable_oil.n.01)
has_sense(mix-19,mix-19-sense)
is_a(mix-19-sense,blend.v.03)
has_sense(well-20,well-20-sense)
is_a(well-20-sense,well.r.02)
det(bowl-4, another-2)
amod(bowl-4, large-3)
prep_in(stir-6, bowl-4)
root(ROOT-0, stir-6)
nn(pepper-12, egg-8)
conj_and(pepper-12, salt-10)
nn(tablespoon-15, pepper-12)
conj_and(pepper-12, 1-14)
prep_in(stir-6, tablespoon-15)
prep_of(tablespoon-15, vegetable_oil-17)
conj_and(vegetable_oil-17, mix-19)
advmod(stir-6, well-20)
has_pos(another-2,DT)
has_pos(large-3,JJ)
has_pos(bowl-4,NN)
has_pos(stir-6,VB)
has_pos(egg-8,NN)
has_pos(salt-10,NN)
has_pos(pepper-12,NN)
has_pos(1-14,CD)
has_pos(tablespoon-15,NNS)
has_pos(vegetable_oil-17,NN)
has_pos(mix-19,NN)
has_pos(well-20,RB)
has_sense(another-2, null)
has_sense(1-14, null)
---
// Stir in garlic powder and ginger .
has_sense(garlic-3,garlic-3-sense)
is_a(garlic-3-sense,garlic.n.02)
has_sense(powder-4,powder-4-sense)
is_a(powder-4-sense,powder.n.01)
has_sense(ginger-6,ginger-6-sense)
is_a(ginger-6-sense,ginger.n.03)
root(ROOT-0, Stir-1)
amod(powder-4, garlic-3)
prep_in(Stir-1, powder-4)
conj_and(powder-4, ginger-6)
has_pos(Stir-1,NNP)
has_pos(garlic-3,JJ)
has_pos(powder-4,NN)
has_pos(ginger-6,NN)
has_sense(Stir-1, null)
---
// Stir in egg .
has_sense(egg-3,egg-3-sense)
is_a(egg-3-sense,egg.n.02)
root(ROOT-0, Stir-1)
prep_in(Stir-1, egg-3)
has_pos(Stir-1,NNP)
has_pos(egg-3,NN)
has_sense(Stir-1, null)
---
// stir the yeast mixture .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(yeast-3,yeast-3-sense)
is_a(yeast-3-sense,yeast.n.01)
has_sense(mixture-4,mixture-4-sense)
is_a(mixture-4-sense,concoction.n.01)
root(ROOT-0, stir-1)
det(mixture-4, the-2)
nn(mixture-4, yeast-3)
dobj(stir-1, mixture-4)
has_pos(stir-1,VB)
has_pos(the-2,DT)
has_pos(yeast-3,NN)
has_pos(mixture-4,NN)
has_sense(the-2, null)
---
// stir it in .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
root(ROOT-0, stir-1)
dobj(stir-1, it-2)
prep(stir-1, in-3)
has_pos(stir-1,VB)
has_pos(it-2,PRP)
has_pos(in-3,IN)
has_sense(in-3, null)
has_sense(it-2, null)
---
// stir in the milk and cherries .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.08)
has_sense(milk-4,milk-4-sense)
is_a(milk-4-sense,milk.n.01)
root(ROOT-0, stir-1)
det(milk-4, the-3)
prep_in(stir-1, milk-4)
conj_and(milk-4, cherries-6)
has_pos(stir-1,VB)
has_pos(the-3,DT)
has_pos(milk-4,NN)
has_pos(cherries-6,NNS)
has_sense(the-3, null)
has_sense(cherries-6, null)
---
// Stir occasionally . Cook until the liquid content be gone and noodle be tender .
has_sense(occasionally-2,occasionally-2-sense)
is_a(occasionally-2-sense,occasionally.r.01)
has_sense(liquid-7,liquid-7-sense)
is_a(liquid-7-sense,liquid.a.01)
has_sense(content-8,content-8-sense)
is_a(content-8-sense,content.n.01)
has_sense(be-9,be-9-sense)
is_a(be-9-sense,be.v.01)
has_sense(noodle-12,noodle-12-sense)
is_a(noodle-12-sense,noodle.n.01)
has_sense(be-13,be-13-sense)
is_a(be-13-sense,be.v.01)
nn(Cook-4, Stir-1)
nn(Cook-4, occasionally-2)
nsubjpass(gone-10, Cook-4)
det(content-8, the-6)
amod(content-8, liquid-7)
prep_until(Cook-4, content-8)
auxpass(gone-10, be-9)
root(ROOT-0, gone-10)
conj_and(gone-10, noodle-12)
cop(tender-14, be-13)
xcomp(noodle-12, tender-14)
has_pos(Stir-1,NNP)
has_pos(occasionally-2,NNP)
has_pos(Cook-4,NNP)
has_pos(the-6,DT)
has_pos(liquid-7,JJ)
has_pos(content-8,NN)
has_pos(be-9,VB)
has_pos(gone-10,VBN)
has_pos(noodle-12,VB)
has_pos(be-13,VB)
has_pos(tender-14,NN)
has_sense(the-6, null)
has_sense(tender-14, null)
has_sense(gone-10, null)
has_sense(Stir-1, null)
has_sense(Cook-4, null)
---
// Stir in the shredded chicken .
has_sense(shredded-4,shredded-4-sense)
is_a(shredded-4-sense,chopped.s.01)
has_sense(chicken-5,chicken-5-sense)
is_a(chicken-5-sense,chicken.n.01)
root(ROOT-0, Stir-1)
det(chicken-5, the-3)
amod(chicken-5, shredded-4)
prep_in(Stir-1, chicken-5)
has_pos(Stir-1,NNP)
has_pos(the-3,DT)
has_pos(shredded-4,JJ)
has_pos(chicken-5,NN)
has_sense(Stir-1, null)
has_sense(the-3, null)
---
// stir over low heat until the sugar dissolve .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(low-3,low-3-sense)
is_a(low-3-sense,low.a.01)
has_sense(heat-4,heat-4-sense)
is_a(heat-4-sense,hotness.n.01)
has_sense(sugar-7,sugar-7-sense)
is_a(sugar-7-sense,sugar.n.01)
has_sense(dissolve-8,dissolve-8-sense)
is_a(dissolve-8-sense,dissolve.v.02)
root(ROOT-0, stir-1)
amod(heat-4, low-3)
prep_over(stir-1, heat-4)
mark(dissolve-8, until-5)
det(sugar-7, the-6)
nsubj(dissolve-8, sugar-7)
advcl(stir-1, dissolve-8)
has_pos(stir-1,VB)
has_pos(low-3,JJ)
has_pos(heat-4,NN)
has_pos(until-5,IN)
has_pos(the-6,DT)
has_pos(sugar-7,NN)
has_pos(dissolve-8,VB)
has_sense(until-5, null)
has_sense(the-6, null)
---
// finally turn off the heat and stir in the yogurt .
has_sense(finally-1,finally-1-sense)
is_a(finally-1-sense,ultimately.r.01)
has_sense(turn-2,turn-2-sense)
is_a(turn-2-sense,turn.v.22)
has_sense(yogurt-10,yogurt-10-sense)
is_a(yogurt-10-sense,yogurt.n.01)
advmod(turn-2, finally-1)
root(ROOT-0, turn-2)
prt(turn-2, off-3)
det(heat-5, the-4)
dobj(turn-2, heat-5)
conj_and(turn-2, stir-7)
det(yogurt-10, the-9)
prep_in(stir-7, yogurt-10)
has_pos(finally-1,RB)
has_pos(turn-2,VB)
has_pos(off-3,RP)
has_pos(the-4,DT)
has_pos(heat-5,NN)
has_pos(stir-7,VB)
has_pos(the-9,DT)
has_pos(yogurt-10,NN)
has_sense(the-4, null)
has_sense(the-9, null)
has_sense(heat-5, null)
has_sense(off-3, null)
has_sense(stir-7, null)
---
// stir consistently until it is all add .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(consistently-2,consistently-2-sense)
is_a(consistently-2-sense,systematically.r.01)
has_sense(all-6,all-6-sense)
is_a(all-6-sense,wholly.r.01)
has_sense(add-7,add-7-sense)
is_a(add-7-sense,add.v.01)
root(ROOT-0, stir-1)
advmod(stir-1, consistently-2)
mark(is-5, until-3)
nsubj(is-5, it-4)
advcl(stir-1, is-5)
nsubj(add-7, all-6)
ccomp(is-5, add-7)
has_pos(stir-1,VB)
has_pos(consistently-2,RB)
has_pos(until-3,IN)
has_pos(it-4,PRP)
has_pos(is-5,VBZ)
has_pos(all-6,DT)
has_pos(add-7,VB)
has_sense(it-4, null)
has_sense(until-3, null)
has_sense(is-5, null)
---
// Stir in the icing_sugar and butter and stir it in until the butter have melt and the mixture be smooth .
has_sense(icing_sugar-4,icing_sugar-4-sense)
is_a(icing_sugar-4-sense,icing_sugar.n.01)
has_sense(butter-6,butter-6-sense)
is_a(butter-6-sense,butter.n.01)
has_sense(butter-13,butter-13-sense)
is_a(butter-13-sense,butter.n.01)
has_sense(have-14,have-14-sense)
is_a(have-14-sense,have.v.01)
has_sense(melt-15,melt-15-sense)
is_a(melt-15-sense,melt.v.01)
has_sense(mixture-18,mixture-18-sense)
is_a(mixture-18-sense,concoction.n.01)
has_sense(be-19,be-19-sense)
is_a(be-19-sense,be.v.01)
root(ROOT-0, Stir-1)
det(icing_sugar-4, the-3)
prep_in(Stir-1, icing_sugar-4)
conj_and(icing_sugar-4, butter-6)
conj_and(Stir-1, stir-8)
dobj(stir-8, it-9)
mark(melt-15, until-11)
det(butter-13, the-12)
nsubj(melt-15, butter-13)
aux(melt-15, have-14)
prepc_in(stir-8, melt-15)
det(mixture-18, the-17)
nsubj(smooth-20, mixture-18)
cop(smooth-20, be-19)
conj_and(melt-15, smooth-20)
has_pos(Stir-1,VB)
has_pos(the-3,DT)
has_pos(icing_sugar-4,NN)
has_pos(butter-6,NN)
has_pos(stir-8,VB)
has_pos(it-9,PRP)
has_pos(until-11,IN)
has_pos(the-12,DT)
has_pos(butter-13,NN)
has_pos(have-14,VBP)
has_pos(melt-15,VBN)
has_pos(the-17,DT)
has_pos(mixture-18,NN)
has_pos(be-19,VB)
has_pos(smooth-20,JJ)
has_sense(the-17, null)
has_sense(until-11, null)
has_sense(the-3, null)
has_sense(smooth-20, null)
has_sense(the-12, null)
has_sense(stir-8, null)
has_sense(Stir-1, null)
has_sense(it-9, null)
---
// This will prevent your milk from burning , and you should only have to stir it occasionally .
has_sense(prevent-3,prevent-3-sense)
is_a(prevent-3-sense,prevent.v.01)
has_sense(milk-5,milk-5-sense)
is_a(milk-5-sense,milk.n.01)
has_sense(only-12,only-12-sense)
is_a(only-12-sense,merely.r.01)
has_sense(have-13,have-13-sense)
is_a(have-13-sense,experience.v.03)
has_sense(stir-15,stir-15-sense)
is_a(stir-15-sense,stir.v.01)
has_sense(occasionally-17,occasionally-17-sense)
is_a(occasionally-17-sense,occasionally.r.01)
nsubj(prevent-3, This-1)
aux(prevent-3, will-2)
root(ROOT-0, prevent-3)
poss(milk-5, your-4)
dobj(prevent-3, milk-5)
prep_from(prevent-3, burning-7)
nsubj(have-13, you-10)
aux(have-13, should-11)
advmod(have-13, only-12)
conj_and(prevent-3, have-13)
aux(stir-15, to-14)
xcomp(have-13, stir-15)
dobj(stir-15, it-16)
advmod(stir-15, occasionally-17)
has_pos(This-1,DT)
has_pos(will-2,MD)
has_pos(prevent-3,VB)
has_pos(your-4,PRP$)
has_pos(milk-5,NN)
has_pos(burning-7,NN)
has_pos(you-10,PRP)
has_pos(should-11,MD)
has_pos(only-12,RB)
has_pos(have-13,VB)
has_pos(to-14,TO)
has_pos(stir-15,VB)
has_pos(it-16,PRP)
has_pos(occasionally-17,RB)
has_sense(your-4, null)
has_sense(will-2, null)
has_sense(it-16, null)
has_sense(This-1, null)
has_sense(should-11, null)
has_sense(burning-7, null)
has_sense(to-14, null)
has_sense(you-10, null)
---
// break two eggs into the bowl and stir together with a spoon .
has_sense(break-1,break-1-sense)
is_a(break-1-sense,break.v.05)
has_sense(eggs-3,eggs-3-sense)
is_a(eggs-3-sense,egg.n.02)
has_sense(bowl-6,bowl-6-sense)
is_a(bowl-6-sense,bowl.n.01)
has_sense(stir-8,stir-8-sense)
is_a(stir-8-sense,stir.v.01)
has_sense(together-9,together-9-sense)
is_a(together-9-sense,together.r.01)
has_sense(spoon-12,spoon-12-sense)
is_a(spoon-12-sense,spoon.n.01)
root(ROOT-0, break-1)
num(eggs-3, two-2)
dobj(break-1, eggs-3)
det(bowl-6, the-5)
prep_into(break-1, bowl-6)
conj_and(break-1, stir-8)
det(spoon-12, a-11)
prep_together_with(stir-8, spoon-12)
has_pos(break-1,VB)
has_pos(two-2,CD)
has_pos(eggs-3,NNS)
has_pos(the-5,DT)
has_pos(bowl-6,NN)
has_pos(stir-8,VB)
has_pos(a-11,DT)
has_pos(spoon-12,NN)
has_sense(two-2, null)
has_sense(a-11, null)
has_sense(the-5, null)
---
// sprinkle yeast over warm water and stir until well mixed .
has_sense(sprinkle-1,sprinkle-1-sense)
is_a(sprinkle-1-sense,scatter.v.03)
has_sense(yeast-2,yeast-2-sense)
is_a(yeast-2-sense,yeast.n.01)
has_sense(warm-4,warm-4-sense)
is_a(warm-4-sense,warm.a.01)
has_sense(water-5,water-5-sense)
is_a(water-5-sense,water.n.06)
has_sense(stir-7,stir-7-sense)
is_a(stir-7-sense,stir.v.01)
has_sense(well-9,well-9-sense)
is_a(well-9-sense,well.r.02)
root(ROOT-0, sprinkle-1)
dobj(sprinkle-1, yeast-2)
amod(water-5, warm-4)
prep_over(sprinkle-1, water-5)
conj_and(sprinkle-1, stir-7)
advmod(mixed-10, well-9)
prep_until(stir-7, mixed-10)
has_pos(sprinkle-1,VB)
has_pos(yeast-2,NN)
has_pos(warm-4,JJ)
has_pos(water-5,NN)
has_pos(stir-7,VB)
has_pos(well-9,RB)
has_pos(mixed-10,JJ)
has_sense(mixed-10, null)
---
// add chicken piece to this mix and stir coat the chicken thoroughly .
has_sense(add-1,add-1-sense)
is_a(add-1-sense,add.v.01)
has_sense(chicken-2,chicken-2-sense)
is_a(chicken-2-sense,chicken.n.01)
has_sense(piece-3,piece-3-sense)
is_a(piece-3-sense,piece.n.01)
has_sense(mix-6,mix-6-sense)
is_a(mix-6-sense,mix.n.01)
has_sense(coat-9,coat-9-sense)
is_a(coat-9-sense,coat.v.01)
has_sense(chicken-11,chicken-11-sense)
is_a(chicken-11-sense,chicken.n.01)
has_sense(thoroughly-12,thoroughly-12-sense)
is_a(thoroughly-12-sense,thoroughly.r.02)
root(ROOT-0, add-1)
nn(piece-3, chicken-2)
dobj(add-1, piece-3)
det(mix-6, this-5)
prep_to(add-1, mix-6)
conj_and(add-1, stir-8)
xcomp(stir-8, coat-9)
det(chicken-11, the-10)
dobj(coat-9, chicken-11)
advmod(coat-9, thoroughly-12)
has_pos(add-1,VB)
has_pos(chicken-2,NN)
has_pos(piece-3,NN)
has_pos(this-5,DT)
has_pos(mix-6,NN)
has_pos(stir-8,VB)
has_pos(coat-9,VBG)
has_pos(the-10,DT)
has_pos(chicken-11,NN)
has_pos(thoroughly-12,RB)
has_sense(this-5, null)
has_sense(stir-8, null)
has_sense(the-10, null)
---
// Stir ingredient with a spoon .
has_sense(ingredient-2,ingredient-2-sense)
is_a(ingredient-2-sense,ingredient.n.03)
has_sense(spoon-5,spoon-5-sense)
is_a(spoon-5-sense,spoon.n.01)
root(ROOT-0, Stir-1)
dobj(Stir-1, ingredient-2)
det(spoon-5, a-4)
prep_with(Stir-1, spoon-5)
has_pos(Stir-1,VB)
has_pos(ingredient-2,NN)
has_pos(a-4,DT)
has_pos(spoon-5,NN)
has_sense(Stir-1, null)
has_sense(a-4, null)
---
// stir into macaroni mixture .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(macaroni-3,macaroni-3-sense)
is_a(macaroni-3-sense,macaroni.n.02)
has_sense(mixture-4,mixture-4-sense)
is_a(mixture-4-sense,concoction.n.01)
root(ROOT-0, stir-1)
amod(mixture-4, macaroni-3)
prep_into(stir-1, mixture-4)
has_pos(stir-1,VB)
has_pos(macaroni-3,JJ)
has_pos(mixture-4,NN)
---
// add 2 cup flour and stir well .
has_sense(add-1,add-1-sense)
is_a(add-1-sense,add.v.01)
has_sense(cup-3,cup-3-sense)
is_a(cup-3-sense,cup.n.04)
has_sense(stir-6,stir-6-sense)
is_a(stir-6-sense,stir.v.01)
has_sense(well-7,well-7-sense)
is_a(well-7-sense,well.r.02)
root(ROOT-0, add-1)
num(flour-4, 2-2)
nn(flour-4, cup-3)
dobj(add-1, flour-4)
conj_and(add-1, stir-6)
advmod(stir-6, well-7)
has_pos(add-1,VB)
has_pos(2-2,CD)
has_pos(cup-3,NN)
has_pos(flour-4,NN)
has_pos(stir-6,VB)
has_pos(well-7,RB)
has_sense(2-2, null)
has_sense(flour-4, null)
---
// do a little at a time , then stop to stir it up and add some salt .
has_sense(do-1,do-1-sense)
is_a(do-1-sense,make.v.01)
has_sense(little-3,little-3-sense)
is_a(little-3-sense,small.a.01)
has_sense(time-6,time-6-sense)
is_a(time-6-sense,time.n.01)
has_sense(then-8,then-8-sense)
is_a(then-8-sense,then.r.01)
has_sense(stop-9,stop-9-sense)
is_a(stop-9-sense,stop.v.01)
has_sense(stir-11,stir-11-sense)
is_a(stir-11-sense,stir.v.01)
has_sense(add-15,add-15-sense)
is_a(add-15-sense,add.v.01)
has_sense(salt-17,salt-17-sense)
is_a(salt-17-sense,salt.n.02)
root(ROOT-0, do-1)
det(little-3, a-2)
npadvmod(do-1, little-3)
det(time-6, a-5)
prep_at(do-1, time-6)
advmod(stop-9, then-8)
conj_and(do-1, stop-9)
aux(stir-11, to-10)
xcomp(stop-9, stir-11)
dobj(stir-11, it-12)
prt(stir-11, up-13)
conj_and(do-1, add-15)
det(salt-17, some-16)
dobj(add-15, salt-17)
has_pos(do-1,VB)
has_pos(a-2,DT)
has_pos(little-3,JJ)
has_pos(a-5,DT)
has_pos(time-6,NN)
has_pos(then-8,RB)
has_pos(stop-9,VB)
has_pos(to-10,TO)
has_pos(stir-11,VB)
has_pos(it-12,PRP)
has_pos(up-13,RP)
has_pos(add-15,VB)
has_pos(some-16,DT)
has_pos(salt-17,NN)
has_sense(some-16, null)
has_sense(it-12, null)
has_sense(up-13, null)
has_sense(to-10, null)
has_sense(a-2, null)
has_sense(a-5, null)
---
// Stir in the water and 1 teaspoon of the vanilla .
has_sense(water-4,water-4-sense)
is_a(water-4-sense,water.n.06)
has_sense(teaspoon-7,teaspoon-7-sense)
is_a(teaspoon-7-sense,teaspoon.n.01)
has_sense(vanilla-10,vanilla-10-sense)
is_a(vanilla-10-sense,vanilla.n.02)
root(ROOT-0, Stir-1)
det(water-4, the-3)
prep_in(Stir-1, water-4)
num(teaspoon-7, 1-6)
conj_and(water-4, teaspoon-7)
det(vanilla-10, the-9)
prep_of(Stir-1, vanilla-10)
has_pos(Stir-1,NNP)
has_pos(the-3,DT)
has_pos(water-4,NN)
has_pos(1-6,CD)
has_pos(teaspoon-7,NN)
has_pos(the-9,DT)
has_pos(vanilla-10,NN)
has_sense(the-3, null)
has_sense(the-9, null)
has_sense(1-6, null)
has_sense(Stir-1, null)
---
// stir in the cornstarch in broth or water , and bring to a boil to thicken .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.08)
has_sense(cornstarch-4,cornstarch-4-sense)
is_a(cornstarch-4-sense,cornstarch.n.01)
has_sense(broth-6,broth-6-sense)
is_a(broth-6-sense,broth.n.01)
has_sense(water-8,water-8-sense)
is_a(water-8-sense,water.n.06)
has_sense(bring-11,bring-11-sense)
is_a(bring-11-sense,bring.v.02)
has_sense(boil-14,boil-14-sense)
is_a(boil-14-sense,boiling_point.n.01)
has_sense(thicken-16,thicken-16-sense)
is_a(thicken-16-sense,thicken.v.01)
root(ROOT-0, stir-1)
det(cornstarch-4, the-3)
prep_in(stir-1, cornstarch-4)
prep_in(cornstarch-4, broth-6)
conj_or(broth-6, water-8)
conj_and(stir-1, bring-11)
det(boil-14, a-13)
prep_to(bring-11, boil-14)
prep_to(bring-11, thicken-16)
has_pos(stir-1,VB)
has_pos(the-3,DT)
has_pos(cornstarch-4,NN)
has_pos(broth-6,NN)
has_pos(water-8,NN)
has_pos(bring-11,VB)
has_pos(a-13,DT)
has_pos(boil-14,NN)
has_pos(thicken-16,NN)
has_sense(the-3, null)
has_sense(a-13, null)
---
// Stir in and the syrup be ready for use .
has_sense(syrup-5,syrup-5-sense)
is_a(syrup-5-sense,syrup.n.01)
has_sense(be-6,be-6-sense)
is_a(be-6-sense,be.v.01)
has_sense(ready-7,ready-7-sense)
is_a(ready-7-sense,ready.a.01)
nsubj(ready-7, Stir-1)
dep(Stir-1, in-2)
det(syrup-5, the-4)
conj_and(Stir-1, syrup-5)
cop(ready-7, be-6)
root(ROOT-0, ready-7)
prep_for(ready-7, use-9)
has_pos(Stir-1,NN)
has_pos(in-2,RP)
has_pos(the-4,DT)
has_pos(syrup-5,NN)
has_pos(be-6,VB)
has_pos(ready-7,JJ)
has_pos(use-9,NN)
has_sense(in-2, null)
has_sense(the-4, null)
has_sense(use-9, null)
has_sense(Stir-1, null)
---
// Stir in milk mixture .
has_sense(milk-3,milk-3-sense)
is_a(milk-3-sense,milk.n.01)
has_sense(mixture-4,mixture-4-sense)
is_a(mixture-4-sense,concoction.n.01)
root(ROOT-0, Stir-1)
nn(mixture-4, milk-3)
prep_in(Stir-1, mixture-4)
has_pos(Stir-1,NNP)
has_pos(milk-3,NN)
has_pos(mixture-4,NN)
has_sense(Stir-1, null)
---
// add the marinate liquid when the pieces be cooked and stir mixture .
has_sense(add-1,add-1-sense)
is_a(add-1-sense,add.v.01)
has_sense(be-8,be-8-sense)
is_a(be-8-sense,be.v.01)
has_sense(stir-11,stir-11-sense)
is_a(stir-11-sense,stir.v.08)
has_sense(mixture-12,mixture-12-sense)
is_a(mixture-12-sense,concoction.n.01)
root(ROOT-0, add-1)
det(marinate-3, the-2)
nsubjpass(cooked-9, marinate-3)
dep(cooked-9, liquid-4)
advmod(cooked-9, when-5)
det(pieces-7, the-6)
nsubjpass(cooked-9, pieces-7)
auxpass(cooked-9, be-8)
xcomp(add-1, cooked-9)
conj_and(cooked-9, stir-11)
dobj(stir-11, mixture-12)
has_pos(add-1,VB)
has_pos(the-2,DT)
has_pos(marinate-3,NN)
has_pos(liquid-4,JJ)
has_pos(when-5,WRB)
has_pos(the-6,DT)
has_pos(pieces-7,NNS)
has_pos(be-8,VB)
has_pos(cooked-9,VBN)
has_pos(stir-11,VB)
has_pos(mixture-12,NN)
has_sense(the-6, null)
has_sense(the-2, null)
has_sense(cooked-9, null)
has_sense(when-5, null)
has_sense(marinate-3, null)
has_sense(liquid-4, null)
has_sense(pieces-7, null)
---
// stir the mixture .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(mixture-3,mixture-3-sense)
is_a(mixture-3-sense,concoction.n.01)
root(ROOT-0, stir-1)
det(mixture-3, the-2)
dobj(stir-1, mixture-3)
has_pos(stir-1,VB)
has_pos(the-2,DT)
has_pos(mixture-3,NN)
has_sense(the-2, null)
---
// Stir in the rest of the hot water .
has_sense(rest-4,rest-4-sense)
is_a(rest-4-sense,remainder.n.01)
root(ROOT-0, Stir-1)
det(rest-4, the-3)
prep_in(Stir-1, rest-4)
det(water-8, the-6)
amod(water-8, hot-7)
prep_of(Stir-1, water-8)
has_pos(Stir-1,NNP)
has_pos(the-3,DT)
has_pos(rest-4,NN)
has_pos(the-6,DT)
has_pos(hot-7,JJ)
has_pos(water-8,NN)
has_sense(the-6, null)
has_sense(the-3, null)
has_sense(hot-7, null)
has_sense(water-8, null)
has_sense(Stir-1, null)
---
// stir with a gradually quickening motion .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(quickening-5,quickening-5-sense)
is_a(quickening-5-sense,acceleration.n.02)
root(ROOT-0, stir-1)
det(motion-6, a-3)
advmod(quickening-5, gradually-4)
amod(motion-6, quickening-5)
prep_with(stir-1, motion-6)
has_pos(stir-1,VB)
has_pos(a-3,DT)
has_pos(gradually-4,RB)
has_pos(quickening-5,JJ)
has_pos(motion-6,NN)
has_sense(a-3, null)
has_sense(motion-6, null)
has_sense(gradually-4, null)
---
// stir them in .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.08)
root(ROOT-0, stir-1)
dobj(stir-1, them-2)
prep(stir-1, in-3)
has_pos(stir-1,VB)
has_pos(them-2,PRP)
has_pos(in-3,IN)
has_sense(them-2, null)
has_sense(in-3, null)
---
// pour in the marsala wine and , use a wooden_spoon , stir mushrooms and wine until the wine have almost completely evaporate .
has_sense(pour-1,pour-1-sense)
is_a(pour-1-sense,pour.v.01)
has_sense(marsala-4,marsala-4-sense)
is_a(marsala-4-sense,marsala.n.01)
has_sense(wine-5,wine-5-sense)
is_a(wine-5-sense,wine.n.01)
has_sense(use-8,use-8-sense)
is_a(use-8-sense,use.v.01)
has_sense(wooden_spoon-10,wooden_spoon-10-sense)
is_a(wooden_spoon-10-sense,wooden_spoon.n.02)
has_sense(stir-12,stir-12-sense)
is_a(stir-12-sense,stir.v.01)
has_sense(wine-15,wine-15-sense)
is_a(wine-15-sense,wine.n.01)
has_sense(wine-18,wine-18-sense)
is_a(wine-18-sense,wine.n.01)
has_sense(have-19,have-19-sense)
is_a(have-19-sense,have.v.01)
has_sense(almost-20,almost-20-sense)
is_a(almost-20-sense,about.r.07)
has_sense(completely-21,completely-21-sense)
is_a(completely-21-sense,wholly.r.01)
has_sense(evaporate-22,evaporate-22-sense)
is_a(evaporate-22-sense,evaporate.v.01)
root(ROOT-0, pour-1)
det(wine-5, the-3)
nn(wine-5, marsala-4)
prep_in(pour-1, wine-5)
conj_and(pour-1, use-8)
det(wooden_spoon-10, a-9)
dobj(use-8, wooden_spoon-10)
dep(pour-1, stir-12)
dobj(stir-12, mushrooms-13)
conj_and(mushrooms-13, wine-15)
mark(evaporate-22, until-16)
det(wine-18, the-17)
nsubj(evaporate-22, wine-18)
aux(evaporate-22, have-19)
advmod(completely-21, almost-20)
advmod(evaporate-22, completely-21)
advcl(stir-12, evaporate-22)
has_pos(pour-1,VB)
has_pos(the-3,DT)
has_pos(marsala-4,NN)
has_pos(wine-5,NN)
has_pos(use-8,VB)
has_pos(a-9,DT)
has_pos(wooden_spoon-10,NN)
has_pos(stir-12,VB)
has_pos(mushrooms-13,NNS)
has_pos(wine-15,NN)
has_pos(until-16,IN)
has_pos(the-17,DT)
has_pos(wine-18,NN)
has_pos(have-19,VBP)
has_pos(almost-20,RB)
has_pos(completely-21,RB)
has_pos(evaporate-22,VBN)
has_sense(the-3, null)
has_sense(a-9, null)
has_sense(mushrooms-13, null)
has_sense(the-17, null)
has_sense(until-16, null)
---
// Stir flour mixture into creamy mixture .
has_sense(mixture-3,mixture-3-sense)
is_a(mixture-3-sense,concoction.n.01)
has_sense(creamy-5,creamy-5-sense)
is_a(creamy-5-sense,creamy.s.02)
has_sense(mixture-6,mixture-6-sense)
is_a(mixture-6-sense,concoction.n.01)
nsubj(flour-2, Stir-1)
root(ROOT-0, flour-2)
dobj(flour-2, mixture-3)
amod(mixture-6, creamy-5)
prep_into(flour-2, mixture-6)
has_pos(Stir-1,NNP)
has_pos(flour-2,VBP)
has_pos(mixture-3,NN)
has_pos(creamy-5,JJ)
has_pos(mixture-6,NN)
has_sense(Stir-1, null)
has_sense(flour-2, null)
---
// stir into the soaked oat , along with the honey .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(oat-5,oat-5-sense)
is_a(oat-5-sense,oat.n.02)
has_sense(honey-10,honey-10-sense)
is_a(honey-10-sense,honey.n.01)
root(ROOT-0, stir-1)
det(oat-5, the-3)
amod(oat-5, soaked-4)
prep_into(stir-1, oat-5)
det(honey-10, the-9)
prep_along_with(oat-5, honey-10)
has_pos(stir-1,VB)
has_pos(the-3,DT)
has_pos(soaked-4,JJ)
has_pos(oat-5,NN)
has_pos(the-9,DT)
has_pos(honey-10,NN)
has_sense(soaked-4, null)
has_sense(the-3, null)
has_sense(the-9, null)
---
// stir until a batter forms .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(batter-4,batter-4-sense)
is_a(batter-4-sense,batter.n.02)
root(ROOT-0, stir-1)
det(forms-5, a-3)
nn(forms-5, batter-4)
prep_until(stir-1, forms-5)
has_pos(stir-1,VB)
has_pos(a-3,DT)
has_pos(batter-4,NN)
has_pos(forms-5,NNS)
has_sense(forms-5, null)
has_sense(a-3, null)
---
// add mozzarella and basil and stir until cheese melt .
has_sense(add-1,add-1-sense)
is_a(add-1-sense,add.v.01)
has_sense(mozzarella-2,mozzarella-2-sense)
is_a(mozzarella-2-sense,mozzarella.n.01)
has_sense(basil-4,basil-4-sense)
is_a(basil-4-sense,basil.n.03)
has_sense(stir-6,stir-6-sense)
is_a(stir-6-sense,stir.v.01)
has_sense(cheese-8,cheese-8-sense)
is_a(cheese-8-sense,cheese.n.01)
has_sense(melt-9,melt-9-sense)
is_a(melt-9-sense,melt.v.01)
root(ROOT-0, add-1)
dobj(add-1, mozzarella-2)
conj_and(mozzarella-2, basil-4)
conj_and(add-1, stir-6)
nn(melt-9, cheese-8)
prep_until(stir-6, melt-9)
has_pos(add-1,VB)
has_pos(mozzarella-2,NN)
has_pos(basil-4,NN)
has_pos(stir-6,VB)
has_pos(cheese-8,NN)
has_pos(melt-9,NNS)
---
// stir well .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.08)
has_sense(well-2,well-2-sense)
is_a(well-2-sense,well.r.01)
root(ROOT-0, stir-1)
advmod(stir-1, well-2)
has_pos(stir-1,VB)
has_pos(well-2,RB)
---
// stir the noodle frequently to prevent stick .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(noodle-3,noodle-3-sense)
is_a(noodle-3-sense,noodle.n.01)
has_sense(frequently-4,frequently-4-sense)
is_a(frequently-4-sense,frequently.r.01)
has_sense(prevent-6,prevent-6-sense)
is_a(prevent-6-sense,prevent.v.01)
has_sense(stick-7,stick-7-sense)
is_a(stick-7-sense,adhere.v.06)
root(ROOT-0, stir-1)
det(noodle-3, the-2)
nsubj(prevent-6, noodle-3)
advmod(prevent-6, frequently-4)
aux(prevent-6, to-5)
xcomp(stir-1, prevent-6)
dobj(prevent-6, stick-7)
has_pos(stir-1,VB)
has_pos(the-2,DT)
has_pos(noodle-3,NN)
has_pos(frequently-4,RB)
has_pos(to-5,TO)
has_pos(prevent-6,VB)
has_pos(stick-7,NN)
has_sense(the-2, null)
has_sense(to-5, null)
---
// Stir well until the pesto cover the tortellini evenly .
has_sense(well-2,well-2-sense)
is_a(well-2-sense,well.r.01)
has_sense(pesto-5,pesto-5-sense)
is_a(pesto-5-sense,pesto.n.01)
has_sense(cover-6,cover-6-sense)
is_a(cover-6-sense,cover.v.02)
has_sense(tortellini-8,tortellini-8-sense)
is_a(tortellini-8-sense,tortellini.n.01)
has_sense(evenly-9,evenly-9-sense)
is_a(evenly-9-sense,evenly.r.01)
nsubj(cover-6, Stir-1)
advmod(cover-6, well-2)
det(pesto-5, the-4)
prep_until(well-2, pesto-5)
root(ROOT-0, cover-6)
det(tortellini-8, the-7)
dobj(cover-6, tortellini-8)
advmod(cover-6, evenly-9)
has_pos(Stir-1,NNP)
has_pos(well-2,RB)
has_pos(the-4,DT)
has_pos(pesto-5,NN)
has_pos(cover-6,VBP)
has_pos(the-7,DT)
has_pos(tortellini-8,NN)
has_pos(evenly-9,RB)
has_sense(Stir-1, null)
has_sense(the-7, null)
has_sense(the-4, null)
---
// Stir well to ensure the slice be evenly coat .
has_sense(well-2,well-2-sense)
is_a(well-2-sense,well.r.01)
has_sense(ensure-4,ensure-4-sense)
is_a(ensure-4-sense,guarantee.v.02)
has_sense(slice-6,slice-6-sense)
is_a(slice-6-sense,piece.n.08)
has_sense(be-7,be-7-sense)
is_a(be-7-sense,be.v.01)
has_sense(evenly-8,evenly-8-sense)
is_a(evenly-8-sense,evenly.r.01)
has_sense(coat-9,coat-9-sense)
is_a(coat-9-sense,coat.v.01)
root(ROOT-0, Stir-1)
advmod(Stir-1, well-2)
aux(ensure-4, to-3)
xcomp(Stir-1, ensure-4)
det(slice-6, the-5)
nsubj(coat-9, slice-6)
cop(coat-9, be-7)
advmod(coat-9, evenly-8)
ccomp(ensure-4, coat-9)
has_pos(Stir-1,VB)
has_pos(well-2,RB)
has_pos(to-3,TO)
has_pos(ensure-4,VB)
has_pos(the-5,DT)
has_pos(slice-6,NN)
has_pos(be-7,VB)
has_pos(evenly-8,RB)
has_pos(coat-9,JJ)
has_sense(Stir-1, null)
has_sense(the-5, null)
has_sense(to-3, null)
---
// Stir in the vanilla .
has_sense(vanilla-4,vanilla-4-sense)
is_a(vanilla-4-sense,vanilla.n.02)
root(ROOT-0, Stir-1)
det(vanilla-4, the-3)
prep_in(Stir-1, vanilla-4)
has_pos(Stir-1,NNP)
has_pos(the-3,DT)
has_pos(vanilla-4,NN)
has_sense(Stir-1, null)
has_sense(the-3, null)
---
// Stir mince around until it turn completely brown .
has_sense(turn-6,turn-6-sense)
is_a(turn-6-sense,change_state.v.01)
has_sense(completely-7,completely-7-sense)
is_a(completely-7-sense,wholly.r.01)
has_sense(brown-8,brown-8-sense)
is_a(brown-8-sense,brown.s.01)
nsubj(mince-2, Stir-1)
root(ROOT-0, mince-2)
prt(mince-2, around-3)
mark(turn-6, until-4)
nsubj(turn-6, it-5)
advcl(mince-2, turn-6)
advmod(brown-8, completely-7)
acomp(turn-6, brown-8)
has_pos(Stir-1,NNP)
has_pos(mince-2,VB)
has_pos(around-3,RP)
has_pos(until-4,IN)
has_pos(it-5,PRP)
has_pos(turn-6,VBP)
has_pos(completely-7,RB)
has_pos(brown-8,JJ)
has_sense(mince-2, null)
has_sense(it-5, null)
has_sense(around-3, null)
has_sense(Stir-1, null)
has_sense(until-4, null)
---
// Stir until combine .
has_sense(combine-3,combine-3-sense)
is_a(combine-3-sense,compound.v.05)
nsubj(combine-3, Stir-1)
advmod(combine-3, until-2)
root(ROOT-0, combine-3)
has_pos(Stir-1,NNP)
has_pos(until-2,IN)
has_pos(combine-3,VBP)
has_sense(Stir-1, null)
has_sense(until-2, null)
---
// stir occasionally , and allow the noodle to get soft .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(occasionally-2,occasionally-2-sense)
is_a(occasionally-2-sense,occasionally.r.01)
has_sense(allow-5,allow-5-sense)
is_a(allow-5-sense,let.v.01)
has_sense(noodle-7,noodle-7-sense)
is_a(noodle-7-sense,noodle.n.01)
has_sense(get-9,get-9-sense)
is_a(get-9-sense,become.v.01)
has_sense(soft-10,soft-10-sense)
is_a(soft-10-sense,soft.a.01)
root(ROOT-0, stir-1)
advmod(stir-1, occasionally-2)
conj_and(stir-1, allow-5)
det(noodle-7, the-6)
dobj(allow-5, noodle-7)
aux(soft-10, to-8)
dep(soft-10, get-9)
infmod(noodle-7, soft-10)
has_pos(stir-1,VB)
has_pos(occasionally-2,RB)
has_pos(allow-5,VB)
has_pos(the-6,DT)
has_pos(noodle-7,NN)
has_pos(to-8,TO)
has_pos(get-9,VB)
has_pos(soft-10,JJ)
has_sense(to-8, null)
has_sense(the-6, null)
---
// stir well and add a pinch of salt and pepper to taste .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(well-2,well-2-sense)
is_a(well-2-sense,well.r.02)
has_sense(add-4,add-4-sense)
is_a(add-4-sense,add.v.01)
has_sense(pinch-6,pinch-6-sense)
is_a(pinch-6-sense,touch.n.06)
has_sense(salt-8,salt-8-sense)
is_a(salt-8-sense,salt.n.02)
has_sense(pepper-10,pepper-10-sense)
is_a(pepper-10-sense,pepper.n.03)
has_sense(taste-12,taste-12-sense)
is_a(taste-12-sense,preference.n.01)
root(ROOT-0, stir-1)
advmod(stir-1, well-2)
conj_and(stir-1, add-4)
det(pinch-6, a-5)
dobj(add-4, pinch-6)
prep_of(pinch-6, salt-8)
conj_and(salt-8, pepper-10)
prep_to(add-4, taste-12)
has_pos(stir-1,VB)
has_pos(well-2,RB)
has_pos(add-4,VB)
has_pos(a-5,DT)
has_pos(pinch-6,NN)
has_pos(salt-8,NN)
has_pos(pepper-10,NN)
has_pos(taste-12,NN)
has_sense(a-5, null)
---
// then add a half cup of milk and stir till the rice absorb all of the liquid .
has_sense(then-1,then-1-sense)
is_a(then-1-sense,then.r.01)
has_sense(add-2,add-2-sense)
is_a(add-2-sense,add.v.01)
has_sense(half-4,half-4-sense)
is_a(half-4-sense,half.s.01)
has_sense(cup-5,cup-5-sense)
is_a(cup-5-sense,cup.n.04)
has_sense(milk-7,milk-7-sense)
is_a(milk-7-sense,milk.n.01)
has_sense(stir-9,stir-9-sense)
is_a(stir-9-sense,stir.v.01)
has_sense(rice-12,rice-12-sense)
is_a(rice-12-sense,rice.n.01)
has_sense(absorb-13,absorb-13-sense)
is_a(absorb-13-sense,absorb.v.04)
has_sense(liquid-17,liquid-17-sense)
is_a(liquid-17-sense,liquid.n.01)
advmod(add-2, then-1)
root(ROOT-0, add-2)
det(cup-5, a-3)
amod(cup-5, half-4)
dobj(add-2, cup-5)
prep_of(cup-5, milk-7)
conj_and(add-2, stir-9)
mark(absorb-13, till-10)
det(rice-12, the-11)
nsubj(absorb-13, rice-12)
advcl(stir-9, absorb-13)
dobj(absorb-13, all-14)
det(liquid-17, the-16)
prep_of(all-14, liquid-17)
has_pos(then-1,RB)
has_pos(add-2,VB)
has_pos(a-3,DT)
has_pos(half-4,JJ)
has_pos(cup-5,NN)
has_pos(milk-7,NN)
has_pos(stir-9,VB)
has_pos(till-10,IN)
has_pos(the-11,DT)
has_pos(rice-12,NN)
has_pos(absorb-13,VBP)
has_pos(all-14,DT)
has_pos(the-16,DT)
has_pos(liquid-17,NN)
has_sense(till-10, null)
has_sense(all-14, null)
has_sense(the-16, null)
has_sense(a-3, null)
has_sense(the-11, null)
---
// stir occasionally and do n't turn it too much , as you want it to get nicely brown all over .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(occasionally-2,occasionally-2-sense)
is_a(occasionally-2-sense,occasionally.r.01)
has_sense(turn-6,turn-6-sense)
is_a(turn-6-sense,turn.v.04)
has_sense(too-8,too-8-sense)
is_a(too-8-sense,excessively.r.01)
has_sense(much-9,much-9-sense)
is_a(much-9-sense,much.r.01)
has_sense(want-13,want-13-sense)
is_a(want-13-sense,desire.v.01)
has_sense(get-16,get-16-sense)
is_a(get-16-sense,become.v.01)
has_sense(nicely-17,nicely-17-sense)
is_a(nicely-17-sense,nicely.r.01)
has_sense(brown-18,brown-18-sense)
is_a(brown-18-sense,brown.v.01)
root(ROOT-0, stir-1)
advmod(stir-1, occasionally-2)
aux(turn-6, do-4)
neg(turn-6, n't-5)
conj_and(stir-1, turn-6)
dobj(turn-6, it-7)
advmod(much-9, too-8)
advmod(turn-6, much-9)
mark(want-13, as-11)
nsubj(want-13, you-12)
advcl(turn-6, want-13)
nsubj(get-16, it-14)
aux(get-16, to-15)
xcomp(want-13, get-16)
advmod(brown-18, nicely-17)
advmod(get-16, brown-18)
dep(over-20, all-19)
advmod(get-16, over-20)
has_pos(stir-1,VB)
has_pos(occasionally-2,RB)
has_pos(do-4,VBP)
has_pos(n't-5,RB)
has_pos(turn-6,VB)
has_pos(it-7,PRP)
has_pos(too-8,RB)
has_pos(much-9,RB)
has_pos(as-11,IN)
has_pos(you-12,PRP)
has_pos(want-13,VBP)
has_pos(it-14,PRP)
has_pos(to-15,TO)
has_pos(get-16,VB)
has_pos(nicely-17,RB)
has_pos(brown-18,RB)
has_pos(all-19,DT)
has_pos(over-20,RP)
has_sense(it-14, null)
has_sense(as-11, null)
has_sense(n't-5, null)
has_sense(over-20, null)
has_sense(all-19, null)
has_sense(it-7, null)
has_sense(to-15, null)
has_sense(do-4, null)
has_sense(you-12, null)
---
// Stir till smooth .
has_sense(smooth-3,smooth-3-sense)
is_a(smooth-3-sense,smooth.a.01)
nsubj(till-2, Stir-1)
root(ROOT-0, till-2)
acomp(till-2, smooth-3)
has_pos(Stir-1,NNP)
has_pos(till-2,VBZ)
has_pos(smooth-3,JJ)
has_sense(Stir-1, null)
has_sense(till-2, null)
---
// add the milk and stir constantly until the mixture get thick .
has_sense(add-1,add-1-sense)
is_a(add-1-sense,add.v.01)
has_sense(milk-3,milk-3-sense)
is_a(milk-3-sense,milk.n.01)
has_sense(stir-5,stir-5-sense)
is_a(stir-5-sense,stir.v.01)
has_sense(constantly-6,constantly-6-sense)
is_a(constantly-6-sense,constantly.r.02)
has_sense(mixture-9,mixture-9-sense)
is_a(mixture-9-sense,concoction.n.01)
has_sense(get-10,get-10-sense)
is_a(get-10-sense,become.v.01)
has_sense(thick-11,thick-11-sense)
is_a(thick-11-sense,thick.a.03)
root(ROOT-0, add-1)
det(milk-3, the-2)
dobj(add-1, milk-3)
conj_and(add-1, stir-5)
advmod(stir-5, constantly-6)
mark(thick-11, until-7)
det(mixture-9, the-8)
nsubj(thick-11, mixture-9)
dep(thick-11, get-10)
advcl(stir-5, thick-11)
has_pos(add-1,VB)
has_pos(the-2,DT)
has_pos(milk-3,NN)
has_pos(stir-5,VB)
has_pos(constantly-6,RB)
has_pos(until-7,IN)
has_pos(the-8,DT)
has_pos(mixture-9,NN)
has_pos(get-10,VBP)
has_pos(thick-11,JJ)
has_sense(until-7, null)
has_sense(the-2, null)
has_sense(the-8, null)
---
// Stir until well blend .
has_sense(well-3,well-3-sense)
is_a(well-3-sense,well.r.01)
has_sense(blend-4,blend-4-sense)
is_a(blend-4-sense,blend.v.01)
nsubj(blend-4, Stir-1)
advmod(blend-4, until-2)
advmod(until-2, well-3)
root(ROOT-0, blend-4)
has_pos(Stir-1,NNP)
has_pos(until-2,IN)
has_pos(well-3,RB)
has_pos(blend-4,VB)
has_sense(Stir-1, null)
has_sense(until-2, null)
---
// scald milk and stir in 2 cup quick oat .
has_sense(scald-1,scald-1-sense)
is_a(scald-1-sense,scald.v.03)
has_sense(milk-2,milk-2-sense)
is_a(milk-2-sense,milk.n.01)
has_sense(stir-4,stir-4-sense)
is_a(stir-4-sense,stir.v.01)
has_sense(cup-7,cup-7-sense)
is_a(cup-7-sense,cup.n.04)
has_sense(quick-8,quick-8-sense)
is_a(quick-8-sense,quick.s.01)
has_sense(oat-9,oat-9-sense)
is_a(oat-9-sense,oat.n.02)
root(ROOT-0, scald-1)
dobj(scald-1, milk-2)
conj_and(scald-1, stir-4)
num(cup-7, 2-6)
prep_in(stir-4, cup-7)
amod(oat-9, quick-8)
dobj(scald-1, oat-9)
has_pos(scald-1,VB)
has_pos(milk-2,NN)
has_pos(stir-4,VB)
has_pos(2-6,CD)
has_pos(cup-7,NN)
has_pos(quick-8,JJ)
has_pos(oat-9,NN)
has_sense(2-6, null)
---
// stir the eggs with the sugar and the vanilla_extract .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(eggs-3,eggs-3-sense)
is_a(eggs-3-sense,egg.n.02)
has_sense(sugar-6,sugar-6-sense)
is_a(sugar-6-sense,sugar.n.01)
has_sense(vanilla_extract-9,vanilla_extract-9-sense)
is_a(vanilla_extract-9-sense,vanilla.n.02)
root(ROOT-0, stir-1)
det(eggs-3, the-2)
dobj(stir-1, eggs-3)
det(sugar-6, the-5)
prep_with(stir-1, sugar-6)
det(vanilla_extract-9, the-8)
conj_and(sugar-6, vanilla_extract-9)
has_pos(stir-1,VB)
has_pos(the-2,DT)
has_pos(eggs-3,NNS)
has_pos(the-5,DT)
has_pos(sugar-6,NN)
has_pos(the-8,DT)
has_pos(vanilla_extract-9,NN)
has_sense(the-5, null)
has_sense(the-2, null)
has_sense(the-8, null)
---
// stir down and put into a greased bread pan .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(put-4,put-4-sense)
is_a(put-4-sense,put.v.01)
has_sense(greased-7,greased-7-sense)
is_a(greased-7-sense,lubricated.a.01)
has_sense(bread-8,bread-8-sense)
is_a(bread-8-sense,bread.n.01)
has_sense(pan-9,pan-9-sense)
is_a(pan-9-sense,pan.n.01)
root(ROOT-0, stir-1)
prt(stir-1, down-2)
conj_and(stir-1, put-4)
det(pan-9, a-6)
amod(pan-9, greased-7)
nn(pan-9, bread-8)
prep_into(put-4, pan-9)
has_pos(stir-1,VB)
has_pos(down-2,RP)
has_pos(put-4,VB)
has_pos(a-6,DT)
has_pos(greased-7,JJ)
has_pos(bread-8,NN)
has_pos(pan-9,NN)
has_sense(a-6, null)
has_sense(down-2, null)
---
// stir to mix .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(mix-3,mix-3-sense)
is_a(mix-3-sense,mix.v.04)
root(ROOT-0, stir-1)
aux(mix-3, to-2)
xcomp(stir-1, mix-3)
has_pos(stir-1,VB)
has_pos(to-2,TO)
has_pos(mix-3,VB)
has_sense(to-2, null)
---
// Grate chilled butter , stir into flour and sugar .
has_sense(butter-3,butter-3-sense)
is_a(butter-3-sense,butter.n.01)
has_sense(stir-5,stir-5-sense)
is_a(stir-5-sense,stir.v.08)
has_sense(flour-7,flour-7-sense)
is_a(flour-7-sense,flour.n.01)
has_sense(sugar-9,sugar-9-sense)
is_a(sugar-9-sense,sugar.n.01)
amod(butter-3, Grate-1)
amod(butter-3, chilled-2)
nsubj(stir-5, butter-3)
root(ROOT-0, stir-5)
prep_into(stir-5, flour-7)
conj_and(flour-7, sugar-9)
has_pos(Grate-1,JJ)
has_pos(chilled-2,JJ)
has_pos(butter-3,NN)
has_pos(stir-5,VB)
has_pos(flour-7,NN)
has_pos(sugar-9,NN)
has_sense(Grate-1, null)
has_sense(chilled-2, null)
---
// add water and orange_juice and stir for 3 second .
has_sense(add-1,add-1-sense)
is_a(add-1-sense,add.v.01)
has_sense(water-2,water-2-sense)
is_a(water-2-sense,water.n.06)
has_sense(orange_juice-4,orange_juice-4-sense)
is_a(orange_juice-4-sense,orange_juice.n.01)
has_sense(stir-6,stir-6-sense)
is_a(stir-6-sense,stir.v.08)
has_sense(second-9,second-9-sense)
is_a(second-9-sense,second.n.01)
root(ROOT-0, add-1)
dobj(add-1, water-2)
conj_and(water-2, orange_juice-4)
conj_and(add-1, stir-6)
num(second-9, 3-8)
prep_for(stir-6, second-9)
has_pos(add-1,VB)
has_pos(water-2,NN)
has_pos(orange_juice-4,NN)
has_pos(stir-6,VB)
has_pos(3-8,CD)
has_pos(second-9,NN)
has_sense(3-8, null)
---
// Stir until dissolve .
has_sense(dissolve-3,dissolve-3-sense)
is_a(dissolve-3-sense,dissolve.v.02)
root(ROOT-0, Stir-1)
prep_until(Stir-1, dissolve-3)
has_pos(Stir-1,VB)
has_pos(dissolve-3,NNP)
has_sense(Stir-1, null)
---
// add 2 cup sifted flour and stir until blended .
has_sense(add-1,add-1-sense)
is_a(add-1-sense,add.v.01)
has_sense(cup-3,cup-3-sense)
is_a(cup-3-sense,cup.n.02)
has_sense(flour-5,flour-5-sense)
is_a(flour-5-sense,flour.n.01)
has_sense(stir-7,stir-7-sense)
is_a(stir-7-sense,stir.v.01)
has_sense(blended-9,blended-9-sense)
is_a(blended-9-sense,blended.a.01)
root(ROOT-0, add-1)
num(flour-5, 2-2)
nn(flour-5, cup-3)
nn(flour-5, sifted-4)
dobj(add-1, flour-5)
conj_and(add-1, stir-7)
prep_until(stir-7, blended-9)
has_pos(add-1,VB)
has_pos(2-2,CD)
has_pos(cup-3,NN)
has_pos(sifted-4,NN)
has_pos(flour-5,NN)
has_pos(stir-7,VB)
has_pos(blended-9,NNP)
has_sense(2-2, null)
has_sense(sifted-4, null)
---
// Stir in the liquid ingredient -LRB- vanilla , water and milk -RRB- .
has_sense(liquid-4,liquid-4-sense)
is_a(liquid-4-sense,liquid.a.01)
has_sense(ingredient-5,ingredient-5-sense)
is_a(ingredient-5-sense,ingredient.n.03)
has_sense(vanilla-7,vanilla-7-sense)
is_a(vanilla-7-sense,vanilla.n.02)
has_sense(water-9,water-9-sense)
is_a(water-9-sense,water.n.06)
has_sense(milk-11,milk-11-sense)
is_a(milk-11-sense,milk.n.01)
root(ROOT-0, Stir-1)
det(ingredient-5, the-3)
amod(ingredient-5, liquid-4)
prep_in(Stir-1, ingredient-5)
dep(ingredient-5, vanilla-7)
appos(vanilla-7, water-9)
conj_and(water-9, milk-11)
has_pos(Stir-1,NNP)
has_pos(the-3,DT)
has_pos(liquid-4,JJ)
has_pos(ingredient-5,NN)
has_pos(vanilla-7,NN)
has_pos(water-9,NN)
has_pos(milk-11,NN)
has_sense(the-3, null)
has_sense(Stir-1, null)
---
// stir until smooth .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(smooth-3,smooth-3-sense)
is_a(smooth-3-sense,smooth.a.01)
root(ROOT-0, stir-1)
prep_until(stir-1, smooth-3)
has_pos(stir-1,VB)
has_pos(smooth-3,JJ)
---
// stir and bring back to a simmer .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(bring-3,bring-3-sense)
is_a(bring-3-sense,bring.v.02)
has_sense(simmer-7,simmer-7-sense)
is_a(simmer-7-sense,simmer.n.01)
root(ROOT-0, stir-1)
conj_and(stir-1, bring-3)
prt(bring-3, back-4)
det(simmer-7, a-6)
prep_to(bring-3, simmer-7)
has_pos(stir-1,VB)
has_pos(bring-3,VB)
has_pos(back-4,RP)
has_pos(a-6,DT)
has_pos(simmer-7,NN)
has_sense(back-4, null)
has_sense(a-6, null)
---
// stir until the coffee be fully dissolve .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(coffee-4,coffee-4-sense)
is_a(coffee-4-sense,coffee.n.01)
has_sense(be-5,be-5-sense)
is_a(be-5-sense,be.v.01)
has_sense(fully-6,fully-6-sense)
is_a(fully-6-sense,fully.r.01)
has_sense(dissolve-7,dissolve-7-sense)
is_a(dissolve-7-sense,dissolve.v.08)
root(ROOT-0, stir-1)
mark(dissolve-7, until-2)
det(coffee-4, the-3)
nsubj(dissolve-7, coffee-4)
cop(dissolve-7, be-5)
advmod(dissolve-7, fully-6)
advcl(stir-1, dissolve-7)
has_pos(stir-1,VB)
has_pos(until-2,IN)
has_pos(the-3,DT)
has_pos(coffee-4,NN)
has_pos(be-5,VB)
has_pos(fully-6,RB)
has_pos(dissolve-7,JJ)
has_sense(until-2, null)
has_sense(the-3, null)
---
// stir the flour , baking_soda and salt in the small bowl .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(flour-3,flour-3-sense)
is_a(flour-3-sense,flour.n.01)
has_sense(baking_soda-5,baking_soda-5-sense)
is_a(baking_soda-5-sense,bicarbonate_of_soda.n.01)
has_sense(salt-7,salt-7-sense)
is_a(salt-7-sense,salt.n.02)
has_sense(small-10,small-10-sense)
is_a(small-10-sense,small.a.01)
has_sense(bowl-11,bowl-11-sense)
is_a(bowl-11-sense,bowl.n.01)
root(ROOT-0, stir-1)
det(flour-3, the-2)
dobj(stir-1, flour-3)
conj_and(flour-3, baking_soda-5)
conj_and(flour-3, salt-7)
det(bowl-11, the-9)
amod(bowl-11, small-10)
prep_in(stir-1, bowl-11)
has_pos(stir-1,VB)
has_pos(the-2,DT)
has_pos(flour-3,NN)
has_pos(baking_soda-5,NN)
has_pos(salt-7,NN)
has_pos(the-9,DT)
has_pos(small-10,JJ)
has_pos(bowl-11,NN)
has_sense(the-2, null)
has_sense(the-9, null)
---
// stir to combine the ingredient .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(combine-3,combine-3-sense)
is_a(combine-3-sense,compound.v.05)
has_sense(ingredient-5,ingredient-5-sense)
is_a(ingredient-5-sense,ingredient.n.03)
root(ROOT-0, stir-1)
aux(combine-3, to-2)
xcomp(stir-1, combine-3)
det(ingredient-5, the-4)
dobj(combine-3, ingredient-5)
has_pos(stir-1,VB)
has_pos(to-2,TO)
has_pos(combine-3,VB)
has_pos(the-4,DT)
has_pos(ingredient-5,NN)
has_sense(to-2, null)
has_sense(the-4, null)
---
// add the chicken and stir into red curry paste .
has_sense(add-1,add-1-sense)
is_a(add-1-sense,add.v.01)
has_sense(chicken-3,chicken-3-sense)
is_a(chicken-3-sense,chicken.n.01)
has_sense(stir-5,stir-5-sense)
is_a(stir-5-sense,stir.v.08)
has_sense(red-7,red-7-sense)
is_a(red-7-sense,red.s.01)
has_sense(curry-8,curry-8-sense)
is_a(curry-8-sense,curry.n.01)
has_sense(paste-9,paste-9-sense)
is_a(paste-9-sense,paste.n.01)
root(ROOT-0, add-1)
det(chicken-3, the-2)
dobj(add-1, chicken-3)
conj_and(add-1, stir-5)
amod(paste-9, red-7)
amod(paste-9, curry-8)
prep_into(stir-5, paste-9)
has_pos(add-1,VB)
has_pos(the-2,DT)
has_pos(chicken-3,NN)
has_pos(stir-5,VB)
has_pos(red-7,JJ)
has_pos(curry-8,JJ)
has_pos(paste-9,NN)
has_sense(the-2, null)
---
// add flour , salt and pepper , and stir until smooth .
has_sense(add-1,add-1-sense)
is_a(add-1-sense,add.v.01)
has_sense(flour-2,flour-2-sense)
is_a(flour-2-sense,flour.n.01)
has_sense(salt-4,salt-4-sense)
is_a(salt-4-sense,salt.n.02)
has_sense(pepper-6,pepper-6-sense)
is_a(pepper-6-sense,pepper.n.03)
has_sense(stir-9,stir-9-sense)
is_a(stir-9-sense,stir.v.01)
has_sense(smooth-11,smooth-11-sense)
is_a(smooth-11-sense,smooth.a.01)
root(ROOT-0, add-1)
dobj(add-1, flour-2)
conj_and(flour-2, salt-4)
conj_and(flour-2, pepper-6)
conj_and(add-1, stir-9)
prep_until(stir-9, smooth-11)
has_pos(add-1,VB)
has_pos(flour-2,NN)
has_pos(salt-4,NN)
has_pos(pepper-6,NN)
has_pos(stir-9,VB)
has_pos(smooth-11,JJ)
---
// stir periodically over low heat until the sauce thicken .
has_sense(stir-1,stir-1-sense)
is_a(stir-1-sense,stir.v.01)
has_sense(periodically-2,periodically-2-sense)
is_a(periodically-2-sense,sporadically.r.01)
has_sense(low-4,low-4-sense)
is_a(low-4-sense,low.a.01)
has_sense(heat-5,heat-5-sense)
is_a(heat-5-sense,hotness.n.01)
has_sense(sauce-8,sauce-8-sense)
is_a(sauce-8-sense,sauce.n.01)
has_sense(thicken-9,thicken-9-sense)
is_a(thicken-9-sense,thicken.v.01)
root(ROOT-0, stir-1)
advmod(stir-1, periodically-2)
amod(heat-5, low-4)
prep_over(stir-1, heat-5)
det(thicken-9, the-7)
nn(thicken-9, sauce-8)
prep_until(stir-1, thicken-9)
has_pos(stir-1,VB)
has_pos(periodically-2,RB)
has_pos(low-4,JJ)
has_pos(heat-5,NN)
has_pos(the-7,DT)
has_pos(sauce-8,NN)
has_pos(thicken-9,NN)
has_sense(the-7, null)