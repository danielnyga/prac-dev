#include predicates.mln

0 nsubj(?w1, ?w2) ^ has_pos(?w1, JJ) ^ has_sense(?w1, ?s1) ^ property(?w1, +?prop) ^ ?w1 =/= ?w2

0 amod(?w1,?w2) ^ has_sense(?w2, ?s2) ^ is_a(?s2, +?c) ^ property(?w2, +?prop) ^ ?w1 =/= ?w2

0 dobj(?w1, ?w2) ^ has_sense(?w1, ?s1) ^ is_a(?s1, own.v.01) ^ has_sense(?w2, ?s2) ^ property(?w2, HASA) ^ ?w1 =/= ?w2
0 dobj(?w1, ?w2) ^ has_sense(?w1, ?s1) ^ is_a(?s1, own.v.01) ^ has_sense(?w2, ?s2) ^ !property(?w2, HASA) ^ ?w1 =/= ?w2
0 dobj(?w1, ?w2) ^ has_sense(?w1, ?s1) ^ is_a(?s1, envelop.v.01) ^ has_sense(?w2, ?s2) ^ property(?w2, HASA) ^ ?w1 =/= ?w2
0 dobj(?w1, ?w2) ^ has_sense(?w1, ?s1) ^ is_a(?s1, envelop.v.01) ^ has_sense(?w2, ?s2) ^ !property(?w2, HASA) ^ ?w1 =/= ?w2

0 cop(?w1,?w2) ^ has_pos(?w1, NN) ^ has_sense(?w1,?s1) ^ is_a(?s1, +?c) ^ property(?w1, HYPERNYM) ^ ?w1 =/= ?w2
0 cop(?w1,?w2) ^ has_pos(?w1, NN) ^ has_sense(?w1,?s1) ^ is_a(?s1, +?c) ^ !property(?w1, HYPERNYM) ^ ?w1 =/= ?w2
0 cop(?w1,?w2) ^ has_pos(?w1, JJ) ^ has_sense(?w1,?s1) ^ is_a(?s1, +?c) ^ property(?w1, +?prop) ^ ?w1 =/= ?w2

0 conj_or(?w1, ?w2) ^ has_pos(?w1,JJ) ^ property(?w1, +?prop)
0 conj_or(?w1, ?w2) ^ has_pos(?w2,JJ) ^ property(?w2, +?prop)

0 conj_and(?w1, ?w2) ^ has_pos(?w1,JJ) ^ property(?w1, +?prop)
0 conj_and(?w1, ?w2) ^ has_pos(?w2,JJ) ^ property(?w2, +?prop)

0 prep_with(?w1,?w2) ^ has_sense(?w2,?s2) ^ property(?w2, HASA)
0 prep_with(?w1,?w2) ^ has_sense(?w2,?s2) ^ !property(?w2, HASA)
0 prep_without(?w1,?w2) ^ property(?w2, HASA)
0 prep_without(?w1,?w2) ^ !property(?w2, HASA)

// prevent verbs from being detected as hypernyms
0 has_pos(?w1, +?pos) ^ property(?w1, +?prop)