1.00  action_core(neutralize, Neutralizing)
1.00  has_sense(base, pyridine.n.01)
1.00  has_sense(neutralize, neutralize.v.06)
1.00  is_a(neutralize.v.06, neutralize.v.06)
1.00  is_a(pyridine.n.01, pyridine.n.01)

1.00  stuff_to_be_neutralize(base,Neutralizing)
1.00  action_verb(neutralize, Neutralizing)
1.00  achieved_by(Neutralizing,Adding)
---

1.00  action_core(neutralize, Neutralizing)
1.00  has_sense(acid, dibasic_acid.n.01)
1.00  has_sense(neutralize, neutralize.v.06)
1.00  is_a(dibasic_acid.n.01, dibasic_acid.n.01)
1.00  is_a(neutralize.v.06, neutralize.v.06)

1.00  stuff_to_be_neutralize(acid,Neutralizing)
1.00  action_verb(neutralize, Neutralizing)
1.00  achieved_by(Neutralizing,Adding)
---

1.00  action_core(neutralize, Neutralizing)
1.00  has_sense(acid, dibasic_acid.n.01)
1.00  has_sense(neutralize, neutralize.v.06)
1.00  has_sense(base, pyridine.n.01)
1.00  is_a(dibasic_acid.n.01, dibasic_acid.n.01)
1.00  is_a(neutralize.v.06, neutralize.v.06)
1.00  is_a(pyridine.n.01, pyridine.n.01)

1.00  stuff_to_be_neutralize(acid,Neutralizing)
1.00  neutralizer(base, Neutralizing)
1.00  action_verb(neutralize, Neutralizing)
1.00  achieved_by(Neutralizing,Adding)
---

1.00  action_core(neutralize, Neutralizing)
1.00  has_sense(base, pyridine.n.01)
1.00  has_sense(neutralize, neutralize.v.06)
1.00  has_sense(acid, dibasic_acid.n.01)
1.00  is_a(neutralize.v.06, neutralize.v.06)
1.00  is_a(pyridine.n.01, pyridine.n.01)
1.00  is_a(dibasic_acid.n.01, dibasic_acid.n.01)

1.00  stuff_to_be_neutralize(base,Neutralizing)
1.00  neutralizer(acid, Neutralizing)
1.00  action_verb(neutralize, Neutralizing)
1.00  achieved_by(Neutralizing,Adding)
---

1.00  action_core(neutralize, Neutralizing)
1.00  has_sense(base, pyridine.n.01)
1.00  has_sense(neutralize, neutralize.v.06)
1.00  has_sense(acid, dibasic_acid.n.01)
1.00  is_a(neutralize.v.06, neutralize.v.06)
1.00  is_a(pyridine.n.01, pyridine.n.01)
1.00  is_a(dibasic_acid.n.01, dibasic_acid.n.01)
1.00  has_sense(100,hundred.n.01)
1.00  has_sense(milliliters, milliliter.n.01)
1.00  is_a(milliliter.n.01, milliliter.n.01)
1.00  is_a(hundred.n.01, hundred.n.01)

1.00  stuff_to_be_neutralize(base,Neutralizing)
1.00  neutralizer(acid, Neutralizing)
1.00  action_verb(neutralize, Neutralizing)
1.00  unit(milliliters, Neutralizing)
1.00  amount(100, Neutralizing)
1.00  achieved_by(Neutralizing,Adding)
---

1.00  action_core(neutralize, Neutralizing)
1.00  has_sense(acid, dibasic_acid.n.01)
1.00  has_sense(neutralize, neutralize.v.06)
1.00  has_sense(base, pyridine.n.01)
1.00  is_a(dibasic_acid.n.01, dibasic_acid.n.01)
1.00  is_a(neutralize.v.06, neutralize.v.06)
1.00  is_a(pyridine.n.01, pyridine.n.01)
1.00  has_sense(100,hundred.n.01)
1.00  has_sense(milliliters, milliliter.n.01)
1.00  is_a(milliliter.n.01, milliliter.n.01)
1.00  is_a(hundred.n.01, hundred.n.01)

1.00  stuff_to_be_neutralize(acid,Neutralizing)
1.00  neutralizer(base, Neutralizing)
1.00  action_verb(neutralize, Neutralizing)
1.00  unit(milliliters, Neutralizing)
1.00  amount(100, Neutralizing)
1.00  achieved_by(Neutralizing,Adding)
---

1.00  action_core(neutralize, Neutralizing)

1.00  has_sense(base, pyridine.n.01)
1.00  has_sense(neutralize, neutralize.v.06)
1.00  has_sense(acid, dibasic_acid.n.01)
1.00  is_a(neutralize.v.06, neutralize.v.06)
1.00  is_a(pyridine.n.01, pyridine.n.01)
1.00  is_a(dibasic_acid.n.01, dibasic_acid.n.01)


1.00  has_sense(3,three.n.01)
1.00  has_sense(drops, drop.n.02)
1.00  is_a(drop.n.02, drop.n.02)
1.00  is_a(three.n.01, three.n.01)

1.00  stuff_to_be_neutralize(base,Neutralizing)
1.00  neutralizer(acid, Neutralizing)
1.00  action_verb(neutralize, Neutralizing)
1.00  unit(drops, Neutralizing)
1.00  amount(3, Neutralizing)
1.00  achieved_by(Neutralizing,Adding)
---

1.00  action_core(neutralize, Neutralizing)
1.00  has_sense(acid, dibasic_acid.n.01)
1.00  has_sense(neutralize, neutralize.v.06)
1.00  has_sense(base, pyridine.n.01)
1.00  is_a(dibasic_acid.n.01, dibasic_acid.n.01)
1.00  is_a(neutralize.v.06, neutralize.v.06)
1.00  is_a(pyridine.n.01, pyridine.n.01)
1.00  has_sense(3,three.n.01)
1.00  has_sense(drops, drop.n.02)
1.00  is_a(drop.n.02, drop.n.02)
1.00  is_a(three.n.01, three.n.01)

1.00  stuff_to_be_neutralize(acid,Neutralizing)
1.00  neutralizer(base, Neutralizing)
1.00  action_verb(neutralize, Neutralizing)
1.00  unit(drops, Neutralizing)
1.00  amount(3, Neutralizing)
1.00  achieved_by(Neutralizing,Adding)
