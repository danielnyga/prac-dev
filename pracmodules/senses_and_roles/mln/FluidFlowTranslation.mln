/* **************************************************************************** 
 * PROBABILISTIC ROBOT ACTION CORES
 * 
 * (C) 2011-2013 by Daniel Nyga (nyga@cs.tum.edu)
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 ******************************************************************************/

#include "predicates.mln"

role = {Theme, Destination, Source}

concept = {pour.v.01}

// hard fomulas 
has_sense(?w, null) => action_role(?w, null).

// weighted formulas
5 action_role(?w1, Theme)  ^ is_a(?s1, mix.n.01) ^ action_role(?w2, Destination)  ^ is_a(?s2, cooker.n.01) ^ has_sense(?w1, ?s1) ^ has_sense(?w2, ?s2) ^ w1=/=w2
5 action_role(?w1, Theme)  ^ is_a(?s1, mix.n.01) ^ action_role(?w2, Source)  ^ is_a(?s2, bottle.n.01) ^ has_sense(?w1, ?s1) ^ has_sense(?w2, ?s2) ^ w1=/=w2
5 action_role(?w1, Theme)  ^ is_a(?s1, water.n.06) ^ action_role(?w2, Destination)  ^ is_a(?s2, sink.n.01) ^ has_sense(?w1, ?s1) ^ has_sense(?w2, ?s2) ^ w1=/=w2
5 action_role(?w1, Theme)  ^ is_a(?s1, water.n.06) ^ action_role(?w2, Source)  ^ is_a(?s2, faucet.n.01) ^ has_sense(?w1, ?s1) ^ has_sense(?w2, ?s2) ^ w1=/=w2
-10 action_role(?w1, ActionVerb)  ^ is_a(?s1, add.v.01) ^ action_role(?w2, Theme) ^ has_sense(?w1, ?s1) ^ has_sense(?w2, ?s2) ^ w1=/=w2 ^ !dobj(?w2,?w1)


-2 action_role(?word, Destination) ^ has_sense(?word, ?sense) ^ is_a(?sense, water.n.06)
// -2 action_role(?word, Destination) ^ has_sense(?word, ?sense) ^ is_a(?sense, water.n.06)
-2 action_role(?word, Destination) ^ has_sense(?word, ?sense) ^ is_a(?sense, mix.n.01)
-2 action_role(?word, Source) ^ has_sense(?word, ?sense) ^ is_a(?sense, mix.n.01)
-2 action_role(?word, Source) ^ has_sense(?word, ?sense) ^ is_a(?sense, water.n.01)
// -2 action_role(?word, Source) ^ has_sense(?word, ?sense) ^ is_a(?sense, mix.n.01)
-2 action_role(?word, Theme) ^ has_sense(?word, ?sense) ^ is_a(?sense, cooker.n.01)
-2 action_role(?word, Theme) ^ has_sense(?word, ?sense) ^ is_a(?sense, bottle.n.01)
-2 action_role(?word, Theme) ^ has_sense(?word, ?sense) ^ is_a(?sense, cooker.n.01)
// -2 action_role(?word, Theme) ^ has_sense(?word, ?sense) ^ is_a(?sense, pan.n.01)
5 action_role(?word, Destination) ^ has_sense(?word, ?sense) ^ is_a(?sense, cooker.n.01)
5 action_role(?word, Destination) ^ has_sense(?word, ?sense) ^ is_a(?sense, sink.n.01)

5 action_role(?word, ActionVerb) ^ has_sense(?word, ?sense) ^ is_a(?sense, pour.v.01)
5 action_role(?word, ActionVerb) ^ has_pos(?word,VB)





















