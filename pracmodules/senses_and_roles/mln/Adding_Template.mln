/* **************************************************************************** 
 * PROBABILISTIC ROBOT ACTION CORES
 * 
 * (C) 2011-2013 by Daniel Nyga (nyga@cs.tum.edu)
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 ******************************************************************************/

#include Roles.mln
has_pos(word,pos!)
is_a(sense, concept)
dobj(word,word)
has_sense(word, sense!)
action_core(word,actioncore?)
prep_to(word,word)
prep_of(word,word)
num(word,word)

// hard fomulas 
//has_sense(?w, null) ^ action_role(?w, null).

// weighted formulas


//To handle amount and unit role sentences
0 prep_of(?w1,?w3) ^ num(?w1,?w2) ^ is_a(?s1,+?c1) ^ has_sense(?w1,?s1) ^ is_a(?s2,+?c2) ^ has_sense(?w2,?s2)^ is_a(?s3,+?c3) ^ has_sense(?w3,?s3)  ^ unit(?w1,?ac) ^ amount(?w2,?ac)  ^ theme(?w3,?ac) ^ ?w1 =/= ?w2 ^ ?w2 =/= ?w3 ^ ?w1 =/= ?w3
0 action_core(?w1,?ac) ^ action_verb(?w1,?ac) ^ has_sense(?w1, ?s1) ^ is_a(?s1, +?c1)  ^ has_sense(?w2, ?s2) ^ is_a(?s2, +?c2) ^ goal(?w2,?ac) ^ ?w1 =/= ?w2 ^ prep_to(?w1,?w2)
0 dobj(?w1,?w2) ^ action_core(?w1,?ac) ^ action_verb(?w1,?ac) ^ has_sense(?w1, ?s1) ^ is_a(?s1, +?c1) ^  theme(?w2,?ac) ^ !unit(?w2,?ac) ^ has_sense(?w2, ?s2) ^ is_a(?s2, +?c2) ^ ?w1 =/= ?w2
0 dobj(?w1,?w2) ^ action_core(?w1,?ac) ^ action_verb(?w1,?ac) ^ has_sense(?w1, ?s1) ^ is_a(?s1, +?c1) ^  unit(?w2,?ac) ^ !theme(?w2,?ac) ^ has_sense(?w2, ?s2) ^ is_a(?s2, +?c2) ^ ?w1 =/= ?w2
//e .g start with adding ... 
//start has no role or action_core
0 !action_core(?w1,?ac) ^ !action_verb(?w1,?ac) ^ !goal(?w1,?ac) ^ !theme(?w1,?ac) ^ !unit(?w1,?ac) ^ !amount(?w1,?ac) ^  has_sense(?w1, ?s1) ^ is_a(?s1, +?c1)
