#include predicates.mln



//0 prep_with(?w1,?w2) ^ has_sense(?w2,?s2) ^ has_a(?cluster,?s2)
//0 prep_with(?w1,?w2) ^ has_sense(?w2,?s2) ^ has_a(?cluster,null)
//0 dobj(?w1, ?w2) ^ has_sense(?w1, ?s1) ^ is_a(?s1,+?c) ^ has_sense(?w2, ?s2) ^ has_a(?cluster, ?s2)
//0 dobj(?w1, ?w2) ^ has_sense(?w1, ?s1) ^ is_a(?s1,+?c) ^ has_sense(?w2, ?s2) ^ has_a(?cluster, null)

0 has_sense(?w2, ?s2) ^ is_a(?s2, +?c) ^ size(?cluster,?s2)
0 has_sense(?w2, ?s2) ^ is_a(?s2, +?c) ^ size(?cluster,null)
0 !(has_sense(?w2, ?s2) ^ is_a(?s2, +?c)) ^ size(?cluster,?s2)

0 has_sense(?w2, ?s2) ^ is_a(?s2, +?c) ^ color(?cluster,?s2)
0 has_sense(?w2, ?s2) ^ is_a(?s2, +?c) ^ color(?cluster,null)
0 !(has_sense(?w2, ?s2) ^ is_a(?s2, +?c)) ^ color(?cluster,?s2)

0 has_sense(?w2, ?s2) ^ is_a(?s2, +?c) ^ shape(?cluster,?s2)
0 !(has_sense(?w2, ?s2) ^ is_a(?s2, +?c)) ^ shape(?cluster,?s2)
0 has_sense(?w2, ?s2) ^ is_a(?s2, +?c) ^ shape(?cluster,null)

//0 has_sense(?w1, ?s1) ^ is_a(?s1,?c1) ^ coRef(?s1, ?c1)
//0 has_sense(?w1, ?s1) ^ is_a(?s1,?c1) ^ coRef(?s1, null)


0 EXIST ?s (has_sense(?w, ?s) ^ is_a(?s, +?c) ^ shape(?cluster, ?s))