
hasSense(word, senseID!)
isa(senseID, concept)
Norm_X(x_Classes)
Norm_Y(y_Classes)
Norm_XY(xy_Classes)
Norm_Thing(thing_Classes)

xClasses = {X1}
yClasses = {Y1}
xy_Classes = {X2}
thingClasses = {X, Y}

// distribution Thing
log(0.2) Norm_Thing(X) ^ Norm_Thing(Y)
log(0.1) !Norm_Thing(X) ^ Norm_Thing(Y)
log(0.7) Norm_Thing(X) ^ !Norm_Thing(Y)
-100 !Norm_Thing(X) ^ !Norm_Thing(Y)

// distribution X and not Y
Norm_X(X1).

// distribution X and Y
Norm_XY(X2).

// distribution Y and not X
Norm_Y(Y1).

// X1
0.7 hasSense(w, s) ^ (isa(s, X1) v (!isa(s, X1) ^ !isa(s,X2) ^ isa(s,X) ^ Norm_X(X1)) v (!isa(s, X) ^ !isa(s, Y) ^ isa(s,Thing) ^ Norm_Thing(X) ^ Norm_X(X1)))

// X2
-0.7 hasSense(w, s) ^ (isa(s, X2) v (!isa(s, X1) ^ !isa(s,X2) ^ isa(s,X) ^ isa(s,Y) ^ Norm_XY(X2)) v (!isa(s, X) ^ !isa(s, Y) ^ isa(s,Thing) ^ Norm_Thing(X) ^ Norm_Thing(Y) ^ Norm_XY(X2)))


// Y1
-1.4 hasSense(w, s) ^ (isa(s, Y1) v (!isa(s, Y1) ^ !isa(s,X2) ^ isa(s,Y) ^ Norm_Y(Y1)) v (!isa(s, X) ^ !isa(s, Y) ^ isa(s,Thing) ^ Norm_Thing(Y) ^ Norm_Y(Y1)))

// X
0.7 hasSense(w, s) ^ (isa(s, X) v (!isa(s, X) ^ isa(s, Thing) ^ !isa(s, Y) ^ Norm_Thing(X)))

// Y
-0.7 hasSense(w, s) ^ (isa(s, Y) v (!isa(s, Y) ^ isa(s, Thing) ^ !isa(s, X) ^ Norm_Thing(Y)))

// Thing
0 hasSense(w, s) ^ isa(s, Thing)

// taxonomy

/*
isa(X1_ID, X1).
isa(X1_ID, X).
isa(X1_ID, Thing).

isa(X2_ID, X2).
isa(X2_ID, X).
isa(X2_ID, Thing).
isa(X2_ID, Y).

isa(Y1_ID, Y1).
isa(Y1_ID, Y).
isa(Y1_ID, Thing).

isa(X3_ID, X3).
isa(X3_ID, X).
isa(X3_ID, Thing).
isa(X3_ID, Y).

isa(Y1_ID, Y1).
isa(Y1_ID, Y).
isa(Y1_ID, Thing).

isa(Z_ID, Thing).
*/































