// predicates

// semantic predicates
hasSense(word, senseID!, sentence)
hasRole(word, role!, sentence)
isa(senseID, sense)
hasPOS(word, pos!, sentence)

// syntactic predicates
root(root, word, sentence)      // not used
det(word, determiner, sentence) // not used
dobj(word, word, sentence)
prep_from(word, word, sentence)
prep_with(word, word, sentence)
prep_into(word, word, sentence)
conj_and(word, word, sentence)
//amod(word, adjective, sentence) // not used

//(hasSense(w1, sense1, s) ^ hasSense(w1, sense2, s)) => sense1=sense2.
//(hasSense(w1, sense1, s) ^ hasSense(w2, sense1, s)) => w1=w2.
//hasRole(w1, r1, s) ^ hasRole(w1, r2, s) => r1=r2.
//! (EXIST s1 (hasSense(w1,s1,s))) => !hasRole(w1,r1,s).
//hasPOS(w,DT,s) => !hasSense(w,sense,s).
//hasPOS(w,DT,s) => !hasRole(w,role,s).

//0 !hasSense(w, sense, s) v !isa(sense, NULL)
//0 !hasRole(w, NULL, s)

// if a word does not have a sense, it cannot have a role:
hasSense(w, sense, s) ^ isa(sense, NULL) => hasRole(w, NULL, s).

0 hasRole(w1,+role1,s) ^ hasSense(w1,sense1,s) ^ isa(sense1,+superSense) 
//0 hasSense(w1,sense1,s) ^ isa(sense1,+superSense) => hasRole(w1,+role1,s)

0 hasSense(w1,sense1,s) ^ hasRole(w1,+role1,s) ^ hasSense(w2,sense2,s) ^ hasRole(w2,+role2,s)
0 prep_from(w1, w2, s) ^ hasRole(w1,+role1,s) ^ hasRole(w2,+role2,s)
0 prep_with(w1, w2, s) ^ hasRole(w1,+role1,s) ^ hasRole(w2,+role2,s)
0 prep_into(w1, w2, s) ^ hasRole(w1,+role1,s) ^ hasRole(w2,+role2,s)
0 conj_and(w1, w2, s) ^ hasRole(w1, +r, s) ^ hasRole(w2, +r, s)
0 dobj(w1, w2, s) ^ hasRole(w1, +r1, s) ^ hasRole(w2,+r2,s)
0 hasPOS(w1, +p, s) ^ hasRole(w1, +r, s)
0 dobj(w1, w2, s) ^ hasRole(w2, +r2, s) ^ prep_from(w1, w3, s) ^ hasRole(w3, +r3, s)
0 dobj(w1, w2, s) ^ hasRole(w2, +r2, s) ^ prep_with(w1, w3, s) ^ hasRole(w3, +r3, s)
0 dobj(w1, w2, s) ^ hasRole(w2, +r2, s) ^ prep_into(w1, w3, s) ^ hasRole(w3, +r3, s)

// include the class taxonomy
