# ACTION CORE DEFINITIONS
# 
# (C) 2012 by Daniel Nyga
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

action_core: Neutralizing
action_roles: ['neutralizee','neutralizer','action_verb','amount',unit]

---

action_core: Filling
action_roles: ['stuff','goal','action_verb']

---

action_core: Opening
action_roles: ['obj_to_be_opened','action_verb']

---

action_core: Unscrewing
action_roles: ['obj_to_be_unscrewed','action_verb']
cram_plan: "plan"
---

action_core: Pulling
action_roles: ['obj_to_be_pulled','action_verb']
cram_plan: "<span>(pull-object (an object (type {obj_to_be_pulled})))</span><br><br>"
---

action_core: OpeningADoor
action_roles: ['obj_to_be_opened','action_verb']
cram_plan: "<span>(open-door (of (an object (type {obj_to_be_opened}))))</span><br><br>"

---

action_core: Starting
action_roles: ['obj_to_be_started','action_verb']

---

action_core: Pouring
action_roles: ['stuff','goal','action_verb']
cram_plan: "<span>(pour-from-container (from (an object (type container.n.01)</span><br><span style='margin-left: 22.8em;'>(contains (some stuff (type {stuff}))))</span><br><span style='margin-left: 12.5em;'>(to (an object (type {goal})))))</span><br><br>"
---

action_core: Adding
action_roles: ['theme','goal','action_verb','unit','amount']

---

action_core: Preheating
action_roles: ['obj_to_be_heated','temperature','action_verb']

---

action_core: OperatingATap
action_roles: ['liquid','goal','action_verb','amount','unit']
cram_plan: "<span>(operate-tap (liquid (some stuff (type {liquid})))</span><br><span style='margin-left: 7.8em;'>(destination (an object (type {goal}))))</span><br><br>"
---

action_core: UsingSpiceJar
action_roles: ['content','goal','action_verb']
cram_plan: "<span>(pour-from-spice-jar (from (an object (type container.n.01)</span><br><span style='margin-left: 22.8em;'>(contains (some stuff (type {content}))))</span><br><span style='margin-left: 12.5em;'>(to (an object (type {goal})))))</span><br><br>"
---

action_core: Spooning
action_roles: ['substance','goal','action_verb']
cram_plan: "<span>(use-spoon (from (an object (type container.n.01)</span><br><span style='margin-left: 17em;'>(contains (some stuff (type {substance}))))</span><br><span style='margin-left: 6.5em;'>(to (an object (type {goal})))))</span><br><br>"
---

action_core: Flavouring
action_roles: ['spice','goal','action_verb']

---

action_core: TurningOnElectricalDevice
action_roles: ['device','action_verb']
cram_plan: "<span>(turn-on-device (an object (type {device})))</span><br><br>"

---
  
action_core: UsingMeasuringCup
action_roles: ['content','goal','action_verb','amount','unit']
cram_plan: "<span>(pour-from-measuring-cup (from (an object (type measuring_cup.n.01)</span><br><span style='margin-left: 25.2em;'>(contains (some stuff (type {content}))))</span><br><span style='margin-left: 15em;'>(to (an object (type {goal}))))</span><br><span style='margin-left: 15em;'>(amount (a quantity (type {unit})</span><br><span style='margin-left: 27em;'>(number {amount})))))</span><br><br>"

---

action_core: Pipetting
action_roles: ['content','goal','action_verb','amount','unit']
cram_plan: "<span>(pour-from-pipet (from (an object (type pipet.n.01)</span><br><span style='margin-left: 20.4em;'>(contains (some stuff (type {content}))))</span><br><span style='margin-left: 10.1em;'>(to (an object (type container.n.01)</span><br><span style='margin-left: 19.1em;'>(contains (some stuff (type {goal})))</span><br><span style='margin-left: 10.1em;'>(amount (a quantity (type {unit})</span><br><span style='margin-left: 22.1em;'>(number {amount}))))</span><br><br>"
