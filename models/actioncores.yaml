# ACTION CORE DEFINITIONS
# 
# (C) 2012 by Daniel Nyga
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

action_core: Filling
action_roles: ['stuff','goal','action_verb']

---

action_core: Pouring
action_roles: ['stuff','goal','action_verb']
cram_plan: "(pour-from-container (from (an object (type container.n.01) (contains (some stuff (type {stuff})))) (to (an object (type {goal})))))"
---

action_core: Adding
action_roles: ['theme','goal','action_verb']

---

action_core: Preheating
action_roles: ['obj_to_be_heated','temperature','action_verb']

---

action_core: OperatingATap
action_roles: ['liquid','goal','action_verb']
cram_plan: "(operate-tap (liquid (some stuff (type {liquid}))) (destination (an object (type {goal}))))"
---

action_core: UsingSpiceJar
action_roles: ['content','goal','action_verb']
cram_plan: "(pour-from-spice-jar (from (an object (type container.n.01) (contains (some stuff (type {content})))) (to (an object (type {goal})))))"
---

action_core: Spooning
action_roles: ['substance','goal','action_verb']
cram_plan: "(use-spoon (from (an object (type container.n.01) (contains (some stuff (type {substance})))) (to (an object (type {goal})))))"
---

action_core: Flavouring
action_roles: ['spice','goal','action_verb']

---

action_core: TurningOnElectricalDevice
action_roles: ['device','setting','action_verb']
cram_plan: "(turn-on-device (an object (type {device})))"

