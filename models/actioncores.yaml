# ACTION CORE DEFINITIONS
# 
# (C) 2012 by Daniel Nyga
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

action_core: Neutralizing
action_roles: ['neutralizee','neutralizer','action_verb','amount','unit']

---

action_core: Filling
action_roles: ['stuff','goal','action_verb']

---

action_core: Opening
action_roles: ['obj_to_be_opened','action_verb']

---

action_core: Unscrewing
action_roles: ['obj_to_be_unscrewed','action_verb']
cram_plan: "(unscrew (an object (type {obj_to_be_unscrewed})))\n\n"
---

action_core: Pulling
action_roles: ['obj_to_be_pulled','action_verb']
cram_plan: "(pull-object (an object (type {obj_to_be_pulled})))\n\n"
---

action_core: OpeningADoor
action_roles: ['obj_to_be_opened','action_verb']
cram_plan: "(open-door (of (an object (type {obj_to_be_opened}))))\n\n"

---

action_core: Starting
action_roles: ['obj_to_be_started','action_verb']

---

action_core: Pouring
action_roles: ['stuff','goal','action_verb']
cram_plan: "(pour-from-container \t!(from (an object \t!(type container.n.01)\n\t\t(contains (some stuff (type {stuff}))))\n\t(to (an object (type {goal})))))\n\n"

---

action_core: Adding
action_roles: ['theme','goal','action_verb','unit','amount']

---

action_core: Preheating
action_roles: ['obj_to_be_heated','temperature_unit','temperature_setting','action_verb']

---

action_core: OperatingATap
action_roles: ['liquid','goal','action_verb','amount','unit']
cram_plan: "(operate-tap \t!(liquid (some stuff (type {liquid})))\n\t(destination (an object (type {goal}))))\n\n"

---

action_core: UsingSpiceJar
action_roles: ['content','goal','action_verb']
cram_plan: "(pour-from-spice-jar \t!(from (an object \t!(type container.n.01)\n\t\t(contains (some stuff (type {content}))))\n\t(to (an object (type {goal})))))\n\n"

---

action_core: Spooning
action_roles: ['substance','goal','action_verb']
cram_plan: "(use-spoon \t!(from (an object \t!(type container.n.01)\n\t\t(contains (some stuff (type {substance}))))\n\t(to (an object (type {goal})))))\n\n"

---

action_core: Flavouring
action_roles: ['spice','goal','action_verb']

---

action_core: TurningOnElectricalDevice
action_roles: ['device','action_verb']
cram_plan: "(turn-on-device (an object (type {device})))\n\n"

---

action_core: UsingMeasuringCup
action_roles: ['content','goal','action_verb','amount','unit']
cram_plan: "(use-measuring-cup \t!(from (an object \t!(type container.n.01)\n\t\t(contains (some stuff (type {content}))))\n\t(amount ({amount} {unit}))\n\t(to (an object \t!(type container.n.01)\n\t\t(contains (some stuff (type {goal})))\n\n"

---

action_core: Pipetting
action_roles: ['content','goal','action_verb','amount','unit']
cram_plan: "(use-pipette \t!(from (an object \t!(type container.n.01)\n\t\t(contains (some stuff (type {content}))))\n\t(to (an object \t!(type container.n.01)\n\t\t(contains (some stuff (type {goal})))\n\t(amount (a quantity \t!(type {unit})\n\t\t(number {amount}))))"

---

action_core: Storing
action_roles: ['obj_to_be_stored','action_verb','location']

---

action_core: Flipping
action_roles: ['obj_to_be_flipped','action_verb','utensil']

---

action_core: Serving
action_roles: ['theme','instrument','action_verb','goal']

---

action_core: Putting
action_roles: ['theme','goal','action_verb']

---

action_core: Mixing
action_roles: ['stuff','goal','action_verb','content']
