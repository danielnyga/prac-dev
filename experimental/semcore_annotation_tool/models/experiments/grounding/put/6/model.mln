// ----------------------------------------------
// ---------------Predicates --------------
// ----------------------------------------------
isGrounded(word,instance!)
hasSense(word,sense!)
hasRole(phrase, role!)

// evidence
//hasPossibleSense(word,sense)
isPhrase(word,phrase)
isaW(sense,concept)
isaI(cid,concept)
isInstanceOf(instance, cid)
on(instance,instance)
in(instance,instance)


//inCompatibleModifier(phrase,phrase)
//similar(word,word)
iWithini(phrase,phrase)
//wordInclusion(phrase,phrase)
//clusterHeadMatch(phrase,phrase)
//phraseSimilarity(phrase,phrase)
//zerodistance(phrase,phrase)
//onedistance(phrase,phrase)
//twodistance(phrase,phrase)
//threedistance(phrase,phrase)
//fourdistance(phrase,phrase)
//fardistance(phrase,phrase)
//MGender(phrase)
//FGender(phrase)
//NGender(phrase)
//PGender(phrase)

// Stanford parser dependencies
hasPOS(word,pos!)
abbrev(word,word)
acomp(word,word)
advcl(word,word)
advmod(word,word)
agent(word,word)
amod(word,word)
appos(word,word)
attr(word,word)
aux(word,word)
auxpass(word,word)
cc(word,word)
ccomp(word,word)
complm(word,word)
conj(word,word)
cop(word,word)
csubj(word,word)
csubjpass(word,word)
dep(word,word)
det(word,word)
dobj(word,word)
expl(word,word)
infmod(word,word)
iobj(word,word)
mark(word,word)
mwe(word,word)
neg(word,word)
nn(word,word)
npadvmod(word,word)
nsubj(word,word)
nsubjpass(word,word)
num(word,word)
number(word,word)
parataxis(word,word)
partmod(word,word)
pcomp(word,word)
pobj(word,word)
poss(word,word)
possessive(word,word)
preconj(word,word)
predet(word,word)
prep(word,word)
prepc(word,word)
prt(word,word)
punct(word,word)
purpcl(word,word)
quantmod(word,word)
rcmod(word,word)
ref(word,word)
rel(word,word)
root(root,word)
tmod(word,word)
xcomp(word,word)
xsubj(word,word)

// collapsed dependencies
prep_to(word,word)
prep_from(word,word)
prep_of(word,word)
prep_with(word,word)
prep_for(word,word)
prep_per(word,word)
prep_on(word,word)
prep_by(word,word)
prep_in(word,word)
prep_into(word,word)


conj_and(word,word)
conj_negcc(word,word)
conj_or(word,word)

prep_by_means_of(word,word)
prep_in_accordance_with(word,word)
prep_in_addition_to(word,word)
prep_in_case_of(word,word)
prep_in_front_of(word,word)
prep_in_lieu_of(word,word)
prep_in_place_of(word,word)
prep_in_spite_of(word,word)
prep_on_account_of(word,word)
prep_on_behalf_of(word,word)
prep_on_top_of(word,word)
prep_with_regard_to(word,word)
prep_with_respect_to(word,word)



//0 isGrounded(w,i) ^ hasSense(w,sid) ^ isaW(sid, +c1) ^ isInstanceOf(i,cid) ^ isaI(cid, +c2) 

0 isGrounded(w,i) ^ hasSense(w,sid) ^ isaW(sid, c) ^ isInstanceOf(i,cid) ^ isaI(cid, c)

//0 hasSense(w, sid) ^ isaW(sid, +c) ^ isPhrase(w,p) ^ hasRole(p, +r)

//0 isGrounded(w,i) ^ isInstanceOf(i, cid) ^ isaI(cid, +c) ^ isPhrase(w,p) ^ hasRole(p, +r)

0 isPhrase(w1,p1) ^ prep_on(w1,w2) ^ isPhrase(w2, p2) ^ hasRole(p1, +r1) ^ hasRole(p2, +r2) ^ !iWithini(p1,p2) 

//0 hasRole(p1, +r1) ^ hasRole(p2,+r2) ^ on(i1,i2) ^ isGrounded(w1,i1) ^ isGrounded(w2,i2) ^ isPhrase(w1,p1) ^ isPhrase(w2,p2)

//3 prep_on(w3,w2) ^ hasRole(p3, PutActionVerb) ^ isPhrase(w3,p2)
//4 hasRole(p1, PutActionVerb) ^ hasSense(w1, s) ^ isaW(s, Put_v_01) ^ isaW(s, Move_v_02) ^ isPhrase(w1,p1) ^ dobj(w1, w2) ^ isPhrase(w2,p2) ^ hasRole(p2, Item)
//5 hasRole(p, NULL) 

//(iWithini(p1,p2) v iWithini(p2,p1)) ^ hasRole(p1,r1) ^ hasRole(p2,r2) ^ !(r1=r2).
//3 hasRole(p1, PutActionVerb) ^ prep_on(w1,w2) ^ isPhrase(w1, p1) ^ isPhrase(w2,p2) ^ hasRole(p2, Goal)
//3 !hasRole(p1,PutActionVerb) ^ !hasRole(p1, Item) ^ !hasRole(p1, Goal) ^ hasRole(p1, NULL)
//1 hasRole(p, NULL)
//-4 isPhrase(w1,p1) ^ hasRole(p1, Item) ^ isPhrase(w2,p2) ^ hasRole(p2, Goal) ^ prep_on(w1,w2) ^ on(i1,i2) ^ isGrounded(w1,i1) ^ isGrounded(w2,i2)
// if a sense and POS for a word occur often together, they are likely to be related
//2 hasSense(w, s) ^ isaW(s,c) ^ hasPOS(w, pos)

// if two words have the same sense they should have the same part of speech tag
//2 hasSense(w1, s) ^ hasSense(w2, s) ^ hasPOS(w1,pos) ^ hasPOS(w2,pos) ^ isaW(s,c)

// if two words have different part of speech tags, then they are less likely to have the same sense
//0 hasSense(w1, s1) ^ hasSense(w2, s2) ^ hasPOS(w1,pos1) ^ hasPOS(w2,pos2) ^ !(pos1=pos2) ^ !(s2=s1) ^ isa(s1,c1) ^ isa(s2,c2)

// if two words in a sentence appear often together, they might have an influence on the sense
//0 zerodistance(p1,p2) ^ isPhrase(w1,p1) ^ isPhrase(w2,p2) ^ hasSense(w1, s1) ^ hasSense(w2,s2) ^ isa(s1,c1) ^ isa(s2,c2)

// if two senses have common predecessors in the wordnet taxonomy then they are likely to occur together in the same text
//0 hasSense(w1,s1) ^ isa(s1,c)  ^ hasSense(w2,s2) ^ isa(s2,c)

// if two words are similar in writing then they might have the same sense
//0 similar(w1,w2) ^ hasSense(w1, s1) ^ isa(s1,c)  ^ hasSense(w2, s1) ^ isa(s1,c)

