/* Auto-generated by genmsg_java.py for file /home/ai/rosbuild_ws/mlnpredicates/msg/MLNPredicate.msg */

package ros.pkg.mlnpredicates.msg;

import java.nio.ByteBuffer;

public class MLNPredicate extends ros.communication.Message {

  public java.lang.String name = new java.lang.String();
  public java.util.ArrayList<java.lang.String> domain = new java.util.ArrayList<java.lang.String>();

  public MLNPredicate() {
  }

  public static java.lang.String __s_getDataType() { return "mlnpredicates/MLNPredicate"; }
  public java.lang.String getDataType() { return __s_getDataType(); }
  public static java.lang.String __s_getMD5Sum() { return "9992c37cb772d59ee22a4bf22c84177b"; }
  public java.lang.String getMD5Sum() { return __s_getMD5Sum(); }
  public static java.lang.String __s_getMessageDefinition() { return "string name\n" +
"string[] domain\n" +
"\n" +
""; }
  public java.lang.String getMessageDefinition() { return __s_getMessageDefinition(); }

  public MLNPredicate clone() {
    MLNPredicate c = new MLNPredicate();
    c.deserialize(serialize(0));
    return c;
  }

  public void setTo(ros.communication.Message m) {
    deserialize(m.serialize(0));
  }

  public int serializationLength() {
    int __l = 0;
    __l += 4 + name.length();
    __l += 4;
    for(java.lang.String val : domain) {
      __l += 4 + val.length();
    }
    return __l;
  }

  public void serialize(ByteBuffer bb, int seq) {
    Serialization.writeString(bb, name);
    bb.putInt(domain.size());
    for(java.lang.String val : domain) {
      Serialization.writeString(bb, val);
    }
  }

  public void deserialize(ByteBuffer bb) {
    name = Serialization.readString(bb);

    int __domain_len = bb.getInt();
    domain = new java.util.ArrayList<java.lang.String>(__domain_len);
    for(int __i=0; __i<__domain_len; __i++) {
      domain.add(Serialization.readString(bb));
    }
  }

  @SuppressWarnings("all")
  public boolean equals(Object o) {
    if(!(o instanceof MLNPredicate))
      return false;
    MLNPredicate other = (MLNPredicate) o;
    return
      name.equals(other.name) &&
      domain.equals(other.domain) &&
      true;
  }

  @SuppressWarnings("all")
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    long tmp;
    result = prime * result + (this.name == null ? 0 : this.name.hashCode());
    result = prime * result + (this.domain == null ? 0 : this.domain.hashCode());
    return result;
  }
} // class MLNPredicate

