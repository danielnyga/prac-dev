/* Auto-generated by genmsg_java.py for file /home/ai/Documents/Aptana_Studio_3_Workspace/pracmln/rosmln/msg/MLNInference.msg */

package ros.pkg.rosmln.msg;

import java.nio.ByteBuffer;

public class MLNInference extends ros.communication.Message {

  public java.util.ArrayList<java.lang.String> evidence = new java.util.ArrayList<java.lang.String>();
  public java.util.ArrayList<ros.pkg.rosmln.msg.MRFClique> cliques = new java.util.ArrayList<ros.pkg.rosmln.msg.MRFClique>();

  public MLNInference() {
  }

  public static java.lang.String __s_getDataType() { return "rosmln/MLNInference"; }
  public java.lang.String getDataType() { return __s_getDataType(); }
  public static java.lang.String __s_getMD5Sum() { return "a323c7ba8c5b0b3dd633858385013cce"; }
  public java.lang.String getMD5Sum() { return __s_getMD5Sum(); }
  public static java.lang.String __s_getMessageDefinition() { return "string[] evidence\n" +
"MRFClique[] cliques\n" +
"================================================================================\n" +
"MSG: rosmln/MRFClique\n" +
"string[] variables\n" +
""; }
  public java.lang.String getMessageDefinition() { return __s_getMessageDefinition(); }

  public MLNInference clone() {
    MLNInference c = new MLNInference();
    c.deserialize(serialize(0));
    return c;
  }

  public void setTo(ros.communication.Message m) {
    deserialize(m.serialize(0));
  }

  public int serializationLength() {
    int __l = 0;
    __l += 4;
    for(java.lang.String val : evidence) {
      __l += 4 + val.length();
    }
    __l += 4;
    for(ros.pkg.rosmln.msg.MRFClique val : cliques) {
      __l += val.serializationLength();
    }
    return __l;
  }

  public void serialize(ByteBuffer bb, int seq) {
    bb.putInt(evidence.size());
    for(java.lang.String val : evidence) {
      Serialization.writeString(bb, val);
    }
    bb.putInt(cliques.size());
    for(ros.pkg.rosmln.msg.MRFClique val : cliques) {
      val.serialize(bb, seq);
    }
  }

  public void deserialize(ByteBuffer bb) {

    int __evidence_len = bb.getInt();
    evidence = new java.util.ArrayList<java.lang.String>(__evidence_len);
    for(int __i=0; __i<__evidence_len; __i++) {
      evidence.add(Serialization.readString(bb));
    }

    int __cliques_len = bb.getInt();
    cliques = new java.util.ArrayList<ros.pkg.rosmln.msg.MRFClique>(__cliques_len);
    for(int __i=0; __i<__cliques_len; __i++) {
      ros.pkg.rosmln.msg.MRFClique __tmp = new ros.pkg.rosmln.msg.MRFClique();
      __tmp.deserialize(bb);
      cliques.add(__tmp);;
    }
  }

  @SuppressWarnings("all")
  public boolean equals(Object o) {
    if(!(o instanceof MLNInference))
      return false;
    MLNInference other = (MLNInference) o;
    return
      evidence.equals(other.evidence) &&
      cliques.equals(other.cliques) &&
      true;
  }

  @SuppressWarnings("all")
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    long tmp;
    result = prime * result + (this.evidence == null ? 0 : this.evidence.hashCode());
    result = prime * result + (this.cliques == null ? 0 : this.cliques.hashCode());
    return result;
  }
} // class MLNInference

