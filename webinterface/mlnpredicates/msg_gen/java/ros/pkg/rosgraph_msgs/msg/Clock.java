/* Auto-generated by genmsg_java.py for file /opt/ros/hydro/share/rosgraph_msgs/msg/Clock.msg */

package ros.pkg.rosgraph_msgs.msg;

import java.nio.ByteBuffer;

public class Clock extends ros.communication.Message {

  public ros.communication.Time clock = new ros.communication.Time();

  public Clock() {
  }

  public static java.lang.String __s_getDataType() { return "rosgraph_msgs/Clock"; }
  public java.lang.String getDataType() { return __s_getDataType(); }
  public static java.lang.String __s_getMD5Sum() { return "a9c97c1d230cfc112e270351a944ee47"; }
  public java.lang.String getMD5Sum() { return __s_getMD5Sum(); }
  public static java.lang.String __s_getMessageDefinition() { return "# roslib/Clock is used for publishing simulated time in ROS. \n" +
"# This message simply communicates the current time.\n" +
"# For more information, see http://www.ros.org/wiki/Clock\n" +
"time clock\n" +
"\n" +
""; }
  public java.lang.String getMessageDefinition() { return __s_getMessageDefinition(); }

  public Clock clone() {
    Clock c = new Clock();
    c.deserialize(serialize(0));
    return c;
  }

  public void setTo(ros.communication.Message m) {
    deserialize(m.serialize(0));
  }

  public int serializationLength() {
    int __l = 0;
    __l += 8; // clock
    return __l;
  }

  public void serialize(ByteBuffer bb, int seq) {
    Serialization.writeTime(bb, clock);
  }

  public void deserialize(ByteBuffer bb) {
    clock = Serialization.readTime(bb);
  }

  @SuppressWarnings("all")
  public boolean equals(Object o) {
    if(!(o instanceof Clock))
      return false;
    Clock other = (Clock) o;
    return
      clock.equals(other.clock) &&
      true;
  }

  @SuppressWarnings("all")
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    long tmp;
    result = prime * result + (this.clock == null ? 0 : this.clock.hashCode());
    return result;
  }
} // class Clock

